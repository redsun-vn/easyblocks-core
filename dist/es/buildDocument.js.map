{"version":3,"file":"buildDocument.js","sources":["../../src/buildDocument.ts"],"sourcesContent":["import { buildEntry } from \"./buildEntry\";\r\nimport type {\r\n  RequestedExternalData,\r\n  Document,\r\n  Config,\r\n  RenderableDocument,\r\n} from \"./types\";\r\nimport { serialize } from \"@/utils\";\r\n\r\nasync function buildDocument({\r\n  documentId,\r\n  config,\r\n  locale,\r\n}: {\r\n  documentId: string;\r\n  config: Config;\r\n  locale: string;\r\n}): Promise<{\r\n  renderableDocument: RenderableDocument;\r\n  externalData: RequestedExternalData;\r\n}> {\r\n  const { entry } = await resolveEntryForDocument({\r\n    documentId,\r\n    config,\r\n    locale,\r\n  });\r\n\r\n  const { meta, externalData, renderableContent, configAfterAuto } = buildEntry(\r\n    {\r\n      entry,\r\n      config,\r\n      locale,\r\n    }\r\n  );\r\n\r\n  return {\r\n    renderableDocument: {\r\n      renderableContent,\r\n      meta: serialize(meta),\r\n      configAfterAuto,\r\n    },\r\n    externalData,\r\n  };\r\n}\r\n\r\nexport { buildDocument };\r\n\r\nasync function resolveEntryForDocument({\r\n  documentId,\r\n  config,\r\n  locale,\r\n}: {\r\n  documentId: string;\r\n  config: Config;\r\n  locale: string;\r\n}): Promise<Document> {\r\n  try {\r\n    const documentResponse = await config.backend.documents.get({\r\n      id: documentId,\r\n      locale,\r\n    });\r\n\r\n    if (!documentResponse) {\r\n      throw new Error(`Document with id ${documentId} not found.`);\r\n    }\r\n\r\n    return documentResponse;\r\n  } catch {\r\n    throw new Error(`Error fetching document with id ${documentId}.`);\r\n  }\r\n}\r\n"],"names":["buildDocument","_ref","documentId","config","locale","entry","resolveEntryForDocument","meta","externalData","renderableContent","configAfterAuto","buildEntry","renderableDocument","serialize","_ref2","documentResponse","backend","documents","get","id","Error"],"mappings":";;;;AASA,eAAeA,aAAaA,CAAAC,IAAA,EAWzB;EAAA,IAX0B;IAC3BC,UAAU;IACVC,MAAM;AACNC,IAAAA,MAAAA;AAKF,GAAC,GAAAH,IAAA,CAAA;EAIC,MAAM;AAAEI,IAAAA,KAAAA;GAAO,GAAG,MAAMC,uBAAuB,CAAC;IAC9CJ,UAAU;IACVC,MAAM;AACNC,IAAAA,MAAAA;AACF,GAAC,CAAC,CAAA;EAEF,MAAM;IAAEG,IAAI;IAAEC,YAAY;IAAEC,iBAAiB;AAAEC,IAAAA,eAAAA;GAAiB,GAAGC,UAAU,CAC3E;IACEN,KAAK;IACLF,MAAM;AACNC,IAAAA,MAAAA;AACF,GACF,CAAC,CAAA;EAED,OAAO;AACLQ,IAAAA,kBAAkB,EAAE;MAClBH,iBAAiB;AACjBF,MAAAA,IAAI,EAAEM,SAAS,CAACN,IAAI,CAAC;AACrBG,MAAAA,eAAAA;KACD;AACDF,IAAAA,YAAAA;GACD,CAAA;AACH,CAAA;AAIA,eAAeF,uBAAuBA,CAAAQ,KAAA,EAQhB;EAAA,IARiB;IACrCZ,UAAU;IACVC,MAAM;AACNC,IAAAA,MAAAA;AAKF,GAAC,GAAAU,KAAA,CAAA;EACC,IAAI;IACF,MAAMC,gBAAgB,GAAG,MAAMZ,MAAM,CAACa,OAAO,CAACC,SAAS,CAACC,GAAG,CAAC;AAC1DC,MAAAA,EAAE,EAAEjB,UAAU;AACdE,MAAAA,MAAAA;AACF,KAAC,CAAC,CAAA;IAEF,IAAI,CAACW,gBAAgB,EAAE;AACrB,MAAA,MAAM,IAAIK,KAAK,CAAC,CAAoBlB,iBAAAA,EAAAA,UAAU,aAAa,CAAC,CAAA;AAC9D,KAAA;AAEA,IAAA,OAAOa,gBAAgB,CAAA;AACzB,GAAC,CAAC,MAAM;AACN,IAAA,MAAM,IAAIK,KAAK,CAAC,CAAmClB,gCAAAA,EAAAA,UAAU,GAAG,CAAC,CAAA;AACnE,GAAA;AACF;;;;"}