{"version":3,"file":"resop.js","sources":["../../../src/responsiveness/resop.ts"],"sourcesContent":["import { Devices, ResponsiveValue, TrulyResponsiveValue } from \"../types\";\r\n\r\ntype Values = { [key: string]: any };\r\n\r\nexport function resop<\r\n  Input extends Record<string, ResponsiveValue<unknown>>,\r\n  ScalarResult extends Record<string, unknown>\r\n>(\r\n  config: Input,\r\n  callback: (\r\n    scalarInput: Scalar<Input>,\r\n    breakpointIndex: string\r\n  ) => ScalarResult,\r\n  devices: Devices\r\n): Responsify<ScalarResult> {\r\n  // Decompose config into scalar configs\r\n  const scalarConfigs: Record<string, Scalar<Input>> = {};\r\n\r\n  devices.forEach((device) => {\r\n    scalarConfigs[device.id] = scalarizeConfig(config, device.id);\r\n  });\r\n\r\n  const scalarOutputs: Record<string, any> = {};\r\n\r\n  // run callback for scalar configs\r\n  devices.forEach((device) => {\r\n    scalarOutputs[device.id] = callback(scalarConfigs[device.id], device.id);\r\n  });\r\n\r\n  return squashCSSResults(scalarOutputs, devices);\r\n}\r\n\r\nfunction squashCSSResults(\r\n  scalarValues: { [key: string]: any },\r\n  devices: Devices,\r\n  disableNesting?: boolean\r\n): any {\r\n  // Let's check whether scalarValues represent object (for nesting) or a scalar value.\r\n  let objectsNum = 0;\r\n  let noObjectsNum = 0;\r\n  let arraysNum = 0;\r\n\r\n  for (const breakpointName in scalarValues) {\r\n    const val = scalarValues[breakpointName];\r\n\r\n    if (Array.isArray(val) && !disableNesting) {\r\n      arraysNum++;\r\n    } else if (\r\n      typeof val === \"object\" &&\r\n      val !== null &&\r\n      !Array.isArray(val) &&\r\n      !disableNesting\r\n    ) {\r\n      objectsNum++;\r\n    } else if (val !== null && val !== undefined) {\r\n      noObjectsNum++;\r\n    }\r\n  }\r\n\r\n  // Only one flag can be > 0!!! Otherwise breakpoints return incompatible types\r\n  if (\r\n    (objectsNum > 0 && (noObjectsNum > 0 || arraysNum > 0)) ||\r\n    (arraysNum > 0 && (noObjectsNum > 0 || objectsNum > 0)) ||\r\n    (noObjectsNum > 0 && (arraysNum > 0 || objectsNum > 0))\r\n  ) {\r\n    throw new Error(\r\n      \"This shouldn't happen. Mismatched types for different breakpoints!!!\"\r\n    );\r\n  }\r\n\r\n  if (arraysNum > 0) {\r\n    let biggestArrayLength = 0;\r\n\r\n    for (const breakpoint in scalarValues) {\r\n      biggestArrayLength = Math.max(\r\n        biggestArrayLength,\r\n        scalarValues[breakpoint].length\r\n      ); // {...allKeysObject, ...scalarValues[breakpoint]};\r\n    }\r\n\r\n    const ret: any[] = [];\r\n\r\n    for (let i = 0; i < biggestArrayLength; i++) {\r\n      const newScalarValues: { [key: string]: any } = {};\r\n\r\n      for (const breakpoint in scalarValues) {\r\n        let value: any = undefined;\r\n\r\n        if (scalarValues[breakpoint]) {\r\n          value = scalarValues[breakpoint][i];\r\n        }\r\n\r\n        newScalarValues[breakpoint] = value;\r\n      }\r\n\r\n      ret[i] = squashCSSResults(newScalarValues, devices);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  // If object -> recursion\r\n  if (objectsNum > 0) {\r\n    // allKeys is the object that has all the keys from all the scalar configs\r\n    let allKeysObject: { [key: string]: null } = {};\r\n\r\n    /**\r\n     * Scalar values are like:\r\n     *\r\n     * {\r\n     *    b1: { a: 10, b: 20 }\r\n     *    b2: { a: 100, c: 300 }\r\n     * }\r\n     */\r\n\r\n    for (const breakpoint in scalarValues) {\r\n      allKeysObject = { ...allKeysObject, ...scalarValues[breakpoint] };\r\n    }\r\n\r\n    // scalarValues.forEach(scalarConfig => {\r\n    //     allKeysObject = {...allKeysObject, ...scalarConfig};\r\n    // });\r\n\r\n    const allKeys = Object.keys(allKeysObject);\r\n    const ret: Values = {};\r\n\r\n    /**\r\n     * All keys are like: ['a', 'b', 'c']\r\n     *\r\n     * All used keys across all breakpoints\r\n     */\r\n\r\n    allKeys.forEach((key) => {\r\n      const newScalarValues: { [key: string]: any } = {};\r\n\r\n      for (const breakpoint in scalarValues) {\r\n        let value: any = undefined;\r\n\r\n        if (scalarValues[breakpoint]) {\r\n          value = scalarValues[breakpoint][key];\r\n        }\r\n\r\n        newScalarValues[breakpoint] = value;\r\n      }\r\n      /**\r\n       * newScalarValues values are like:\r\n       *\r\n       * For key 'a':\r\n       * {\r\n       *      b1: 10,\r\n       *      b2: 100\r\n       * }\r\n       *\r\n       * For key 'b':\r\n       * {\r\n       *     b1: 20,\r\n       *     b2: undefined\r\n       * }\r\n       *\r\n       */\r\n\r\n      /**\r\n       * For fonts we don't want nesting + recursion. We want entire object to be passed to results.\r\n       *\r\n       * Later, renderer must know how to render xfont property :)\r\n       *\r\n       * Otherwise, media query conflicts arise and bad values are set.\r\n       */\r\n      ret[key] = squashCSSResults(newScalarValues, devices, key === \"xfont\");\r\n    });\r\n\r\n    return ret;\r\n  }\r\n\r\n  // Here we are sure we have scalar value, not some object to be nested. We must do 2 things:\r\n  // - add \"unset\" instead of null / undefined\r\n  // - create ResponsiveValue and normalize\r\n\r\n  for (const key in scalarValues) {\r\n    if (scalarValues[key] === undefined || scalarValues[key] === null) {\r\n      scalarValues[key] = \"unset\";\r\n    }\r\n  }\r\n\r\n  // Values (non-objects -> no nesting)\r\n  return responsiveValueNormalize({ ...scalarValues, $res: true }, devices);\r\n}\r\n\r\nfunction responsiveValueForceGet<T>(\r\n  value: ResponsiveValue<T>,\r\n  deviceId: string\r\n): T {\r\n  if (isTrulyResponsiveValue(value)) {\r\n    if (value[deviceId] === undefined) {\r\n      const error = `You called responsiveValueForceGet with value ${JSON.stringify(\r\n        value\r\n      )} and deviceId: ${deviceId}. Value undefined.`;\r\n      throw new Error(error);\r\n    }\r\n    return value[deviceId] as T;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction isTrulyResponsiveValue<T>(\r\n  x: ResponsiveValue<T>\r\n): x is TrulyResponsiveValue<T> {\r\n  return (\r\n    typeof x === \"object\" &&\r\n    x !== null &&\r\n    !Array.isArray(x) &&\r\n    (x as TrulyResponsiveValue<T>).$res === true\r\n  );\r\n}\r\n\r\nfunction responsiveValueNormalize<T>(\r\n  arg: ResponsiveValue<T>,\r\n  devices: Devices\r\n): ResponsiveValue<T> {\r\n  if (!isTrulyResponsiveValue(arg)) {\r\n    return arg;\r\n  }\r\n\r\n  let previousVal: any = undefined;\r\n\r\n  const ret: TrulyResponsiveValue<any> = {\r\n    $res: true,\r\n  };\r\n\r\n  let numberOfDefinedValues = 0;\r\n\r\n  for (let i = devices.length - 1; i >= 0; i--) {\r\n    const breakpoint = devices[i].id;\r\n    const val = arg[breakpoint];\r\n\r\n    // TODO: if values are objects, it's to do\r\n    if (typeof val === \"object\" && val !== null) {\r\n      if (JSON.stringify(val) !== JSON.stringify(previousVal)) {\r\n        ret[breakpoint] = val;\r\n        previousVal = val;\r\n        numberOfDefinedValues++;\r\n      }\r\n    } else {\r\n      if (val !== undefined && val !== previousVal) {\r\n        ret[breakpoint] = val;\r\n        previousVal = val;\r\n        numberOfDefinedValues++;\r\n      }\r\n    }\r\n\r\n    // [x, null, null, y] => [x, y]\r\n    if (i < devices.length - 1) {\r\n      const nextBreakpoint = devices[i + 1].id;\r\n\r\n      if (\r\n        numberOfDefinedValues === 1 &&\r\n        ret[breakpoint] === undefined &&\r\n        ret[nextBreakpoint] !== undefined\r\n      ) {\r\n        ret[breakpoint] = ret[nextBreakpoint];\r\n        delete ret[nextBreakpoint];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (numberOfDefinedValues === 1) {\r\n    return ret[devices[0].id];\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\ntype UnwrapResponsiveValue<T> = T extends ResponsiveValue<infer Value>\r\n  ? Value\r\n  : never;\r\n\r\ntype Scalar<Input extends Record<string, ResponsiveValue<unknown>>> = {\r\n  [key in keyof Input]: UnwrapResponsiveValue<Input[key]>;\r\n};\r\n\r\ntype Responsify<T extends Record<string, unknown>> = {\r\n  [key in keyof T]: T[key] extends Record<string, unknown>\r\n    ? Responsify<T[key]>\r\n    : ResponsiveValue<T[key]>;\r\n};\r\n\r\nfunction scalarizeConfig(config: Values, breakpoint: string): any {\r\n  const ret: Record<string, any> = {};\r\n\r\n  for (const prop in config) {\r\n    ret[prop] = responsiveValueForceGet(config[prop], breakpoint);\r\n  }\r\n\r\n  return ret;\r\n}\r\n"],"names":["resop","config","callback","devices","scalarConfigs","forEach","device","id","scalarizeConfig","scalarOutputs","squashCSSResults","scalarValues","disableNesting","objectsNum","noObjectsNum","arraysNum","breakpointName","val","Array","isArray","undefined","Error","biggestArrayLength","breakpoint","Math","max","length","ret","i","newScalarValues","value","allKeysObject","allKeys","Object","keys","key","responsiveValueNormalize","$res","responsiveValueForceGet","deviceId","isTrulyResponsiveValue","error","JSON","stringify","x","arg","previousVal","numberOfDefinedValues","nextBreakpoint","prop"],"mappings":"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"}