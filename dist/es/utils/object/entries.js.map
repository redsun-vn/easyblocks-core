{"version":3,"file":"entries.js","sources":["../../../../src/utils/object/entries.ts"],"sourcesContent":["type Entries<T> = {\n  [K in keyof T]: [K, T[K]];\n}[keyof T][];\n\n/**\n * `Object.entries` is badly typed for its reasons and this function just fixes it.\n * https://stackoverflow.com/questions/55012174/why-doesnt-object-keys-return-a-keyof-type-in-typescript\n */\nfunction entries<T extends object>(o: T): Entries<T> {\n  return Object.entries(o) as Entries<T>;\n}\n\nexport { entries };\n"],"names":["entries","o","Object"],"mappings":";AAIA;AACA;AACA;AACA;AACA,SAASA,OAAOA,CAAmBC,CAAI,EAAc;AACnD,EAAA,OAAOC,MAAM,CAACF,OAAO,CAACC,CAAC,CAAC,CAAA;AAC1B;;;;"}