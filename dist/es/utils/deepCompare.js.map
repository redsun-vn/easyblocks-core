{"version":3,"file":"deepCompare.js","sources":["../../../src/utils/deepCompare.ts"],"sourcesContent":["function deepCompare(...objectsToCompare: Array<Record<string, any>>): boolean {\r\n  for (let index = 0; index < objectsToCompare.length - 1; index++) {\r\n    const currentObject = sortObject(objectsToCompare[index]);\r\n    const nextObject = sortObject(objectsToCompare[index + 1]);\r\n\r\n    const areObjectsHashesEqual =\r\n      JSON.stringify(currentObject) === JSON.stringify(nextObject);\r\n\r\n    if (!areObjectsHashesEqual) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction sortObject(value: unknown) {\r\n  if (typeof value !== \"object\") {\r\n    return value;\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return [...value].sort();\r\n  }\r\n\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n\r\n  const sortedObject: Record<string, any> = {};\r\n  const objectKeys = Object.keys(value).sort();\r\n\r\n  objectKeys.forEach((key) => {\r\n    sortedObject[key] = sortObject((value as Record<string, any>)[key]);\r\n  });\r\n\r\n  return sortedObject;\r\n}\r\n\r\nexport { deepCompare, sortObject };\r\n"],"names":["deepCompare","index","arguments","length","currentObject","sortObject","undefined","nextObject","areObjectsHashesEqual","JSON","stringify","value","Array","isArray","sort","sortedObject","objectKeys","Object","keys","forEach","key"],"mappings":";AAAA,SAASA,WAAWA,GAA2D;AAC7E,EAAA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGC,SAAA,CAAiBC,MAAM,GAAG,CAAC,EAAEF,KAAK,EAAE,EAAE;AAChE,IAAA,MAAMG,aAAa,GAAGC,UAAU,CAAkBJ,KAAK,GAAA,CAAA,IAAAC,SAAA,CAAAC,MAAA,IAALF,KAAK,GAAAK,SAAA,GAAAJ,SAAA,CAALD,KAAK,CAAC,CAAC,CAAA;IACzD,MAAMM,UAAU,GAAGF,UAAU,CAAkBJ,KAAK,GAAG,CAAC,GAAA,CAAA,IAAAC,SAAA,CAAAC,MAAA,IAATF,KAAK,GAAG,CAAC,GAAAK,SAAA,GAAAJ,SAAA,CAATD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAA;AAE1D,IAAA,MAAMO,qBAAqB,GACzBC,IAAI,CAACC,SAAS,CAACN,aAAa,CAAC,KAAKK,IAAI,CAACC,SAAS,CAACH,UAAU,CAAC,CAAA;IAE9D,IAAI,CAACC,qBAAqB,EAAE;AAC1B,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AACF,GAAA;AAEA,EAAA,OAAO,IAAI,CAAA;AACb,CAAA;AAEA,SAASH,UAAUA,CAACM,KAAc,EAAE;AAClC,EAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AAC7B,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;AAEA,EAAA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;AACxB,IAAA,OAAO,CAAC,GAAGA,KAAK,CAAC,CAACG,IAAI,EAAE,CAAA;AAC1B,GAAA;EAEA,IAAIH,KAAK,KAAK,IAAI,EAAE;AAClB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;EAEA,MAAMI,YAAiC,GAAG,EAAE,CAAA;EAC5C,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACP,KAAK,CAAC,CAACG,IAAI,EAAE,CAAA;AAE5CE,EAAAA,UAAU,CAACG,OAAO,CAAEC,GAAG,IAAK;IAC1BL,YAAY,CAACK,GAAG,CAAC,GAAGf,UAAU,CAAEM,KAAK,CAAyBS,GAAG,CAAC,CAAC,CAAA;AACrE,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOL,YAAY,CAAA;AACrB;;;;"}