{"version":3,"file":"nonNullable.js","sources":["../../../../src/utils/array/nonNullable.ts"],"sourcesContent":["/**\n * Returns a new function that filters nullable elements to be used as callback of `.filter` method.\n * It's useful because it has already defined guard which otherwise would be repeated in many places\n * and also it automatically changes the return value of filter function by extracting `null` and `undefined` types.\n *\n * Usage:\n * ```\n * const onlyNonNullable = nullableElements.filter<TypeOfCollectionItem>(nonNullable())\n * ```\n */\nfunction nonNullable() {\n  return function <T extends Array<any>>(\n    value: T[number]\n  ): value is NonNullable<T[number]> {\n    return value != null;\n  };\n}\n\nexport { nonNullable };\n"],"names":["nonNullable","value"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAWA,GAAG;EACrB,OAAO,UACLC,KAAgB,EACiB;IACjC,OAAOA,KAAK,IAAI,IAAI,CAAA;GACrB,CAAA;AACH;;;;"}