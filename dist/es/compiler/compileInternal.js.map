{"version":3,"file":"compileInternal.js","sources":["../../../src/compiler/compileInternal.ts"],"sourcesContent":["import {\n  CompilationMetadata,\n  CompiledShopstoryComponentConfig,\n  NoCodeComponentEntry,\n} from \"../types\";\nimport { CompilationCache } from \"./CompilationCache\";\nimport { normalize } from \"./normalize\";\nimport { compileComponent } from \"./compileComponent\";\nimport { CompilationContextType, ContextProps } from \"./types\";\nimport { getDevicesWidths } from \"./devices\";\n\ntype CompileInternalReturnType = {\n  compiled: CompiledShopstoryComponentConfig;\n  meta: CompilationMetadata;\n  configAfterAuto?: NoCodeComponentEntry;\n};\n\nexport function compileInternal(\n  configComponent: NoCodeComponentEntry,\n  compilationContext: CompilationContextType,\n  cache = new CompilationCache()\n): CompileInternalReturnType {\n  const normalizedConfig = normalize(configComponent, compilationContext);\n\n  const meta: CompilationMetadata = {\n    vars: {\n      definitions: {\n        links: [],\n        actions: [],\n        components: [],\n        textModifiers: [],\n      },\n      devices: compilationContext.devices,\n      locale: compilationContext.contextParams.locale,\n    },\n  };\n\n  const contextProps: ContextProps = {\n    $width: getDevicesWidths(compilationContext.devices),\n    $widthAuto: {\n      $res: true,\n      ...Object.fromEntries(\n        compilationContext.devices.map((d) => [d.id, false])\n      ),\n    },\n  };\n\n  const compilationArtifacts = compileComponent(\n    normalizedConfig,\n    compilationContext,\n    contextProps,\n    meta,\n    cache\n  );\n\n  const ret: CompileInternalReturnType = {\n    compiled:\n      compilationArtifacts.compiledComponentConfig as CompiledShopstoryComponentConfig,\n    meta: {\n      vars: meta.vars,\n    },\n  };\n\n  if (compilationContext.isEditing) {\n    return {\n      ...ret,\n      configAfterAuto: compilationArtifacts.configAfterAuto,\n    };\n  }\n\n  return ret;\n}\n"],"names":["compileInternal","configComponent","compilationContext","cache","arguments","length","undefined","CompilationCache","normalizedConfig","normalize","meta","vars","definitions","links","actions","components","textModifiers","devices","locale","contextParams","contextProps","$width","getDevicesWidths","$widthAuto","$res","Object","fromEntries","map","d","id","compilationArtifacts","compileComponent","ret","compiled","compiledComponentConfig","isEditing","configAfterAuto"],"mappings":";;;;;;AAiBO,SAASA,eAAeA,CAC7BC,eAAqC,EACrCC,kBAA0C,EAEf;AAAA,EAAA,IAD3BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,GAAAD,CAAAA,IAAAA,SAAA,CAAAE,CAAAA,CAAAA,KAAAA,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,IAAIG,gBAAgB,EAAE,CAAA;AAE9B,EAAA,MAAMC,gBAAgB,GAAGC,SAAS,CAACR,eAAe,EAAEC,kBAAkB,CAAC,CAAA;AAEvE,EAAA,MAAMQ,IAAyB,GAAG;AAChCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,EAAE;AACTC,QAAAA,OAAO,EAAE,EAAE;AACXC,QAAAA,UAAU,EAAE,EAAE;AACdC,QAAAA,aAAa,EAAE,EAAA;OAChB;MACDC,OAAO,EAAEf,kBAAkB,CAACe,OAAO;AACnCC,MAAAA,MAAM,EAAEhB,kBAAkB,CAACiB,aAAa,CAACD,MAAAA;AAC3C,KAAA;GACD,CAAA;AAED,EAAA,MAAME,YAA0B,GAAG;AACjCC,IAAAA,MAAM,EAAEC,gBAAgB,CAACpB,kBAAkB,CAACe,OAAO,CAAC;AACpDM,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,IAAI;AACV,MAAA,GAAGC,MAAM,CAACC,WAAW,CACnBxB,kBAAkB,CAACe,OAAO,CAACU,GAAG,CAAEC,CAAC,IAAK,CAACA,CAAC,CAACC,EAAE,EAAE,KAAK,CAAC,CACrD,CAAA;AACF,KAAA;GACD,CAAA;AAED,EAAA,MAAMC,oBAAoB,GAAGC,gBAAgB,CAC3CvB,gBAAgB,EAChBN,kBAAkB,EAClBkB,YAAY,EACZV,IAAI,EACJP,KACF,CAAC,CAAA;AAED,EAAA,MAAM6B,GAA8B,GAAG;IACrCC,QAAQ,EACNH,oBAAoB,CAACI,uBAA2D;AAClFxB,IAAAA,IAAI,EAAE;MACJC,IAAI,EAAED,IAAI,CAACC,IAAAA;AACb,KAAA;GACD,CAAA;EAED,IAAIT,kBAAkB,CAACiC,SAAS,EAAE;IAChC,OAAO;AACL,MAAA,GAAGH,GAAG;MACNI,eAAe,EAAEN,oBAAoB,CAACM,eAAAA;KACvC,CAAA;AACH,GAAA;AAEA,EAAA,OAAOJ,GAAG,CAAA;AACZ;;;;"}