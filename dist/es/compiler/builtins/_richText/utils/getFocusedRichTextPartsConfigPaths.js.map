{"version":3,"file":"getFocusedRichTextPartsConfigPaths.js","sources":["../../../../../../src/compiler/builtins/$richText/utils/getFocusedRichTextPartsConfigPaths.ts"],"sourcesContent":["import { Editor, Path, Range, Text } from \"slate\";\r\n\r\nfunction getFocusedRichTextPartsConfigPaths(editor: Editor) {\r\n  if (editor.selection !== null) {\r\n    const isBackward = Range.isBackward(editor.selection);\r\n    const anchorProperty = isBackward ? \"focus\" : \"anchor\";\r\n    const focusProperty = isBackward ? \"anchor\" : \"focus\";\r\n    const anchor = editor.selection[anchorProperty];\r\n    const focus = editor.selection[focusProperty];\r\n\r\n    const selectedTextNodes = Array.from(\r\n      Editor.nodes<Text>(editor, {\r\n        match: Text.isText,\r\n      })\r\n    );\r\n\r\n    if (selectedTextNodes.length === 1) {\r\n      const range = {\r\n        start: anchor.offset,\r\n        end: focus.offset,\r\n      };\r\n\r\n      const [textNode, textPath] = selectedTextNodes[0];\r\n\r\n      return [buildFocusedRichTextPartConfigPath(textNode, textPath, range)];\r\n    }\r\n\r\n    const focusedRichTextPartsConfigPaths = selectedTextNodes\r\n      .map(([textNode, textPath], textEntryIndex) => {\r\n        if (textNode.text === \"\") {\r\n          return null;\r\n        }\r\n\r\n        let range: { start: number; end: number } | null = null;\r\n\r\n        if (textEntryIndex === 0) {\r\n          range = {\r\n            start: anchor.offset,\r\n            end: textNode.text.length,\r\n          };\r\n        }\r\n\r\n        if (textEntryIndex === selectedTextNodes.length - 1) {\r\n          range = {\r\n            start: 0,\r\n            end: focus.offset,\r\n          };\r\n        }\r\n\r\n        return buildFocusedRichTextPartConfigPath(textNode, textPath, range);\r\n      })\r\n      .filter<string>((configPath): configPath is string => {\r\n        return configPath !== null;\r\n      });\r\n\r\n    return focusedRichTextPartsConfigPaths;\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nfunction buildFocusedRichTextPartConfigPath(\r\n  textNode: Text,\r\n  path: Path,\r\n  range: { start: number; end: number } | null\r\n) {\r\n  let focusedRichTextPartConfigPath = path.join(\".elements.\");\r\n\r\n  if (\r\n    range !== null &&\r\n    (isPartialSelection(range, textNode) || isCaretSelection(range))\r\n  ) {\r\n    focusedRichTextPartConfigPath += `.{${range.start},${range.end}}`;\r\n  }\r\n\r\n  return focusedRichTextPartConfigPath;\r\n}\r\n\r\nfunction isPartialSelection(\r\n  range: { start: number; end: number },\r\n  textNode: Text\r\n) {\r\n  return range.end - range.start !== textNode.text.length;\r\n}\r\n\r\nfunction isCaretSelection(range: { start: number; end: number }) {\r\n  return range.end - range.start === 0;\r\n}\r\n\r\nexport { getFocusedRichTextPartsConfigPaths };\r\n"],"names":["getFocusedRichTextPartsConfigPaths","editor","selection","isBackward","Range","anchorProperty","focusProperty","anchor","focus","selectedTextNodes","Array","from","Editor","nodes","match","Text","isText","length","range","start","offset","end","textNode","textPath","buildFocusedRichTextPartConfigPath","focusedRichTextPartsConfigPaths","map","_ref","textEntryIndex","text","filter","configPath","path","focusedRichTextPartConfigPath","join","isPartialSelection","isCaretSelection"],"mappings":"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"}