{"version":3,"file":"_richTextPart.js","sources":["../../../../../../src/compiler/builtins/$richText/$richTextPart/$richTextPart.ts"],"sourcesContent":["import { RichTextEditingFunction } from \"../$richText.types\";\r\nimport {\r\n  AnyEditingField,\r\n  CompiledComponentConfig,\r\n  CompiledComponentConfigBase,\r\n  NoCodeComponentEntry,\r\n  NoCodeComponentDefinition,\r\n} from \"../../../../types\";\r\nimport { findPathOfFirstAncestorOfType } from \"../../../parsePath\";\r\nimport { EditableComponentToComponentConfig } from \"../../../types\";\r\nimport { RichTextPartValues, richTextPartStyles } from \"./$richTextPart.styles\";\r\n\r\nconst editing: RichTextEditingFunction = ({\r\n  editingInfo,\r\n  __SECRET_INTERNALS__,\r\n}) => {\r\n  if (!__SECRET_INTERNALS__) {\r\n    throw new Error(\"Missing __SECRET_INTERNALS__\");\r\n  }\r\n\r\n  const { pathPrefix, editorContext } = __SECRET_INTERNALS__;\r\n  const resultFields: Array<AnyEditingField> = [];\r\n\r\n  const richTextPath = findPathOfFirstAncestorOfType(\r\n    pathPrefix,\r\n    \"@easyblocks/rich-text\",\r\n    editorContext.form\r\n  );\r\n\r\n  const richTextBlockPath = findPathOfFirstAncestorOfType(\r\n    pathPrefix,\r\n    \"@easyblocks/rich-text-block-element\",\r\n    editorContext.form\r\n  );\r\n\r\n  resultFields.push(\r\n    {\r\n      type: \"fields\",\r\n      path: richTextPath,\r\n      filters: {\r\n        group: [\"Size\", \"Margins\"],\r\n      },\r\n    },\r\n    {\r\n      type: \"field\",\r\n      path: `${richTextPath}.align`,\r\n    },\r\n    ...editingInfo.fields,\r\n    {\r\n      type: \"field\",\r\n      path: `${richTextBlockPath}.type`,\r\n    },\r\n    {\r\n      type: \"field\",\r\n      path: `${richTextPath}.isListStyleAuto`,\r\n    },\r\n    {\r\n      type: \"field\",\r\n      path: `${richTextPath}.mainFont`,\r\n    },\r\n    {\r\n      type: \"field\",\r\n      path: `${richTextPath}.mainColor`,\r\n    },\r\n    {\r\n      type: \"fields\",\r\n      path: richTextPath,\r\n      filters: {\r\n        group: [\"Accessibility and SEO\"],\r\n      },\r\n    }\r\n  );\r\n\r\n  return {\r\n    fields: resultFields,\r\n  };\r\n};\r\n\r\nconst richTextPartEditableComponent: NoCodeComponentDefinition<RichTextPartValues> =\r\n  {\r\n    id: \"@easyblocks/rich-text-part\",\r\n    label: \"Text\",\r\n    schema: [\r\n      {\r\n        prop: \"value\",\r\n        type: \"string\",\r\n        visible: false,\r\n        group: \"Text\",\r\n      },\r\n      {\r\n        prop: \"font\",\r\n        label: \"Style\",\r\n        type: \"font\",\r\n        group: \"Text\",\r\n      },\r\n      {\r\n        prop: \"color\",\r\n        label: \"Color\",\r\n        type: \"color\",\r\n        group: \"Text\",\r\n      },\r\n      {\r\n        prop: \"TextWrapper\",\r\n        label: \"Text Wrapper\",\r\n        type: \"component\",\r\n        noInline: true,\r\n        accepts: [\"@easyblocks/text-wrapper\"],\r\n        visible: true,\r\n        group: \"Text Wrapper\",\r\n        isLabelHidden: true,\r\n      },\r\n    ],\r\n    editing,\r\n    styles: richTextPartStyles,\r\n  };\r\n\r\ntype RichTextPartComponentConfig = EditableComponentToComponentConfig<\r\n  typeof richTextPartEditableComponent\r\n> & {\r\n  value: string;\r\n  color: Record<string, any>;\r\n  font: Record<string, any>;\r\n  TextWrapper: [NoCodeComponentEntry] | [];\r\n};\r\n\r\ntype RichTextPartCompiledComponentConfig = CompiledComponentConfigBase<\r\n  RichTextPartComponentConfig[\"_component\"],\r\n  {\r\n    value: string;\r\n    color: Record<string, any>;\r\n    font: Record<string, any>;\r\n  }\r\n> & {\r\n  styled: NonNullable<ReturnType<typeof richTextPartStyles>[\"styled\"]>;\r\n  components: {\r\n    Text: Record<string, any>;\r\n    TextWrapper: Array<CompiledComponentConfig>;\r\n  };\r\n};\r\n\r\nexport { richTextPartEditableComponent };\r\nexport type {\r\n  RichTextPartCompiledComponentConfig,\r\n  RichTextPartComponentConfig,\r\n};\r\n"],"names":["editing","_ref","editingInfo","__SECRET_INTERNALS__","Error","pathPrefix","editorContext","resultFields","richTextPath","findPathOfFirstAncestorOfType","form","richTextBlockPath","push","type","path","filters","group","fields","richTextPartEditableComponent","id","label","schema","prop","visible","noInline","accepts","isLabelHidden","styles","richTextPartStyles"],"mappings":"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"}