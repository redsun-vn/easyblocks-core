{"version":3,"file":"_richTextPart.js","sources":["../../../../../../src/compiler/builtins/$richText/$richTextPart/$richTextPart.ts"],"sourcesContent":["import { RichTextEditingFunction } from \"../$richText.types\";\nimport {\n  AnyEditingField,\n  CompiledComponentConfig,\n  CompiledComponentConfigBase,\n  NoCodeComponentEntry,\n  NoCodeComponentDefinition,\n} from \"../../../../types\";\nimport { findPathOfFirstAncestorOfType } from \"../../../parsePath\";\nimport { EditableComponentToComponentConfig } from \"../../../types\";\nimport { RichTextPartValues, richTextPartStyles } from \"./$richTextPart.styles\";\n\nconst editing: RichTextEditingFunction = ({\n  editingInfo,\n  __SECRET_INTERNALS__,\n}) => {\n  if (!__SECRET_INTERNALS__) {\n    throw new Error(\"Missing __SECRET_INTERNALS__\");\n  }\n\n  const { pathPrefix, editorContext } = __SECRET_INTERNALS__;\n  const resultFields: Array<AnyEditingField> = [];\n\n  const richTextPath = findPathOfFirstAncestorOfType(\n    pathPrefix,\n    \"@easyblocks/rich-text\",\n    editorContext.form\n  );\n\n  const richTextBlockPath = findPathOfFirstAncestorOfType(\n    pathPrefix,\n    \"@easyblocks/rich-text-block-element\",\n    editorContext.form\n  );\n\n  resultFields.push(\n    {\n      type: \"fields\",\n      path: richTextPath,\n      filters: {\n        group: [\"Size\", \"Margins\"],\n      },\n    },\n    {\n      type: \"field\",\n      path: `${richTextPath}.align`,\n    },\n    ...editingInfo.fields,\n    {\n      type: \"field\",\n      path: `${richTextBlockPath}.type`,\n    },\n    {\n      type: \"field\",\n      path: `${richTextPath}.isListStyleAuto`,\n    },\n    {\n      type: \"field\",\n      path: `${richTextPath}.mainFont`,\n    },\n    {\n      type: \"field\",\n      path: `${richTextPath}.mainColor`,\n    },\n    {\n      type: \"fields\",\n      path: richTextPath,\n      filters: {\n        group: [\"Accessibility and SEO\"],\n      },\n    }\n  );\n\n  return {\n    fields: resultFields,\n  };\n};\n\nconst richTextPartEditableComponent: NoCodeComponentDefinition<RichTextPartValues> =\n  {\n    id: \"@easyblocks/rich-text-part\",\n    label: \"Text\",\n    schema: [\n      {\n        prop: \"value\",\n        type: \"string\",\n        visible: false,\n        group: \"Text\",\n      },\n      {\n        prop: \"font\",\n        label: \"Style\",\n        type: \"font\",\n        group: \"Text\",\n      },\n      {\n        prop: \"color\",\n        label: \"Color\",\n        type: \"color\",\n        group: \"Text\",\n      },\n      {\n        prop: \"TextWrapper\",\n        label: \"Text Wrapper\",\n        type: \"component\",\n        noInline: true,\n        accepts: [\"@easyblocks/text-wrapper\"],\n        visible: true,\n        group: \"Text Wrapper\",\n        isLabelHidden: true,\n      },\n    ],\n    editing,\n    styles: richTextPartStyles,\n  };\n\ntype RichTextPartComponentConfig = EditableComponentToComponentConfig<\n  typeof richTextPartEditableComponent\n> & {\n  value: string;\n  color: Record<string, any>;\n  font: Record<string, any>;\n  TextWrapper: [NoCodeComponentEntry] | [];\n};\n\ntype RichTextPartCompiledComponentConfig = CompiledComponentConfigBase<\n  RichTextPartComponentConfig[\"_component\"],\n  {\n    value: string;\n    color: Record<string, any>;\n    font: Record<string, any>;\n  }\n> & {\n  styled: NonNullable<ReturnType<typeof richTextPartStyles>[\"styled\"]>;\n  components: {\n    Text: Record<string, any>;\n    TextWrapper: Array<CompiledComponentConfig>;\n  };\n};\n\nexport { richTextPartEditableComponent };\nexport type {\n  RichTextPartCompiledComponentConfig,\n  RichTextPartComponentConfig,\n};\n"],"names":["editing","_ref","editingInfo","__SECRET_INTERNALS__","Error","pathPrefix","editorContext","resultFields","richTextPath","findPathOfFirstAncestorOfType","form","richTextBlockPath","push","type","path","filters","group","fields","richTextPartEditableComponent","id","label","schema","prop","visible","noInline","accepts","isLabelHidden","styles","richTextPartStyles"],"mappings":"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"}