{"version":3,"file":"compileComponent.js","sources":["../../../src/compiler/compileComponent.ts"],"sourcesContent":["import {\r\n  assertDefined,\r\n  bubbleDown,\r\n  deepClone,\r\n  deepCompare,\r\n  dotNotationGet,\r\n  dotNotationSet,\r\n  entries,\r\n  raiseError,\r\n  toArray,\r\n  uniqueId,\r\n} from \"@/utils\";\r\nimport { xxHash32 } from \"js-xxhash\";\r\nimport { isComponentConfig } from \"../checkers\";\r\nimport {\r\n  responsiveValueAt,\r\n  responsiveValueFill,\r\n  responsiveValueNormalize,\r\n} from \"../responsiveness\";\r\nimport {\r\n  AnyEditingField,\r\n  ChildComponentEditingInfo,\r\n  CompilationMetadata,\r\n  CompiledCustomComponentConfig,\r\n  CompiledShopstoryComponentConfig,\r\n  ComponentCollectionLocalisedSchemaProp,\r\n  ComponentCollectionSchemaProp,\r\n  ComponentSchemaProp,\r\n  NoCodeComponentEntry,\r\n  EditingField,\r\n  EditingInfo,\r\n  FieldPortal,\r\n  NoCodeComponentEditingFunctionResult,\r\n  NoCodeComponentStylesFunctionInput,\r\n  ScalarOrCollection,\r\n  SchemaProp,\r\n  SerializedComponentDefinitions,\r\n  SerializedRenderableComponentDefinition,\r\n  SpaceSchemaProp,\r\n  TrulyResponsiveValue,\r\n  CompiledComponentConfig,\r\n} from \"../types\";\r\nimport type {\r\n  CompilationCache,\r\n  CompilationCacheItemValue,\r\n} from \"./CompilationCache\";\r\nimport { applyAutoUsingResponsiveTokens } from \"./applyAutoUsingResponsiveTokens\";\r\nimport { compileBox } from \"./box\";\r\nimport { RichTextComponentConfig } from \"./builtins/$richText/$richText\";\r\nimport { compileComponentValues } from \"./compileComponentValues\";\r\nimport { compileFromSchema } from \"./compileFromSchema\";\r\nimport { ConfigComponentCompilationOutput } from \"./definitions\";\r\nimport { getDevicesWidths } from \"./devices\";\r\nimport {\r\n  findComponentDefinition,\r\n  findComponentDefinitionById,\r\n} from \"./findComponentDefinition\";\r\nimport { getMostCommonValueFromRichTextParts } from \"./getMostCommonValueFromRichTextParts\";\r\nimport { linearizeSpace } from \"./linearizeSpace\";\r\nimport { parsePath } from \"./parsePath\";\r\nimport { resop2, scalarizeConfig } from \"./resop\";\r\nimport {\r\n  Component$$$SchemaProp,\r\n  isExternalSchemaProp,\r\n  isSchemaPropActionTextModifier,\r\n  isSchemaPropCollection,\r\n  isSchemaPropComponent,\r\n  isSchemaPropComponentCollectionLocalised,\r\n  isSchemaPropComponentOrComponentCollection,\r\n  isSchemaPropTextModifier,\r\n} from \"./schema\";\r\nimport { getTinaField } from \"./tinaFieldProviders\";\r\nimport {\r\n  CompilationContextType,\r\n  ContextProps,\r\n  EditingInfoComponent,\r\n  EditingInfoComponentCollection,\r\n  EditorContextType,\r\n  InternalComponentDefinition,\r\n  InternalEditingField,\r\n  InternalEditingFunctionResult,\r\n  InternalEditingInfo,\r\n  InternalRenderableComponentDefinition,\r\n} from \"./types\";\r\nimport { getFallbackLocaleForLocale } from \"../locales\";\r\n\r\ntype ComponentCompilationArtifacts = {\r\n  compiledComponentConfig: CompiledComponentConfig;\r\n  configAfterAuto: NoCodeComponentEntry;\r\n};\r\n\r\nexport function compileComponent(\r\n  editableElement: NoCodeComponentEntry,\r\n  compilationContext: CompilationContextType,\r\n  contextProps: ContextProps, // contextProps are already compiled! They're result of compilation function.\r\n  meta: any,\r\n  cache: CompilationCache,\r\n  parentComponentEditingInfo?:\r\n    | EditingInfoComponent\r\n    | EditingInfoComponentCollection,\r\n  configPrefix = \"\"\r\n): ComponentCompilationArtifacts {\r\n  if (!isComponentConfig(editableElement)) {\r\n    console.error(\r\n      \"[compile] wrong input for compileComponent\",\r\n      editableElement\r\n    );\r\n\r\n    throw new Error(\"[compile] wrong input for compileComponent\");\r\n  }\r\n\r\n  if (contextProps.$width === undefined || contextProps.$width === -1) {\r\n    throw new Error(\r\n      `assertion failed: incorrect $width in compileComponent: ${contextProps.$width}, component: ${editableElement._id}, ${editableElement._component}`\r\n    );\r\n  }\r\n\r\n  const cachedResult = cache.get(editableElement._id);\r\n\r\n  let componentDefinition = findComponentDefinitionById(\r\n    editableElement._component,\r\n    compilationContext\r\n  );\r\n\r\n  if (!componentDefinition) {\r\n    componentDefinition = assertDefined(\r\n      findComponentDefinitionById(\r\n        \"@easyblocks/missing-component\",\r\n        compilationContext\r\n      )\r\n    );\r\n\r\n    const error = `Easyblocks canâ€™t find definition for component \"${editableElement._component}\" in your config. Please contact your developers to resolve this issue.`;\r\n\r\n    editableElement = {\r\n      _component: componentDefinition.id,\r\n      _id: uniqueId(),\r\n      error,\r\n    };\r\n\r\n    console.warn(error);\r\n\r\n    parentComponentEditingInfo = undefined;\r\n  }\r\n\r\n  const ownProps = createOwnComponentProps({\r\n    config: editableElement,\r\n    contextProps,\r\n    componentDefinition,\r\n    compilationContext,\r\n  });\r\n\r\n  let hasComponentConfigChanged = true;\r\n\r\n  let ownPropsAfterAuto: {\r\n    values: { _id: string; _component: string } & Record<string, any>;\r\n    params: Record<string, any>;\r\n  };\r\n  let compiled: CompiledComponentConfig = {\r\n    _component: editableElement._component,\r\n    _id: editableElement._id,\r\n    props: {},\r\n    components: {},\r\n    styled: {},\r\n  };\r\n  let configAfterAuto: any;\r\n  let editingInfo: InternalEditingInfo | undefined;\r\n  let compiledValues: Record<string, any> = {};\r\n  let subcomponentsContextProps: CompilationCacheItemValue[\"contextProps\"] = {};\r\n  let editingContextProps: CompilationCacheItemValue[\"editingContextProps\"];\r\n\r\n  if (cachedResult) {\r\n    hasComponentConfigChanged = !deepCompare(ownProps, cachedResult.values);\r\n\r\n    if (!hasComponentConfigChanged) {\r\n      ownPropsAfterAuto = cachedResult.valuesAfterAuto;\r\n      compiledValues = cachedResult.compiledValues;\r\n      compiled = cachedResult.compiledConfig;\r\n      configAfterAuto = deepClone({\r\n        ...cachedResult.valuesAfterAuto.values,\r\n        ...cachedResult.valuesAfterAuto.params,\r\n      });\r\n      subcomponentsContextProps = cachedResult.contextProps;\r\n      editingContextProps = cachedResult.editingContextProps;\r\n    }\r\n  }\r\n\r\n  addComponentToSerializedComponentDefinitions(\r\n    editableElement,\r\n    meta,\r\n    \"components\",\r\n    compilationContext\r\n  );\r\n\r\n  const { $width, $widthAuto } = calculateWidths(\r\n    compilationContext,\r\n    contextProps\r\n  );\r\n\r\n  if (hasComponentConfigChanged) {\r\n    // We are going to mutate this object so let's disconnect it from its source object\r\n    ownPropsAfterAuto = deepClone(ownProps);\r\n\r\n    /**\r\n     * APPLY AUTO\r\n     */\r\n\r\n    const DEFAULT_SPACE_AUTO_CONSTANT = 16;\r\n\r\n    // linearize space\r\n    componentDefinition.schema.forEach((schemaProp) => {\r\n      if (isSchemaPropTokenized(schemaProp)) {\r\n        ownPropsAfterAuto.values[schemaProp.prop] =\r\n          applyAutoUsingResponsiveTokens(\r\n            ownPropsAfterAuto.values[schemaProp.prop],\r\n            compilationContext\r\n          );\r\n      }\r\n\r\n      if (schemaProp.type === \"space\") {\r\n        ownPropsAfterAuto.values[schemaProp.prop] = linearizeSpace(\r\n          ownPropsAfterAuto.values[schemaProp.prop],\r\n          compilationContext,\r\n          $width,\r\n          (schemaProp as SpaceSchemaProp).params?.autoConstant ??\r\n          DEFAULT_SPACE_AUTO_CONSTANT\r\n        );\r\n      }\r\n    });\r\n\r\n    itemFieldsForEach(ownPropsAfterAuto.values, compilationContext, (arg) => {\r\n      let value = arg.itemPropValue;\r\n      if (isSchemaPropTokenized(arg.itemSchemaProp)) {\r\n        value = applyAutoUsingResponsiveTokens(value, compilationContext);\r\n      }\r\n\r\n      if (arg.itemSchemaProp.type === \"space\") {\r\n        value = linearizeSpace(\r\n          value,\r\n          compilationContext,\r\n          $width,\r\n          (arg.itemSchemaProp as SpaceSchemaProp).params?.autoConstant ??\r\n          DEFAULT_SPACE_AUTO_CONSTANT\r\n        );\r\n      }\r\n\r\n      dotNotationSet(ownPropsAfterAuto.values, arg.itemPropPath, value);\r\n    });\r\n\r\n    const autoFunction = (\r\n      componentDefinition as InternalRenderableComponentDefinition\r\n    ).auto;\r\n\r\n    if (autoFunction) {\r\n      const ownValuesAfterAuto = autoFunction({\r\n        values: ownPropsAfterAuto.values,\r\n        params: {\r\n          ...ownPropsAfterAuto.params,\r\n          $width,\r\n          $widthAuto,\r\n        },\r\n        devices: compilationContext.devices,\r\n      });\r\n\r\n      ownPropsAfterAuto.values = ownValuesAfterAuto;\r\n    }\r\n\r\n    // Fill all responsive values. We can assume that values after auto for each breakpoint MUST be defined!!!\r\n    // IMPORTANT: For now we make it realtive to device widths, so Webflow way\r\n    for (const prop in ownPropsAfterAuto.values) {\r\n      ownPropsAfterAuto.values[prop] = responsiveValueFill(\r\n        ownPropsAfterAuto.values[prop],\r\n        compilationContext.devices,\r\n        getDevicesWidths(compilationContext.devices)\r\n      );\r\n    }\r\n\r\n    for (const prop in ownPropsAfterAuto.params) {\r\n      ownPropsAfterAuto.params[prop] = responsiveValueFill(\r\n        ownPropsAfterAuto.params[prop],\r\n        compilationContext.devices,\r\n        getDevicesWidths(compilationContext.devices)\r\n      );\r\n    }\r\n\r\n    itemFieldsForEach(ownPropsAfterAuto.values, compilationContext, (arg) => {\r\n      dotNotationSet(\r\n        ownPropsAfterAuto.values,\r\n        arg.itemPropPath,\r\n        responsiveValueFill(\r\n          arg.itemPropValue,\r\n          compilationContext.devices,\r\n          getDevicesWidths(compilationContext.devices)\r\n        )\r\n      );\r\n    });\r\n\r\n    // First we compile all the props and store them in compiledValues\r\n    const _compiledValues = compileComponentValues(\r\n      ownPropsAfterAuto.values,\r\n      componentDefinition,\r\n      compilationContext,\r\n      cache\r\n    );\r\n\r\n    compiledValues = {\r\n      ...deepClone(ownPropsAfterAuto.values),\r\n      ..._compiledValues,\r\n    };\r\n\r\n    // Compile item props\r\n    itemFieldsForEach(\r\n      ownPropsAfterAuto.values,\r\n      compilationContext,\r\n      ({ itemPropValue, itemIndex, itemSchemaProp, collectionSchemaProp }) => {\r\n        const compiledValue: any = compileFromSchema(\r\n          itemPropValue,\r\n          itemSchemaProp,\r\n          compilationContext,\r\n          cache,\r\n          {},\r\n          meta\r\n        );\r\n\r\n        compiledValues[collectionSchemaProp.prop][itemIndex][\r\n          itemSchemaProp.prop\r\n        ] = compiledValue;\r\n      }\r\n    );\r\n\r\n    // We want to style block element based on the most common values from all text parts within all lines.\r\n    // Only for this component, we compile nested @easyblocks/rich-text-part components values.\r\n    if (editableElement._component === \"@easyblocks/rich-text\") {\r\n      if (compiledValues.isListStyleAuto) {\r\n        const {\r\n          mainColor = compiledValues.mainColor,\r\n          mainFont = compiledValues.mainFont,\r\n        } = compileRichTextValuesFromRichTextParts(\r\n          editableElement as RichTextComponentConfig,\r\n          compilationContext,\r\n          cache\r\n        );\r\n\r\n        compiledValues.mainColor = mainColor;\r\n        compiledValues.mainFont = mainFont;\r\n      }\r\n\r\n      compiledValues.mainFontSize = mapResponsiveFontToResponsiveFontSize(\r\n        compiledValues.mainFont\r\n      );\r\n    }\r\n\r\n    compiled = {\r\n      ...compiled,\r\n      components: {},\r\n      styled: {},\r\n    };\r\n\r\n    const renderableComponentDefinition =\r\n      componentDefinition as InternalRenderableComponentDefinition;\r\n\r\n    if (compilationContext.isEditing) {\r\n      /**\r\n       * Let's build default editingOutput (fields and component output)\r\n       */\r\n\r\n      const editorContext = compilationContext as EditorContextType;\r\n\r\n      editingInfo = buildDefaultEditingInfo(\r\n        renderableComponentDefinition,\r\n        configPrefix,\r\n        editorContext,\r\n        compiledValues,\r\n        editableElement._component\r\n      );\r\n\r\n      /**\r\n       * Let's run custom editing function\r\n       */\r\n      if (renderableComponentDefinition.editing) {\r\n        const scalarizedConfig = scalarizeConfig(\r\n          compiledValues,\r\n          editorContext.breakpointIndex,\r\n          editorContext.devices,\r\n          renderableComponentDefinition.schema\r\n        );\r\n\r\n        const identityEditingField = assertDefined(\r\n          editingInfo.fields.find((f) => f.prop === \"$myself\")\r\n        );\r\n\r\n        const editingInfoWithoutIdentityField: InternalEditingInfo = {\r\n          ...editingInfo,\r\n          // Filter out identity field, since it's not users responsibility to care of it.\r\n          fields: editingInfo.fields.filter((f) => f.prop !== \"$myself\"),\r\n        };\r\n\r\n        const editingInfoInput = convertInternalEditingInfoToEditingInfo(\r\n          editingInfoWithoutIdentityField,\r\n          configPrefix\r\n        );\r\n\r\n        const editingInfoResult = renderableComponentDefinition.editing({\r\n          values: scalarizedConfig,\r\n          params: ownPropsAfterAuto.params,\r\n          editingInfo: editingInfoInput,\r\n          device: editorContext.devices.find(\r\n            (device) => device.id === editorContext.breakpointIndex\r\n          )!,\r\n          ...(componentDefinition.id === \"@easyblocks/rich-text\" ||\r\n            componentDefinition.id === \"@easyblocks/rich-text-part\"\r\n            ? {\r\n              __SECRET_INTERNALS__: {\r\n                pathPrefix: configPrefix,\r\n                editorContext,\r\n              },\r\n            }\r\n            : {}),\r\n        });\r\n\r\n        if (editingInfoResult) {\r\n          const internalEditingInfo = convertEditingInfoToInternalEditingInfo(\r\n            editingInfoResult,\r\n            editingInfo,\r\n            componentDefinition,\r\n            editorContext,\r\n            configPrefix\r\n          );\r\n\r\n          internalEditingInfo.fields?.unshift(identityEditingField);\r\n          deepObjectMergeWithoutArrays(editingInfo, internalEditingInfo);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Save to __editing\r\n       */\r\n\r\n      applyEditingInfoToCompiledConfig(\r\n        compiled,\r\n        editingInfo,\r\n        parentComponentEditingInfo,\r\n        {\r\n          width: $width,\r\n          auto: $widthAuto,\r\n        }\r\n      );\r\n\r\n      editingContextProps = editingInfo.components;\r\n    }\r\n\r\n    const { props, components, styled } = resop2(\r\n      { values: compiledValues, params: ownPropsAfterAuto.params },\r\n      ({ values, params }, breakpointIndex) => {\r\n        if (!renderableComponentDefinition.styles) {\r\n          return {};\r\n        }\r\n\r\n        const device = assertDefined(\r\n          compilationContext.devices.find(\r\n            (device) => device.id === breakpointIndex\r\n          ),\r\n          `Missing device \"${breakpointIndex}\"`\r\n        );\r\n\r\n        const stylesInput: NoCodeComponentStylesFunctionInput = {\r\n          values,\r\n          params: {\r\n            ...params,\r\n            $width: assertDefined(responsiveValueAt($width, breakpointIndex)),\r\n            $widthAuto: assertDefined(\r\n              responsiveValueAt($widthAuto, breakpointIndex)\r\n            ),\r\n          },\r\n          isEditing: !!compilationContext.isEditing,\r\n          device,\r\n          ...(componentDefinition!.id === \"@easyblocks/rich-text-part\"\r\n            ? { __COMPILATION_CONTEXT__: compilationContext }\r\n            : {}),\r\n        };\r\n\r\n        return renderableComponentDefinition.styles(stylesInput);\r\n      },\r\n      compilationContext.devices,\r\n      renderableComponentDefinition\r\n    );\r\n\r\n    validateStylesProps(props, componentDefinition);\r\n\r\n    subcomponentsContextProps = components;\r\n\r\n    // Move all the boxes to _compiled\r\n    for (const key in styled) {\r\n      let styles: ScalarOrCollection<Record<string, any>> = styled[key];\r\n\r\n      if (Array.isArray(styles)) {\r\n        styles = styles.map((v) => {\r\n          return { ...v, __isBox: true };\r\n        });\r\n      } else {\r\n        styles = { ...styles, __isBox: true };\r\n      }\r\n\r\n      const schemaProp = componentDefinition.schema.find((x) => x.prop === key);\r\n\r\n      // Context props processed below\r\n      if (schemaProp) {\r\n        continue;\r\n      }\r\n\r\n      // If box\r\n\r\n      compiled.styled[key] = compileBoxes(styles, compilationContext);\r\n    }\r\n\r\n    componentDefinition.schema.forEach((schemaProp: SchemaProp) => {\r\n      if (\"buildOnly\" in schemaProp && schemaProp.buildOnly) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        isExternalSchemaProp(schemaProp, compilationContext.types) ||\r\n        schemaProp.type === \"text\"\r\n      ) {\r\n        // We simply copy ONLY the breakpoints which are defined in the raw data\r\n        compiled.props[schemaProp.prop] = Object.fromEntries(\r\n          Object.keys(editableElement[schemaProp.prop]).map((deviceId) => {\r\n            return [deviceId, compiledValues[schemaProp.prop][deviceId]];\r\n          })\r\n        );\r\n      } else {\r\n        compiled.props[schemaProp.prop] = responsiveValueNormalize(\r\n          compiledValues[schemaProp.prop],\r\n          compilationContext.devices\r\n        );\r\n      }\r\n    });\r\n\r\n    // we also add __props to props\r\n    compiled.props = {\r\n      ...props,\r\n      ...compiled.props,\r\n    };\r\n\r\n    // We are going to mutate this object so let's disconnect it from its source object\r\n    configAfterAuto = deepClone({\r\n      ...ownPropsAfterAuto.values,\r\n      ...ownPropsAfterAuto.params,\r\n    });\r\n  }\r\n\r\n  if (compilationContext.isEditing) {\r\n    /**\r\n     * Let's build default editingOutput (fields and component output)\r\n     */\r\n\r\n    const editorContext = compilationContext as EditorContextType;\r\n    const renderableComponentDefinition =\r\n      componentDefinition as InternalRenderableComponentDefinition;\r\n\r\n    editingInfo = buildDefaultEditingInfo(\r\n      renderableComponentDefinition,\r\n      configPrefix,\r\n      editorContext,\r\n      compiledValues,\r\n      editableElement._component\r\n    );\r\n\r\n    /**\r\n     * Let's run custom editing function\r\n     */\r\n    if (renderableComponentDefinition.editing) {\r\n      const scalarizedValues = scalarizeConfig(\r\n        compiledValues,\r\n        editorContext.breakpointIndex,\r\n        editorContext.devices,\r\n        renderableComponentDefinition.schema\r\n      );\r\n\r\n      const identityEditingField = assertDefined(\r\n        editingInfo.fields.find((f) => f.prop === \"$myself\")\r\n      );\r\n\r\n      const editingInfoWithoutIdentityField: InternalEditingInfo = {\r\n        ...editingInfo,\r\n        // Filter out identity field, since it's not users responsibility to care of it.\r\n        fields: editingInfo.fields.filter((f) => f.prop !== \"$myself\"),\r\n      };\r\n\r\n      const editingInfoInput = convertInternalEditingInfoToEditingInfo(\r\n        editingInfoWithoutIdentityField,\r\n        configPrefix\r\n      );\r\n\r\n      const editingInfoResult = renderableComponentDefinition.editing({\r\n        values: scalarizedValues,\r\n        params: ownPropsAfterAuto!.params,\r\n        editingInfo: editingInfoInput,\r\n        device: editorContext.devices.find(\r\n          (device) => device.id === editorContext.breakpointIndex\r\n        )!,\r\n        ...(componentDefinition.id === \"@easyblocks/rich-text\" ||\r\n          componentDefinition.id === \"@easyblocks/rich-text-part\"\r\n          ? {\r\n            __SECRET_INTERNALS__: {\r\n              pathPrefix: configPrefix,\r\n              editorContext,\r\n            },\r\n          }\r\n          : {}),\r\n      });\r\n\r\n      if (editingInfoResult) {\r\n        const internalEditingInfo = convertEditingInfoToInternalEditingInfo(\r\n          editingInfoResult,\r\n          editingInfo,\r\n          componentDefinition,\r\n          editorContext,\r\n          configPrefix\r\n        );\r\n\r\n        internalEditingInfo.fields?.unshift(identityEditingField);\r\n        deepObjectMergeWithoutArrays(editingInfo, internalEditingInfo);\r\n      }\r\n    }\r\n\r\n    if (editingInfo)\r\n      // Save to __editing\r\n      applyEditingInfoToCompiledConfig(\r\n        compiled,\r\n        editingInfo,\r\n        parentComponentEditingInfo,\r\n        {\r\n          width: $width,\r\n          auto: $widthAuto,\r\n        }\r\n      );\r\n\r\n    editingContextProps = editingInfo.components;\r\n  }\r\n\r\n  compileSubcomponents(\r\n    editableElement,\r\n    contextProps,\r\n    subcomponentsContextProps,\r\n    compilationContext,\r\n    meta,\r\n    editingContextProps,\r\n    configPrefix,\r\n    compiled,\r\n    configAfterAuto,\r\n    cache\r\n  );\r\n\r\n  cache.set(ownProps.values._id, {\r\n    values: ownProps,\r\n    valuesAfterAuto: ownPropsAfterAuto!,\r\n    compiledValues,\r\n    compiledConfig: compiled,\r\n    contextProps: subcomponentsContextProps,\r\n    editingContextProps,\r\n  });\r\n\r\n  if (process.env.SHOPSTORY_INTERNAL_COMPILATION_DEBUG === \"true\") {\r\n    logCompilationDebugOutput({\r\n      cachedResult,\r\n      hasComponentConfigChanged,\r\n      configPrefix,\r\n      ownProps,\r\n      compiled,\r\n    });\r\n  }\r\n\r\n  return {\r\n    compiledComponentConfig: compiled,\r\n    configAfterAuto,\r\n  };\r\n}\r\n\r\nfunction validateStylesProps(\r\n  props: Record<string, unknown>,\r\n  componentDefinition: InternalComponentDefinition\r\n) {\r\n  for (const key of Object.keys(props)) {\r\n    const schemaProp = componentDefinition.schema.find((s) => s.prop === key);\r\n\r\n    if (!schemaProp || !(\"buildOnly\" in schemaProp)) {\r\n      continue;\r\n    }\r\n\r\n    if (!schemaProp.buildOnly) {\r\n      throw new Error(\r\n        `You've returned property \"${key}\" in \"props\" object that conflicts with the same prop in schema of component \"${componentDefinition.id}\". You can either change the property name or set the schema property as build-only (\\`buildOnly: true\\`).`\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction logCompilationDebugOutput({\r\n  cachedResult,\r\n  hasComponentConfigChanged,\r\n  configPrefix,\r\n  ownProps,\r\n  compiled,\r\n}: {\r\n  cachedResult: CompilationCacheItemValue | undefined;\r\n  hasComponentConfigChanged: boolean;\r\n  configPrefix: string;\r\n  ownProps: Record<string, any>;\r\n  compiled: CompiledCustomComponentConfig | CompiledShopstoryComponentConfig;\r\n}) {\r\n  if (cachedResult && !hasComponentConfigChanged) {\r\n    console.groupCollapsed(\"[cache] \", configPrefix ? configPrefix : \"root\");\r\n  } else {\r\n    console.groupCollapsed(\"[compiled] \", configPrefix ? configPrefix : \"root\");\r\n  }\r\n\r\n  console.log(ownProps);\r\n  console.log(compiled);\r\n  console.groupEnd();\r\n}\r\n\r\nfunction createOwnComponentProps({\r\n  config,\r\n  contextProps,\r\n  componentDefinition,\r\n  compilationContext,\r\n}: {\r\n  config: NoCodeComponentEntry;\r\n  contextProps: ContextProps;\r\n  componentDefinition: InternalComponentDefinition;\r\n  compilationContext: CompilationContextType;\r\n}) {\r\n  // Copy all values and refs defined in schema, for component fields copy only _id, _component and its _itemProps but flattened\r\n  const values = Object.fromEntries(\r\n    componentDefinition.schema.map((schemaProp) => {\r\n      if (isSchemaPropComponentOrComponentCollection(schemaProp)) {\r\n        let configValue: Array<NoCodeComponentEntry> = config[schemaProp.prop];\r\n\r\n        if (configValue.length === 0) {\r\n          return [schemaProp.prop, []];\r\n        }\r\n\r\n        if (isSchemaPropComponent(schemaProp)) {\r\n          return [\r\n            schemaProp.prop,\r\n            [\r\n              {\r\n                _id: configValue[0]._id,\r\n                _component: configValue[0]._component,\r\n              },\r\n            ],\r\n          ];\r\n        }\r\n\r\n        if (isSchemaPropComponentCollectionLocalised(schemaProp)) {\r\n          configValue =\r\n            resolveLocalisedValue(\r\n              config[schemaProp.prop] as Record<\r\n                string,\r\n                Array<NoCodeComponentEntry>\r\n              >,\r\n              compilationContext\r\n            )?.value ?? [];\r\n        }\r\n\r\n        const configValuesWithFlattenedItemProps = configValue.map((config) => {\r\n          if (schemaProp.itemFields) {\r\n            const flattenedItemProps = flattenItemProps(\r\n              config,\r\n              componentDefinition,\r\n              schemaProp,\r\n              schemaProp.itemFields\r\n            );\r\n\r\n            return {\r\n              _id: config._id,\r\n              _component: config._component,\r\n              ...flattenedItemProps,\r\n            };\r\n          }\r\n\r\n          return {\r\n            _id: config._id,\r\n            _component: config._component,\r\n          };\r\n        });\r\n\r\n        return [schemaProp.prop, configValuesWithFlattenedItemProps];\r\n      }\r\n\r\n      return [schemaProp.prop, config[schemaProp.prop]];\r\n    })\r\n  );\r\n\r\n  const ownValues: { _id: string; _component: string;[key: string]: any } = {\r\n    // Copy id and component which uniquely identify component.\r\n    _id: config._id,\r\n    _component: config._component,\r\n    ...values,\r\n  };\r\n\r\n  return {\r\n    values: ownValues,\r\n    params: contextProps,\r\n  };\r\n}\r\n\r\nfunction flattenItemProps(\r\n  config: NoCodeComponentEntry,\r\n  componentDefinition: InternalComponentDefinition,\r\n  collectionSchemaProp:\r\n    | ComponentCollectionSchemaProp\r\n    | ComponentCollectionLocalisedSchemaProp,\r\n  itemsSchemas: Array<SchemaProp>\r\n) {\r\n  const itemProps = Object.fromEntries(\r\n    itemsSchemas.map((itemSchemaProp) => {\r\n      return [\r\n        itemSchemaProp.prop,\r\n        config._itemProps[componentDefinition.id][collectionSchemaProp.prop][\r\n        itemSchemaProp.prop\r\n        ],\r\n      ];\r\n    })\r\n  );\r\n\r\n  return itemProps;\r\n}\r\n\r\nfunction addComponentToSerializedComponentDefinitions(\r\n  component: NoCodeComponentEntry,\r\n  meta: CompilationMetadata,\r\n  componentType: keyof SerializedComponentDefinitions,\r\n  compilationContext: CompilationContextType\r\n) {\r\n  const definitions = meta.vars.definitions[componentType];\r\n\r\n  if (definitions.find((def: any) => def.id === component._component)) {\r\n    return;\r\n  }\r\n\r\n  const internalDefinition = findComponentDefinition(\r\n    component,\r\n    compilationContext\r\n  ) as InternalRenderableComponentDefinition;\r\n\r\n  const newDef: SerializedRenderableComponentDefinition = {\r\n    id: internalDefinition.id,\r\n    label: internalDefinition.label,\r\n    schema: internalDefinition.schema,\r\n    type: internalDefinition.type,\r\n  };\r\n\r\n  if (compilationContext.isEditing) {\r\n    newDef.pasteSlots = internalDefinition.pasteSlots ?? [];\r\n  }\r\n\r\n  definitions.push(newDef);\r\n}\r\n\r\nfunction compileSubcomponents(\r\n  editableElement: NoCodeComponentEntry,\r\n  contextProps: ContextProps,\r\n  subcomponentsContextProps: Record<string, Record<string, any>>,\r\n  compilationContext: CompilationContextType,\r\n  meta: any,\r\n  editingInfoComponents: InternalEditingInfo[\"components\"] | undefined,\r\n  configPrefix: string,\r\n  compiledComponentConfig: CompiledCustomComponentConfig,\r\n  configAfterAuto: NoCodeComponentEntry | null, // null means that we don't want auto\r\n  cache: CompilationCache\r\n) {\r\n  const componentDefinition = findComponentDefinition(\r\n    editableElement,\r\n    compilationContext\r\n  )!;\r\n\r\n  componentDefinition.schema.forEach((schemaProp: SchemaProp) => {\r\n    if (isSchemaPropComponentOrComponentCollection(schemaProp)) {\r\n      // Currently these are processed outside of compileSubcomponents\r\n      if (\r\n        isSchemaPropActionTextModifier(schemaProp) ||\r\n        isSchemaPropTextModifier(schemaProp)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const childContextProps =\r\n        subcomponentsContextProps[schemaProp.prop] || {};\r\n\r\n      // Subcomponents must always have $width and $widthAuto defined. If wasn't set explicitly then parent's one is used.\r\n      childContextProps.$width =\r\n        childContextProps.$width ?? contextProps.$width;\r\n      childContextProps.$widthAuto =\r\n        childContextProps.$widthAuto ?? contextProps.$widthAuto;\r\n\r\n      if (\r\n        schemaProp.type === \"component-collection\" ||\r\n        schemaProp.type === \"component-collection-localised\"\r\n      ) {\r\n        childContextProps.itemProps = childContextProps.itemProps ?? [];\r\n\r\n        let value: any[];\r\n        if (schemaProp.type === \"component-collection\") {\r\n          value = editableElement[schemaProp.prop];\r\n        } else {\r\n          const resolvedValue = resolveLocalisedValue(\r\n            editableElement[schemaProp.prop],\r\n            compilationContext\r\n          );\r\n          if (!resolvedValue) {\r\n            throw new Error(\r\n              `Can't resolve localised value for prop \"${schemaProp.prop}\" of component ${editableElement._component}`\r\n            );\r\n          }\r\n          value = resolvedValue.value as any[];\r\n        }\r\n\r\n        value.forEach((_: any, index: number) => {\r\n          childContextProps.itemProps[index] =\r\n            childContextProps.itemProps[index] ?? {};\r\n          const itemPropContextProps = childContextProps.itemProps[index];\r\n\r\n          itemPropContextProps.$width =\r\n            itemPropContextProps.$width ?? contextProps.$width;\r\n          itemPropContextProps.$widthAuto =\r\n            itemPropContextProps.$widthAuto ?? contextProps.$widthAuto;\r\n        });\r\n      }\r\n\r\n      const compilationOutput = compileFromSchema(\r\n        editableElement[schemaProp.prop],\r\n        schemaProp,\r\n        compilationContext,\r\n        cache,\r\n        childContextProps,\r\n        meta,\r\n        editingInfoComponents?.[schemaProp.prop],\r\n        `${configPrefix}${configPrefix === \"\" ? \"\" : \".\"}${schemaProp.prop}`\r\n      ) as ConfigComponentCompilationOutput[];\r\n\r\n      compiledComponentConfig.components[schemaProp.prop] =\r\n        compilationOutput.map(\r\n          (compilationOutput) => compilationOutput.compiledComponentConfig\r\n        );\r\n\r\n      // Merge config after auto\r\n      if (compilationContext.isEditing && configAfterAuto !== null) {\r\n        if (schemaProp.type === \"component\") {\r\n          configAfterAuto[schemaProp.prop] = [\r\n            compilationOutput[0]?.configAfterAuto ?? [],\r\n          ];\r\n        } else if (\r\n          schemaProp.type === \"component-collection\" ||\r\n          schemaProp.type === \"component-collection-localised\"\r\n        ) {\r\n          const configsAfterAuto = compilationOutput.map(\r\n            (compilationOutput, index) => {\r\n              if (schemaProp.itemFields) {\r\n                const itemPropsCollectionPath = `_itemProps.${editableElement._component}.${schemaProp.prop}`;\r\n\r\n                const itemProps = Object.fromEntries(\r\n                  schemaProp.itemFields.map((itemSchemaProp) => {\r\n                    const itemPropValue =\r\n                      configAfterAuto[schemaProp.prop][index][\r\n                      itemSchemaProp.prop\r\n                      ];\r\n\r\n                    return [itemSchemaProp.prop, itemPropValue];\r\n                  })\r\n                );\r\n\r\n                dotNotationSet(\r\n                  compilationOutput.configAfterAuto,\r\n                  itemPropsCollectionPath,\r\n                  itemProps\r\n                );\r\n              }\r\n\r\n              return compilationOutput.configAfterAuto;\r\n            }\r\n          );\r\n\r\n          if (schemaProp.type === \"component-collection-localised\") {\r\n            // We store after auto config within context of current locale only\r\n            configAfterAuto[schemaProp.prop] = {\r\n              [compilationContext.contextParams.locale]: configsAfterAuto,\r\n            };\r\n          } else {\r\n            configAfterAuto[schemaProp.prop] = configsAfterAuto;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction calculateWidths(\r\n  compilationContext: CompilationContextType,\r\n  contextProps: ContextProps\r\n) {\r\n  const $width: TrulyResponsiveValue<number> = { $res: true };\r\n  const $widthAuto: TrulyResponsiveValue<boolean> = { $res: true };\r\n\r\n  compilationContext.devices.forEach((device) => {\r\n    $width[device.id] = contextProps.$width?.[device.id] ?? -1;\r\n    $widthAuto[device.id] =\r\n      contextProps.$widthAuto?.[device.id] ??\r\n      ($width[device.id] === -1 ? true : false);\r\n  });\r\n  return { $width, $widthAuto };\r\n}\r\n\r\nfunction itemFieldsForEach(\r\n  config: NoCodeComponentEntry,\r\n  compilationContext: CompilationContextType,\r\n  callback: (arg: {\r\n    collectionSchemaProp:\r\n    | ComponentCollectionLocalisedSchemaProp\r\n    | ComponentCollectionSchemaProp;\r\n    itemIndex: number;\r\n    itemSchemaProp: SchemaProp;\r\n    itemPropPath: string;\r\n    itemPropValue: any;\r\n  }) => void\r\n) {\r\n  const componentDefinition = findComponentDefinition(\r\n    config,\r\n    compilationContext\r\n  )!;\r\n\r\n  componentDefinition.schema.forEach((schemaProp) => {\r\n    if (isSchemaPropCollection(schemaProp)) {\r\n      const itemFields = (schemaProp as ComponentCollectionSchemaProp)\r\n        .itemFields;\r\n\r\n      let path = schemaProp.prop;\r\n\r\n      if (schemaProp.type === \"component-collection-localised\") {\r\n        const localizedValue = resolveLocalisedValue(\r\n          config[schemaProp.prop],\r\n          compilationContext\r\n        );\r\n\r\n        if (localizedValue) {\r\n          path = `${path}.${localizedValue.locale}`;\r\n        } else {\r\n          path = `${path}.${compilationContext.contextParams.locale}`;\r\n        }\r\n      }\r\n\r\n      const value: Array<NoCodeComponentEntry> =\r\n        dotNotationGet(config, path) ?? [];\r\n\r\n      value.forEach((_, index) => {\r\n        if (itemFields) {\r\n          itemFields.forEach((itemSchemaProp) => {\r\n            const itemPath = `${path}.${index}.${itemSchemaProp.prop}`;\r\n            const itemValue = dotNotationGet(config, itemPath);\r\n\r\n            callback({\r\n              collectionSchemaProp: schemaProp,\r\n              itemIndex: index,\r\n              itemSchemaProp,\r\n              itemPropPath: itemPath,\r\n              itemPropValue: itemValue,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction resolveLocalisedValue<T>(\r\n  localisedValue: Record<string, T>,\r\n  compilationContext: CompilationContextType\r\n): { value: T; locale: string } | undefined {\r\n  const locale = compilationContext.contextParams.locale;\r\n\r\n  if (localisedValue[locale] !== undefined) {\r\n    return {\r\n      value: localisedValue[locale],\r\n      locale,\r\n    };\r\n  }\r\n\r\n  const fallbackLocale = getFallbackLocaleForLocale(\r\n    locale,\r\n    compilationContext.locales\r\n  );\r\n\r\n  if (!fallbackLocale) {\r\n    return;\r\n  }\r\n\r\n  return {\r\n    value: localisedValue[fallbackLocale],\r\n    locale: fallbackLocale,\r\n  };\r\n}\r\n\r\nfunction buildDefaultEditingInfo(\r\n  definition: InternalComponentDefinition,\r\n  configPrefix: string,\r\n  editorContext: EditorContextType,\r\n  compiledValues: Record<string, any>,\r\n  templateId: string\r\n) {\r\n  const scalarizedConfig = scalarizeConfig(\r\n    compiledValues,\r\n    editorContext.breakpointIndex,\r\n    editorContext.devices,\r\n    definition.schema\r\n  );\r\n\r\n  const schema = [...definition.schema];\r\n\r\n  let defaultFields: Array<InternalEditingField> = schema\r\n    // Right now, component-collection schema prop isn't shown in the sidebar\r\n    .filter((schemaProp) => !isSchemaPropCollection(schemaProp))\r\n    .filter((schemaProp) => {\r\n      if (compiledValues.noTrace && schemaProp.prop.startsWith(\"trace\")) {\r\n        return false;\r\n      }\r\n      return true;\r\n    })\r\n    .map((schemaProp) =>\r\n      getDefaultFieldDefinition(\r\n        schemaProp,\r\n        configPrefix,\r\n        definition,\r\n        editorContext,\r\n        scalarizedConfig,\r\n        templateId\r\n      )\r\n    );\r\n\r\n  // noAction is a special property\r\n  if (compiledValues.noAction) {\r\n    defaultFields = defaultFields.filter((field) => field.path !== \"action\");\r\n  }\r\n\r\n  const pathInfo = parsePath(configPrefix, editorContext.form);\r\n  const parentInfo = pathInfo.parent;\r\n\r\n  if (parentInfo) {\r\n    const parentDefinition = findComponentDefinitionById(\r\n      parentInfo.templateId,\r\n      editorContext\r\n    );\r\n\r\n    if (!parentDefinition) {\r\n      throw new Error(`Can't find parent definition: ${parentInfo.templateId}`);\r\n    }\r\n    const parentSchemaProp = parentDefinition.schema.find(\r\n      (schemaProp) => schemaProp.prop === parentInfo.fieldName\r\n    ) as\r\n      | ComponentSchemaProp\r\n      | ComponentCollectionSchemaProp\r\n      | ComponentCollectionLocalisedSchemaProp;\r\n\r\n    if (!parentSchemaProp) {\r\n      throw new Error(\r\n        `Can't find parent schemaProp: ${parentInfo.templateId} > ${parentInfo.fieldName}`\r\n      );\r\n    }\r\n\r\n    let required: boolean;\r\n\r\n    if (parentSchemaProp.type === \"component\") {\r\n      required = !!parentSchemaProp.required;\r\n    } else {\r\n      required = false;\r\n    }\r\n\r\n    const headerSchemaProp: Component$$$SchemaProp = {\r\n      prop: \"$myself\",\r\n      label: \"Component type\",\r\n      type: \"component$$$\",\r\n      picker: parentSchemaProp.picker,\r\n      definition: parentDefinition,\r\n      required,\r\n      group: \"Component\",\r\n    };\r\n\r\n    const headerField: InternalEditingField = {\r\n      component: \"identity\",\r\n      hidden: false,\r\n      label: \"Component type\",\r\n      name: configPrefix,\r\n      prop: \"$myself\",\r\n      schemaProp: headerSchemaProp,\r\n    };\r\n\r\n    defaultFields.unshift(headerField);\r\n  } else {\r\n    const rootComponentDefinition = assertDefined(\r\n      findComponentDefinitionById(\r\n        dotNotationGet(editorContext.form.values, \"\")._component,\r\n        editorContext\r\n      )\r\n    );\r\n\r\n    const headerSchemaProp: Component$$$SchemaProp = {\r\n      prop: \"$myself\",\r\n      label: \"Component type\",\r\n      type: \"component$$$\",\r\n      definition: rootComponentDefinition,\r\n      required: true,\r\n      group: \"Component\",\r\n    };\r\n\r\n    const headerField: InternalEditingField = {\r\n      component: \"identity\",\r\n      hidden: false,\r\n      label: \"Component type\",\r\n      name: \"\",\r\n      prop: \"$myself\",\r\n      schemaProp: headerSchemaProp,\r\n    };\r\n\r\n    defaultFields.unshift(headerField);\r\n  }\r\n\r\n  const fields = bubbleDown((x) => x.prop === \"Analytics\", defaultFields);\r\n\r\n  const editingInfo: InternalEditingInfo = {\r\n    fields,\r\n    components: {},\r\n  };\r\n\r\n  definition.schema.forEach((schemaProp) => {\r\n    if (isSchemaPropCollection(schemaProp)) {\r\n      editingInfo.components[schemaProp.prop] = {\r\n        items: scalarizedConfig[schemaProp.prop].map(\r\n          (x: any, index: number) => ({\r\n            fields: (schemaProp.itemFields ?? []).map((itemSchemaProp) =>\r\n              getDefaultFieldDefinition(\r\n                itemSchemaProp,\r\n                `${configPrefix}${configPrefix === \"\" ? \"\" : \".\"}${schemaProp.prop\r\n                }.${index}._itemProps.${definition.id}.${schemaProp.prop}`,\r\n                definition,\r\n                editorContext,\r\n                scalarizedConfig,\r\n                templateId\r\n              )\r\n            ),\r\n          })\r\n        ),\r\n      };\r\n    } else if (isSchemaPropComponent(schemaProp)) {\r\n      editingInfo.components[schemaProp.prop] = {\r\n        fields: [],\r\n      };\r\n    }\r\n  });\r\n\r\n  return editingInfo;\r\n}\r\n\r\nfunction applyEditingInfoToCompiledConfig(\r\n  compiledComponentConfig: CompiledCustomComponentConfig,\r\n  editingInfo: InternalEditingInfo,\r\n  parentEditingInfo:\r\n    | EditingInfoComponent\r\n    | EditingInfoComponentCollection\r\n    | undefined,\r\n  widthInfo: {\r\n    width: TrulyResponsiveValue<number>;\r\n    auto: TrulyResponsiveValue<boolean>;\r\n  }\r\n) {\r\n  const headerFields = editingInfo.fields.filter(\r\n    (field) => field.prop === \"$myself\"\r\n  );\r\n\r\n  const nonHeaderFields = editingInfo.fields.filter(\r\n    (field) => field.prop !== \"$myself\"\r\n  );\r\n\r\n  const fields = [\r\n    ...headerFields,\r\n    ...(parentEditingInfo && \"fields\" in parentEditingInfo\r\n      ? parentEditingInfo.fields\r\n      : []),\r\n    ...nonHeaderFields,\r\n  ];\r\n\r\n  compiledComponentConfig.__editing = {\r\n    ...parentEditingInfo,\r\n    fields,\r\n    components: {},\r\n    widthInfo,\r\n  };\r\n\r\n  for (const fieldName in editingInfo.components) {\r\n    compiledComponentConfig.__editing.components[fieldName] = {};\r\n    const childComponentEditingInfo = editingInfo.components[fieldName];\r\n\r\n    // Here we copy only noInline. It's the only flag we need in parent component. It's only because we need noInline info even if there is no component in array (to know that we shouldn't render placeholder)\r\n    if (\r\n      \"noInline\" in childComponentEditingInfo &&\r\n      childComponentEditingInfo.noInline !== undefined\r\n    ) {\r\n      compiledComponentConfig.__editing.components[fieldName].noInline =\r\n        childComponentEditingInfo.noInline;\r\n    }\r\n  }\r\n}\r\n\r\nconst deepObjectMergeWithoutArrays = (target: any, source: any) => {\r\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n  for (const key of Object.keys(source)) {\r\n    if (source[key] instanceof Object && !Array.isArray(source[key]))\r\n      Object.assign(\r\n        source[key],\r\n        deepObjectMergeWithoutArrays(target[key], source[key])\r\n      );\r\n  }\r\n\r\n  // Join `target` and modified `source`\r\n  Object.assign(target || {}, source);\r\n  return target;\r\n};\r\n\r\nfunction compileRichTextValuesFromRichTextParts(\r\n  richTextConfig: RichTextComponentConfig,\r\n  compilationContext: CompilationContextType,\r\n  cache: CompilationCache\r\n): { mainColor: any; mainFont: any } {\r\n  const mainColor = getMostCommonValueFromRichTextParts(\r\n    richTextConfig,\r\n    \"color\",\r\n    compilationContext,\r\n    cache\r\n  );\r\n\r\n  const mainFont = getMostCommonValueFromRichTextParts(\r\n    richTextConfig,\r\n    \"font\",\r\n    compilationContext,\r\n    cache\r\n  );\r\n\r\n  return { mainColor, mainFont };\r\n}\r\n\r\nfunction mapResponsiveFontToResponsiveFontSize(\r\n  responsiveFontValue: Record<string, any>\r\n) {\r\n  return Object.fromEntries(\r\n    entries(responsiveFontValue).map(([breakpoint, fontValue]) => {\r\n      if (breakpoint === \"$res\") {\r\n        return [breakpoint, fontValue];\r\n      }\r\n\r\n      return [breakpoint, fontValue.fontSize];\r\n    })\r\n  );\r\n}\r\n\r\nfunction addStylesHash(styles: Record<PropertyKey, any>) {\r\n  if (\"__hash\" in styles) {\r\n    delete styles[\"__hash\"];\r\n  }\r\n\r\n  const hash = xxHash32(JSON.stringify(styles));\r\n  styles.__hash = hash.toString();\r\n  return styles;\r\n}\r\n\r\nfunction compileBoxes(\r\n  value: any,\r\n  compilationContext: CompilationContextType\r\n): any {\r\n  if (Array.isArray(value)) {\r\n    return value.map((x: any) => compileBoxes(x, compilationContext));\r\n  } else if (typeof value === \"object\" && value !== null) {\r\n    if (value.__isBox) {\r\n      return addStylesHash(compileBox(value, compilationContext.devices));\r\n    }\r\n\r\n    const ret: Record<string, any> = {};\r\n    for (const key in value) {\r\n      ret[key] = compileBoxes(value[key], compilationContext);\r\n    }\r\n    return ret;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction getDefaultFieldDefinition(\r\n  schemaProp: SchemaProp,\r\n  configPrefix: string,\r\n  definition: InternalComponentDefinition,\r\n  editorContext: EditorContextType,\r\n  compiledValues: Record<string, any>,\r\n  templateId: string\r\n): InternalEditingField {\r\n  const tinaField = getTinaField(\r\n    {\r\n      ...schemaProp,\r\n      definition,\r\n    },\r\n    editorContext,\r\n    compiledValues[schemaProp.prop]\r\n  );\r\n\r\n  let visible = !isSchemaPropComponentOrComponentCollection(schemaProp);\r\n\r\n  if (typeof schemaProp.visible === \"boolean\") {\r\n    visible = schemaProp.visible;\r\n  } else if (typeof schemaProp.visible === \"function\") {\r\n    visible = schemaProp.visible(compiledValues, { editorContext });\r\n  }\r\n\r\n  return {\r\n    ...tinaField,\r\n    prop: schemaProp.prop,\r\n    name: createFieldName(schemaProp, configPrefix),\r\n    hidden: !visible,\r\n  };\r\n}\r\n\r\nfunction createFieldName(schemaProp: SchemaProp, configPrefix: string): string {\r\n  return schemaProp.prop === \"$myself\"\r\n    ? configPrefix\r\n    : `${configPrefix}${configPrefix === \"\" ? \"\" : \".\"}${schemaProp.prop}`;\r\n}\r\n\r\nfunction convertInternalEditingInfoToEditingInfo(\r\n  editingInfo: InternalEditingInfo,\r\n  configPrefix: string | undefined\r\n): EditingInfo {\r\n  const fields = editingInfo.fields.map((f) => {\r\n    return convertInternalEditingFieldToEditingInfoField(f, configPrefix);\r\n  });\r\n\r\n  const components: EditingInfo[\"components\"] = Object.fromEntries(\r\n    Object.entries(editingInfo.components).map(([name, childEditingInfo]) => {\r\n      if (\"items\" in childEditingInfo) {\r\n        const adaptedChildEditingInfo =\r\n          childEditingInfo.items.map<ChildComponentEditingInfo>((item) => {\r\n            return {\r\n              fields: item.fields.map((f) =>\r\n                convertInternalEditingFieldToEditingInfoField(f, configPrefix)\r\n              ),\r\n              direction: item.direction,\r\n              selectable: item.noInline,\r\n            };\r\n          });\r\n\r\n        return [name, adaptedChildEditingInfo];\r\n      }\r\n\r\n      return [\r\n        name,\r\n        {\r\n          fields: childEditingInfo.fields.map((f) =>\r\n            convertInternalEditingFieldToEditingInfoField(f, configPrefix)\r\n          ),\r\n          direction: childEditingInfo.direction,\r\n          selectable: childEditingInfo.noInline,\r\n        },\r\n      ];\r\n    })\r\n  );\r\n\r\n  return {\r\n    fields,\r\n    components,\r\n  };\r\n}\r\n\r\nfunction convertInternalEditingFieldToEditingInfoField(\r\n  field: InternalEditingField,\r\n  configPrefix: string | undefined\r\n): EditingField {\r\n  const path =\r\n    field.schemaProp.prop === \"$myself\"\r\n      ? field.schemaProp.prop\r\n      : toRelativeFieldPath(field.name, configPrefix);\r\n\r\n  return {\r\n    path,\r\n    type: \"field\",\r\n    visible: typeof field.hidden === \"boolean\" ? !field.hidden : true,\r\n    group: field.group,\r\n    label: field.label,\r\n  };\r\n}\r\n\r\nfunction toRelativeFieldPath(path: string, configPrefix: string | undefined) {\r\n  let adjustedPath = path;\r\n\r\n  if (path.includes(\"_itemProps\")) {\r\n    const pathFragments = path.split(\".\");\r\n    const itemPropsFragmentIndex = pathFragments.indexOf(\"_itemProps\");\r\n    const adjustedPathFragments = [\r\n      ...pathFragments.slice(0, itemPropsFragmentIndex),\r\n      pathFragments.at(-1),\r\n    ];\r\n    adjustedPath = adjustedPathFragments.join(\".\");\r\n  }\r\n\r\n  return configPrefix\r\n    ? adjustedPath.replace(`${configPrefix}.`, \"\")\r\n    : adjustedPath;\r\n}\r\n\r\nfunction convertEditingInfoToInternalEditingInfo(\r\n  editingInfo: NoCodeComponentEditingFunctionResult,\r\n  internalEditingInfo: InternalEditingInfo,\r\n  componentDefinition: InternalRenderableComponentDefinition,\r\n  editorContext: EditorContextType,\r\n  configPrefix: string | undefined\r\n): InternalEditingFunctionResult {\r\n  let internalEditingInfoFields:\r\n    | InternalEditingFunctionResult[\"fields\"]\r\n    | undefined;\r\n\r\n  if (editingInfo.fields) {\r\n    if (!internalEditingInfoFields) {\r\n      internalEditingInfoFields = [];\r\n    }\r\n\r\n    for (const field of editingInfo.fields) {\r\n      const internalEditingInfoField =\r\n        convertEditingFieldToInternalEditingField(\r\n          field,\r\n          internalEditingInfo,\r\n          componentDefinition,\r\n          editorContext,\r\n          configPrefix\r\n        );\r\n\r\n      internalEditingInfoFields.push(internalEditingInfoField);\r\n    }\r\n  }\r\n\r\n  let internalEditingInfoComponents:\r\n    | InternalEditingFunctionResult[\"components\"]\r\n    | undefined;\r\n\r\n  if (editingInfo.components) {\r\n    internalEditingInfoComponents = {};\r\n\r\n    for (const [name, childEditingInfo] of Object.entries(\r\n      editingInfo.components\r\n    )) {\r\n      const sourceInternalEditingInfoComponent =\r\n        internalEditingInfo.components[name];\r\n\r\n      if (!sourceInternalEditingInfoComponent) {\r\n        throw new Error(\r\n          `Found component at path ${configPrefix} but it's not defined in the schema`\r\n        );\r\n      }\r\n\r\n      if (Array.isArray(childEditingInfo)) {\r\n        internalEditingInfoComponents[name] = {\r\n          items: childEditingInfo.map((editingInfoItem, index) => {\r\n            const sourceInternalFields = (\r\n              sourceInternalEditingInfoComponent as EditingInfoComponentCollection\r\n            ).items[index].fields;\r\n\r\n            const internalFields = editingInfoItem.fields?.map((field) => {\r\n              const internalEditingInfoField =\r\n                convertEditingFieldToInternalEditingField(\r\n                  field,\r\n                  internalEditingInfo,\r\n                  componentDefinition,\r\n                  editorContext,\r\n                  configPrefix\r\n                );\r\n\r\n              return internalEditingInfoField;\r\n            });\r\n\r\n            const result: EditingInfoComponent = {\r\n              fields: internalFields ?? sourceInternalFields,\r\n            };\r\n\r\n            if (editingInfoItem.direction) {\r\n              result.direction = editingInfoItem.direction;\r\n            }\r\n\r\n            if (editingInfoItem.selectable !== undefined) {\r\n              result.noInline = !editingInfoItem.selectable;\r\n            }\r\n\r\n            return result;\r\n          }),\r\n        };\r\n      } else {\r\n        const result: Partial<EditingInfoComponent> = {};\r\n\r\n        if (childEditingInfo.fields) {\r\n          result.fields = childEditingInfo.fields.map((field) => {\r\n            const internalEditingInfoField =\r\n              convertEditingFieldToInternalEditingField(\r\n                field,\r\n                internalEditingInfo,\r\n                componentDefinition,\r\n                editorContext,\r\n                configPrefix\r\n              );\r\n\r\n            return internalEditingInfoField;\r\n          });\r\n        }\r\n\r\n        if (childEditingInfo.direction) {\r\n          result.direction = childEditingInfo.direction;\r\n        }\r\n\r\n        if (childEditingInfo.selectable !== undefined) {\r\n          result.noInline = !childEditingInfo.selectable;\r\n        }\r\n\r\n        internalEditingInfoComponents[name] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  const result: InternalEditingFunctionResult = {};\r\n\r\n  if (internalEditingInfoFields) {\r\n    result.fields = internalEditingInfoFields;\r\n  }\r\n\r\n  if (internalEditingInfoComponents) {\r\n    result.components = internalEditingInfoComponents;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction convertEditingFieldToInternalEditingField(\r\n  field: AnyEditingField,\r\n  internalEditingInfo: InternalEditingInfo,\r\n  componentDefinition: InternalRenderableComponentDefinition,\r\n  editorContext: EditorContextType,\r\n  configPrefix: string | undefined\r\n): NonNullable<InternalEditingFunctionResult[\"fields\"]>[number] {\r\n  if (\r\n    componentDefinition.id === \"@easyblocks/rich-text\" ||\r\n    componentDefinition.id === \"@easyblocks/rich-text-part\"\r\n  ) {\r\n    // This is a special case. Rich text components have a really nasty `editing` function implementation\r\n    // relying on `editorContext`, absolute paths and multi field portals. Ideally it would best to address this,\r\n    // but right now let's keep it as it is and treat it like an exception\r\n\r\n    // Even though the type definition for field doesn't allow `path` to be an array, $richText component\r\n    // returns an array of paths.\r\n    if (Array.isArray(field.path)) {\r\n      const fieldName =\r\n        field.path[0]?.split(\".\").at(-1) ??\r\n        raiseError(\"Expected field name to be present\");\r\n      const sources = field.path.map((p) =>\r\n        p.split(\".\").slice(0, -1).join(\".\")\r\n      );\r\n\r\n      return {\r\n        portal: \"multi-field\",\r\n        fieldName,\r\n        sources,\r\n      };\r\n    }\r\n\r\n    const isAbsolutePath = isFieldPathAbsolutePath(field, editorContext);\r\n\r\n    if (isAbsolutePath) {\r\n      if (field.type === \"fields\") {\r\n        const groups = field.filters?.group\r\n          ? toArray(field.filters.group)\r\n          : undefined;\r\n\r\n        return {\r\n          portal: \"component\",\r\n          source: field.path,\r\n          groups,\r\n        };\r\n      }\r\n\r\n      const pathFragments = field.path.split(\".\");\r\n      const fieldName =\r\n        pathFragments.at(-1) ?? raiseError(\"Expected field name to be present\");\r\n      const source = pathFragments.slice(0, -1).join(\".\");\r\n\r\n      return {\r\n        portal: \"field\",\r\n        source,\r\n        fieldName,\r\n      };\r\n    }\r\n  }\r\n\r\n  if (field.type === \"field\") {\r\n    let sourceInternalEditingInfoField = internalEditingInfo.fields.find(\r\n      (f) => {\r\n        return (\r\n          f.name === toAbsolutePath(field.path, configPrefix) ||\r\n          field.path === \"$myself\"\r\n        );\r\n      }\r\n    );\r\n\r\n    if (!sourceInternalEditingInfoField) {\r\n      const pathFragments = field.path.split(\".\");\r\n      const isPathToComponentField = pathFragments.length > 1;\r\n\r\n      if (isPathToComponentField) {\r\n        const componentSchemaProp = componentDefinition.schema.find(\r\n          isSchemaPropComponentOrComponentCollection\r\n        );\r\n\r\n        if (componentSchemaProp) {\r\n          if (isSchemaPropCollection(componentSchemaProp)) {\r\n            const itemField = componentSchemaProp.itemFields?.find(\r\n              (f) => f.prop === pathFragments.at(-1)\r\n            );\r\n\r\n            if (itemField) {\r\n              const componentItemIndex = +pathFragments[1];\r\n              sourceInternalEditingInfoField = (\r\n                internalEditingInfo.components[\r\n                componentSchemaProp.prop\r\n                ] as EditingInfoComponentCollection\r\n              ).items[componentItemIndex].fields.find(\r\n                (f) => f.prop === itemField.prop\r\n              );\r\n            }\r\n          }\r\n\r\n          if (\r\n            componentSchemaProp.type === \"component\" &&\r\n            componentSchemaProp.required\r\n          ) {\r\n            const absoluteFieldPath = toAbsolutePath(\r\n              pathFragments.slice(0, -1).join(\".\"),\r\n              configPrefix\r\n            );\r\n\r\n            const overrides: Extract<\r\n              FieldPortal,\r\n              { portal: \"field\" }\r\n            >[\"overrides\"] = {};\r\n\r\n            if (field.label !== undefined) {\r\n              overrides.label = field.label;\r\n            }\r\n\r\n            if (field.group !== undefined) {\r\n              overrides.group = field.group;\r\n            }\r\n\r\n            return {\r\n              portal: \"field\",\r\n              fieldName: pathFragments.at(-1)!,\r\n              source: absoluteFieldPath,\r\n              overrides,\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!sourceInternalEditingInfoField) {\r\n        throw new Error(\r\n          `Field \"${field.path}\" for component \"${componentDefinition.id}\" not found.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...sourceInternalEditingInfoField,\r\n      label: field.label,\r\n      group: field.group,\r\n      hidden: !field.visible,\r\n    };\r\n  }\r\n\r\n  if (field.type === \"fields\") {\r\n    const absoluteFieldPath = toAbsolutePath(field.path, configPrefix);\r\n\r\n    return {\r\n      portal: \"component\",\r\n      source: absoluteFieldPath,\r\n      ...(field.filters?.group !== undefined && {\r\n        groups: toArray(field.filters.group),\r\n      }),\r\n    };\r\n  }\r\n\r\n  throw new Error(`Unknown field type`);\r\n}\r\n\r\nfunction isFieldPathAbsolutePath(\r\n  field: AnyEditingField,\r\n  editorContext: EditorContextType\r\n) {\r\n  const pathFragments = field.path.split(\".\");\r\n  const rootValue = dotNotationGet(editorContext.form.values, \"\");\r\n  let currentPathFragmentIndex = 0;\r\n\r\n  let currentValue = dotNotationGet(\r\n    rootValue,\r\n    pathFragments[currentPathFragmentIndex]\r\n  );\r\n\r\n  while (currentValue !== undefined) {\r\n    if (pathFragments.length - 1 === currentPathFragmentIndex) {\r\n      return true;\r\n    }\r\n\r\n    currentValue = dotNotationGet(\r\n      currentValue,\r\n      pathFragments[++currentPathFragmentIndex]\r\n    );\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction toAbsolutePath(path: string, configPrefix: string | undefined) {\r\n  if (configPrefix) {\r\n    return `${configPrefix}.${path}`;\r\n  }\r\n\r\n  return path;\r\n}\r\n\r\nfunction isSchemaPropTokenized(schemaProp: SchemaProp) {\r\n  return (\r\n    schemaProp.type === \"color\" ||\r\n    schemaProp.type === \"space\" ||\r\n    schemaProp.type === \"font\" ||\r\n    schemaProp.type === \"aspectRatio\" ||\r\n    schemaProp.type === \"boxShadow\" ||\r\n    schemaProp.type === \"containerWidth\"\r\n  );\r\n}\r\n"],"names":["compileComponent","editableElement","compilationContext","contextProps","meta","cache","parentComponentEditingInfo","configPrefix","arguments","length","undefined","isComponentConfig","console","error","Error","$width","_id","_component","cachedResult","get","componentDefinition","findComponentDefinitionById","assertDefined","id","uniqueId","warn","ownProps","createOwnComponentProps","config","hasComponentConfigChanged","ownPropsAfterAuto","compiled","props","components","styled","configAfterAuto","editingInfo","compiledValues","subcomponentsContextProps","editingContextProps","deepCompare","values","valuesAfterAuto","compiledConfig","deepClone","params","addComponentToSerializedComponentDefinitions","$widthAuto","calculateWidths","DEFAULT_SPACE_AUTO_CONSTANT","schema","forEach","schemaProp","isSchemaPropTokenized","prop","applyAutoUsingResponsiveTokens","type","linearizeSpace","autoConstant","itemFieldsForEach","arg","value","itemPropValue","itemSchemaProp","dotNotationSet","itemPropPath","autoFunction","auto","ownValuesAfterAuto","devices","responsiveValueFill","getDevicesWidths","_compiledValues","compileComponentValues","_ref","itemIndex","collectionSchemaProp","compiledValue","compileFromSchema","isListStyleAuto","mainColor","mainFont","compileRichTextValuesFromRichTextParts","mainFontSize","mapResponsiveFontToResponsiveFontSize","renderableComponentDefinition","isEditing","editorContext","buildDefaultEditingInfo","editing","scalarizedConfig","scalarizeConfig","breakpointIndex","identityEditingField","fields","find","f","editingInfoWithoutIdentityField","filter","editingInfoInput","convertInternalEditingInfoToEditingInfo","editingInfoResult","device","__SECRET_INTERNALS__","pathPrefix","internalEditingInfo","convertEditingInfoToInternalEditingInfo","unshift","deepObjectMergeWithoutArrays","applyEditingInfoToCompiledConfig","width","resop2","_ref2","styles","stylesInput","responsiveValueAt","__COMPILATION_CONTEXT__","validateStylesProps","key","Array","isArray","map","v","__isBox","x","compileBoxes","buildOnly","isExternalSchemaProp","types","Object","fromEntries","keys","deviceId","responsiveValueNormalize","scalarizedValues","compileSubcomponents","set","process","env","SHOPSTORY_INTERNAL_COMPILATION_DEBUG","logCompilationDebugOutput","compiledComponentConfig","s","_ref3","groupCollapsed","log","groupEnd","_ref4","isSchemaPropComponentOrComponentCollection","configValue","isSchemaPropComponent","isSchemaPropComponentCollectionLocalised","resolveLocalisedValue","configValuesWithFlattenedItemProps","itemFields","flattenedItemProps","flattenItemProps","ownValues","itemsSchemas","itemProps","_itemProps","component","componentType","definitions","vars","def","internalDefinition","findComponentDefinition","newDef","label","pasteSlots","push","editingInfoComponents","isSchemaPropActionTextModifier","isSchemaPropTextModifier","childContextProps","resolvedValue","_","index","itemPropContextProps","compilationOutput","configsAfterAuto","itemPropsCollectionPath","contextParams","locale","$res","callback","isSchemaPropCollection","path","localizedValue","dotNotationGet","itemPath","itemValue","localisedValue","fallbackLocale","getFallbackLocaleForLocale","locales","definition","templateId","defaultFields","noTrace","startsWith","getDefaultFieldDefinition","noAction","field","pathInfo","parsePath","form","parentInfo","parent","parentDefinition","parentSchemaProp","fieldName","required","headerSchemaProp","picker","group","headerField","hidden","name","rootComponentDefinition","bubbleDown","items","parentEditingInfo","widthInfo","headerFields","nonHeaderFields","__editing","childComponentEditingInfo","noInline","target","source","assign","richTextConfig","getMostCommonValueFromRichTextParts","responsiveFontValue","entries","_ref5","breakpoint","fontValue","fontSize","addStylesHash","hash","xxHash32","JSON","stringify","__hash","toString","compileBox","ret","tinaField","getTinaField","visible","createFieldName","convertInternalEditingFieldToEditingInfoField","_ref6","childEditingInfo","adaptedChildEditingInfo","item","direction","selectable","toRelativeFieldPath","adjustedPath","includes","pathFragments","split","itemPropsFragmentIndex","indexOf","adjustedPathFragments","slice","at","join","replace","internalEditingInfoFields","internalEditingInfoField","convertEditingFieldToInternalEditingField","internalEditingInfoComponents","sourceInternalEditingInfoComponent","editingInfoItem","sourceInternalFields","internalFields","result","raiseError","sources","p","portal","isAbsolutePath","isFieldPathAbsolutePath","groups","filters","toArray","sourceInternalEditingInfoField","toAbsolutePath","isPathToComponentField","componentSchemaProp","itemField","componentItemIndex","absoluteFieldPath","overrides","rootValue","currentPathFragmentIndex","currentValue"],"mappings":"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"}