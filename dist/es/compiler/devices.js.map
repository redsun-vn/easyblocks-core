{"version":3,"file":"devices.js","sources":["../../../src/compiler/devices.ts"],"sourcesContent":["import { Devices, TrulyResponsiveValue } from \"../types\";\r\n\r\nexport function getDevicesWidths(\r\n  devices: Devices\r\n): TrulyResponsiveValue<number> {\r\n  const widths: TrulyResponsiveValue<number> = { $res: true };\r\n  devices.forEach((device) => {\r\n    widths[device.id] = device.w;\r\n  });\r\n  return widths;\r\n}\r\n\r\nexport const DEFAULT_DEVICES: Devices = [\r\n  // de facto all vertical phones have max 414px\r\n  // de facto all horizontal phones start with 620px (end with ~900, almost all below 915) -> vertical tablet resolutions\r\n  // most people don't use horizontal phones anyway\r\n  // no one uses such tiny resolutions on other devices\r\n  // we obviously need phone resolution\r\n  // we introduce \"pro forma\" resolution (568 - 767px) which is \"some horizontal phones\". It's here mostly because there is such resolution in bootstrap, tailwind etc.\r\n  // personally I think we could have one resolution that covers all horizontal phones and tablets (620 - 996). But it would break naming that is \"commonly understood\" by devs (xs phone, sm horizontal phone, md tablet). sm is mostly dead, should be covered by md\r\n  {\r\n    id: \"xs\",\r\n    w: 375,\r\n    h: 667,\r\n    breakpoint: 640,\r\n    label: \"Mobile\",\r\n  },\r\n  {\r\n    id: \"sm\",\r\n    w: 640,\r\n    h: 375,\r\n    breakpoint: 768,\r\n    label: \"Mobile SM - h\",\r\n  },\r\n  {\r\n    id: \"md\",\r\n    w: 768,\r\n    h: 1024,\r\n    breakpoint: 992,\r\n    label: \"Tablet\",\r\n  },\r\n  {\r\n    id: \"lg\",\r\n    w: 992,\r\n    h: 768,\r\n    breakpoint: 1280,\r\n    label: \"Small Desktop - Tablet H\",\r\n  },\r\n  {\r\n    id: \"xl\",\r\n    w: 1280,\r\n    h: 768,\r\n    breakpoint: 1536,\r\n    label: \"Medium Desktop\",\r\n    isMain: true,\r\n  },\r\n  {\r\n    id: \"2xl\",\r\n    w: 1536,\r\n    h: 920,\r\n    label: \"Large desktop\",\r\n    breakpoint: null,\r\n  },\r\n];\r\n"],"names":["getDevicesWidths","devices","widths","$res","forEach","device","id","w","DEFAULT_DEVICES","h","breakpoint","label","isMain"],"mappings":";AAEO,SAASA,gBAAgBA,CAC9BC,OAAgB,EACc;AAC9B,EAAA,MAAMC,MAAoC,GAAG;AAAEC,IAAAA,IAAI,EAAE,IAAA;GAAM,CAAA;AAC3DF,EAAAA,OAAO,CAACG,OAAO,CAAEC,MAAM,IAAK;IAC1BH,MAAM,CAACG,MAAM,CAACC,EAAE,CAAC,GAAGD,MAAM,CAACE,CAAC,CAAA;AAC9B,GAAC,CAAC,CAAA;AACF,EAAA,OAAOL,MAAM,CAAA;AACf,CAAA;AAEO,MAAMM,eAAwB,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,EAAAA,EAAE,EAAE,IAAI;AACRC,EAAAA,CAAC,EAAE,GAAG;AACNE,EAAAA,CAAC,EAAE,GAAG;AACNC,EAAAA,UAAU,EAAE,GAAG;AACfC,EAAAA,KAAK,EAAE,QAAA;AACT,CAAC,EACD;AACEL,EAAAA,EAAE,EAAE,IAAI;AACRC,EAAAA,CAAC,EAAE,GAAG;AACNE,EAAAA,CAAC,EAAE,GAAG;AACNC,EAAAA,UAAU,EAAE,GAAG;AACfC,EAAAA,KAAK,EAAE,eAAA;AACT,CAAC,EACD;AACEL,EAAAA,EAAE,EAAE,IAAI;AACRC,EAAAA,CAAC,EAAE,GAAG;AACNE,EAAAA,CAAC,EAAE,IAAI;AACPC,EAAAA,UAAU,EAAE,GAAG;AACfC,EAAAA,KAAK,EAAE,QAAA;AACT,CAAC,EACD;AACEL,EAAAA,EAAE,EAAE,IAAI;AACRC,EAAAA,CAAC,EAAE,GAAG;AACNE,EAAAA,CAAC,EAAE,GAAG;AACNC,EAAAA,UAAU,EAAE,IAAI;AAChBC,EAAAA,KAAK,EAAE,0BAAA;AACT,CAAC,EACD;AACEL,EAAAA,EAAE,EAAE,IAAI;AACRC,EAAAA,CAAC,EAAE,IAAI;AACPE,EAAAA,CAAC,EAAE,GAAG;AACNC,EAAAA,UAAU,EAAE,IAAI;AAChBC,EAAAA,KAAK,EAAE,gBAAgB;AACvBC,EAAAA,MAAM,EAAE,IAAA;AACV,CAAC,EACD;AACEN,EAAAA,EAAE,EAAE,KAAK;AACTC,EAAAA,CAAC,EAAE,IAAI;AACPE,EAAAA,CAAC,EAAE,GAAG;AACNE,EAAAA,KAAK,EAAE,eAAe;AACtBD,EAAAA,UAAU,EAAE,IAAA;AACd,CAAC;;;;"}