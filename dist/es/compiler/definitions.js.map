{"version":3,"file":"definitions.js","sources":["../../../src/compiler/definitions.ts"],"sourcesContent":["import { uniqueId } from \"@/utils\";\r\nimport { SetOptional } from \"type-fest\";\r\nimport { isLocalValue } from \"..\";\r\nimport { getFallbackForLocale, getFallbackLocaleForLocale } from \"../locales\";\r\nimport {\r\n  isTrulyResponsiveValue,\r\n  responsiveValueAt,\r\n  responsiveValueFill,\r\n  responsiveValueFlatten,\r\n  responsiveValueMap,\r\n} from \"../responsiveness\";\r\nimport {\r\n  BooleanSchemaProp,\r\n  CompiledComponentConfig,\r\n  CompiledLocalTextReference,\r\n  ComponentCollectionLocalisedSchemaProp,\r\n  ComponentCollectionSchemaProp,\r\n  ComponentSchemaProp,\r\n  Devices,\r\n  ExternalReference,\r\n  ExternalReferenceEmpty,\r\n  ExternalReferenceNonEmpty,\r\n  ExternalSchemaProp,\r\n  LocalSchemaProp,\r\n  LocalTextReference,\r\n  LocalValue,\r\n  NoCodeComponentDefinition,\r\n  NoCodeComponentEntry,\r\n  NumberSchemaProp,\r\n  Option,\r\n  Position,\r\n  PositionSchemaProp,\r\n  RadioGroupSchemaProp,\r\n  ResponsiveValue,\r\n  SchemaProp,\r\n  SelectSchemaProp,\r\n  SerializedComponentDefinitions,\r\n  StringSchemaProp,\r\n  TextSchemaProp,\r\n  ThemeTokenValue,\r\n  TokenSchemaProp,\r\n  TokenValue,\r\n  TrulyResponsiveValue,\r\n} from \"../types\";\r\nimport { CompilationCache } from \"./CompilationCache\";\r\nimport { buildRichTextNoCodeEntry } from \"./builtins/$richText/builders\";\r\nimport { compileComponent } from \"./compileComponent\";\r\nimport { getDevicesWidths } from \"./devices\";\r\nimport {\r\n  findComponentDefinitionById,\r\n  findComponentDefinitionsByType,\r\n} from \"./findComponentDefinition\";\r\nimport { Component$$$SchemaProp } from \"./schema\";\r\nimport {\r\n  CompilationContextType,\r\n  ContextProps,\r\n  EditingInfoComponent,\r\n  EditingInfoComponentCollection,\r\n} from \"./types\";\r\n\r\ntype SchemaPropDefinition<Type, CompiledType = Type> = {\r\n  compile: (\r\n    value: Type,\r\n    contextProps: ContextProps,\r\n    serializedDefinitions: SerializedComponentDefinitions,\r\n    editingInfoComponent:\r\n      | EditingInfoComponent\r\n      | EditingInfoComponentCollection\r\n      | undefined,\r\n    configPrefix: string,\r\n    cache: CompilationCache\r\n  ) => CompiledType;\r\n  normalize: (value: any) => Type; // produces valid internal type\r\n  getHash: (\r\n    value: Type,\r\n    breakpointIndex: string,\r\n    devices: Devices\r\n  ) => string | undefined;\r\n};\r\n\r\ntype TextSchemaPropDefinition = SchemaPropDefinition<\r\n  LocalTextReference | ExternalReference<string>,\r\n  CompiledLocalTextReference | ExternalReference<string>\r\n>;\r\n\r\ntype StringSchemaPropDefinition = SchemaPropDefinition<\r\n  ResponsiveValue<string>,\r\n  ResponsiveValue<string>\r\n>;\r\n\r\ntype NumberSchemaPropDefinition = SchemaPropDefinition<number, number>;\r\n\r\ntype BooleanSchemaPropDefinition = SchemaPropDefinition<\r\n  ResponsiveValue<boolean>,\r\n  ResponsiveValue<boolean>\r\n>;\r\n\r\ntype SelectSchemaPropDefinition = SchemaPropDefinition<\r\n  ResponsiveValue<string>,\r\n  ResponsiveValue<string>\r\n>;\r\n\r\ntype RadioGroupSchemaPropDefinition = SchemaPropDefinition<\r\n  ResponsiveValue<string>,\r\n  ResponsiveValue<string>\r\n>;\r\n\r\nexport type ConfigComponentCompilationOutput = {\r\n  compiledComponentConfig: CompiledComponentConfig;\r\n  configAfterAuto: NoCodeComponentEntry;\r\n};\r\n\r\ntype ComponentSchemaPropDefinition = SchemaPropDefinition<\r\n  Array<NoCodeComponentEntry>,\r\n  Array<ConfigComponentCompilationOutput>\r\n>;\r\n\r\ntype ComponentCollectionSchemaPropDefinition = SchemaPropDefinition<\r\n  Array<NoCodeComponentEntry>,\r\n  Array<ConfigComponentCompilationOutput>\r\n>;\r\n\r\ntype ComponentCollectionLocalisedSchemaPropDefinition = SchemaPropDefinition<\r\n  { [locale: string]: NoCodeComponentEntry[] },\r\n  Array<ConfigComponentCompilationOutput>\r\n>;\r\n\r\ntype Component$$$SchemaPropDefinition = SchemaPropDefinition<\r\n  NoCodeComponentEntry,\r\n  NoCodeComponentEntry\r\n>;\r\n\r\nexport type SchemaPropDefinitionProviders = {\r\n  text: (\r\n    schemaProp: TextSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => TextSchemaPropDefinition;\r\n  string: (\r\n    schemaProp: StringSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => StringSchemaPropDefinition;\r\n  number: (\r\n    schemaProp: NumberSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => NumberSchemaPropDefinition;\r\n  boolean: (\r\n    schemaProp: BooleanSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => BooleanSchemaPropDefinition;\r\n  select: (\r\n    schemaProp: SelectSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => SelectSchemaPropDefinition;\r\n  \"radio-group\": (\r\n    schemaProp: RadioGroupSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => RadioGroupSchemaPropDefinition;\r\n  component: (\r\n    schemaProp: ComponentSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => ComponentSchemaPropDefinition;\r\n  \"component-collection\": (\r\n    schemaProp: ComponentCollectionSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => ComponentCollectionSchemaPropDefinition;\r\n  \"component-collection-localised\": (\r\n    schemaProp: ComponentCollectionLocalisedSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => ComponentCollectionLocalisedSchemaPropDefinition;\r\n  component$$$: (\r\n    schemaProp: Component$$$SchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => Component$$$SchemaPropDefinition;\r\n  // external: (\r\n  //   schemaProp: ExternalSchemaProp,\r\n  //   compilationContext: CompilationContextType\r\n  // ) => ExternalSchemaPropDefinition;\r\n  position: (\r\n    schemaProp: PositionSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => SchemaPropDefinition<\r\n    ResponsiveValue<Position>,\r\n    ResponsiveValue<Position>\r\n  >;\r\n  custom: (\r\n    schemaProp: ExternalSchemaProp | LocalSchemaProp | TokenSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ) => SchemaPropDefinition<\r\n    ResponsiveValue<ExternalReference | LocalValue | TokenValue>,\r\n    ExternalReference | string\r\n  >;\r\n};\r\n\r\ntype SchemaPropDefinitionProvider =\r\n  SchemaPropDefinitionProviders[keyof SchemaPropDefinitionProviders];\r\n\r\nconst textProvider: SchemaPropDefinitionProviders[\"text\"] = (\r\n  schemaProp,\r\n  compilationContext\r\n) => {\r\n  const checkIfValid = (x: any) => {\r\n    if (typeof x !== \"object\" || x === null) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof x.id === \"string\") {\r\n      if (x.id.startsWith(\"local.\")) {\r\n        // for local values \"value\" must be object\r\n        if (typeof x.value !== \"object\" || x.value === null) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return {\r\n    normalize: (x: any) => {\r\n      if (x === undefined || x === null) {\r\n        return {\r\n          id: \"local.\" + uniqueId(),\r\n          value: {\r\n            [compilationContext.contextParams.locale]:\r\n              schemaProp.defaultValue ?? \"Lorem ipsum\",\r\n          },\r\n          widgetId: \"@easyblocks/local-text\",\r\n        };\r\n      }\r\n\r\n      if (checkIfValid(x)) {\r\n        return x;\r\n      }\r\n\r\n      throw new Error(`incorrect text type: ${x}`);\r\n    },\r\n    compile: (x: any) => {\r\n      if (\"value\" in x) {\r\n        const value = x.value[compilationContext.contextParams.locale];\r\n\r\n        // Let's apply fallback\r\n        if (typeof value !== \"string\") {\r\n          const fallbackValue =\r\n            getFallbackForLocale(\r\n              x.value,\r\n              compilationContext.contextParams.locale,\r\n              compilationContext.locales\r\n            ) ?? \"\";\r\n\r\n          return {\r\n            id: x.id,\r\n            value: fallbackValue,\r\n            widgetId: \"@easyblocks/local-text\",\r\n          };\r\n        }\r\n\r\n        return {\r\n          id: x.id,\r\n          value,\r\n          widgetId: \"@easyblocks/local-text\",\r\n        };\r\n      }\r\n\r\n      return {\r\n        id: x.id,\r\n        widgetId: x.widgetId,\r\n        ...(x.id !== null && { key: x.key }),\r\n      };\r\n    },\r\n    getHash: (value) => {\r\n      // TODO: those conditions will be removed after we merge external-local texts update\r\n      if (typeof value === \"string\") {\r\n        return value;\r\n      }\r\n      if (value === null) {\r\n        return undefined;\r\n      }\r\n\r\n      return value.id ?? undefined;\r\n    },\r\n  };\r\n};\r\n\r\nexport const schemaPropDefinitions: SchemaPropDefinitionProviders = {\r\n  text: textProvider,\r\n  number: (schemaProp, compilationContext): NumberSchemaPropDefinition => {\r\n    const normalize = getNormalize(\r\n      compilationContext,\r\n      schemaProp.defaultValue,\r\n      0,\r\n      (x) => (typeof x === \"number\" ? x : undefined)\r\n    );\r\n    return {\r\n      normalize,\r\n      compile: (x) => x,\r\n      getHash: (value) => {\r\n        return value.toString();\r\n      },\r\n    };\r\n  },\r\n\r\n  string: (schemaProp, compilationContext): StringSchemaPropDefinition => {\r\n    const normalize = schemaProp.responsive\r\n      ? getResponsiveNormalize(\r\n        compilationContext,\r\n        schemaProp.defaultValue,\r\n        \"\",\r\n        (x) => (typeof x === \"string\" ? x : undefined)\r\n      )\r\n      : getNormalize(compilationContext, schemaProp.defaultValue, \"\", (x) =>\r\n        typeof x === \"string\" ? x : undefined\r\n      );\r\n\r\n    return {\r\n      normalize,\r\n      compile: (x) => x,\r\n      getHash: (value, breakpointIndex) => {\r\n        if (isTrulyResponsiveValue(value)) {\r\n          return responsiveValueAt(value, breakpointIndex);\r\n        }\r\n\r\n        return value;\r\n      },\r\n    };\r\n  },\r\n\r\n  boolean: (schemaProp, compilationContext): BooleanSchemaPropDefinition => {\r\n    const normalize = schemaProp.responsive\r\n      ? getResponsiveNormalize(\r\n        compilationContext,\r\n        schemaProp.defaultValue,\r\n        false,\r\n        (x) => (typeof x === \"boolean\" ? x : undefined)\r\n      )\r\n      : getNormalize(compilationContext, schemaProp.defaultValue, false, (x) =>\r\n        typeof x === \"boolean\" ? x : undefined\r\n      );\r\n\r\n    return {\r\n      normalize,\r\n      compile: (x) => x,\r\n      getHash: (value, breakpointIndex) => {\r\n        if (isTrulyResponsiveValue(value)) {\r\n          const breakpointValue = responsiveValueAt(value, breakpointIndex);\r\n          return breakpointValue?.toString();\r\n        }\r\n\r\n        return value.toString();\r\n      },\r\n    };\r\n  },\r\n\r\n  select: getSelectSchemaPropDefinition(),\r\n\r\n  \"radio-group\": getSelectSchemaPropDefinition(),\r\n\r\n  component: (\r\n    schemaProp,\r\n    compilationContext: CompilationContextType\r\n  ): ComponentSchemaPropDefinition => {\r\n    // Here:\r\n    // 1. if non-fixed => block field.\r\n    // 2. if fixed => block field with \"fixed\" flag (no component picker).\r\n    const normalize = (x: any) => {\r\n      if (!Array.isArray(x) || x.length === 0) {\r\n        let componentDefinition: NoCodeComponentDefinition | undefined;\r\n\r\n        for (const componentIdOrType of schemaProp.accepts) {\r\n          componentDefinition = findComponentDefinitionById(\r\n            componentIdOrType,\r\n            compilationContext\r\n          );\r\n\r\n          if (!componentDefinition) {\r\n            const componentDefinitionsByType = findComponentDefinitionsByType(\r\n              componentIdOrType,\r\n              compilationContext\r\n            );\r\n\r\n            if (componentDefinitionsByType.length > 0) {\r\n              componentDefinition = componentDefinitionsByType[0];\r\n              break;\r\n            }\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (schemaProp.required) {\r\n          if (!componentDefinition) {\r\n            throw new Error(\r\n              `Missing component definition for prop \"${schemaProp.prop\r\n              }\" for specified accepted types: [${schemaProp.accepts.join(\r\n                \", \"\r\n              )}]`\r\n            );\r\n          }\r\n\r\n          return [\r\n            normalizeComponent(\r\n              { _component: componentDefinition.id },\r\n              compilationContext\r\n            ),\r\n          ];\r\n        }\r\n\r\n        return [];\r\n      }\r\n\r\n      return [normalizeComponent(x[0], compilationContext)];\r\n    };\r\n\r\n    return {\r\n      normalize,\r\n      compile: (\r\n        arg,\r\n        contextProps,\r\n        serializedDefinitions,\r\n        editingInfoComponent,\r\n        configPrefix,\r\n        cache\r\n      ) => {\r\n        if (arg.length === 0) {\r\n          return [];\r\n        }\r\n\r\n        // FIXME: ?????\r\n        const { configAfterAuto, compiledComponentConfig } = compileComponent(\r\n          arg[0] as NoCodeComponentEntry,\r\n          compilationContext,\r\n          contextProps,\r\n          serializedDefinitions || {\r\n            components: [],\r\n          },\r\n          cache,\r\n          editingInfoComponent,\r\n          `${configPrefix}.0`\r\n        );\r\n\r\n        return [\r\n          {\r\n            configAfterAuto,\r\n            compiledComponentConfig,\r\n          },\r\n        ];\r\n      },\r\n      getHash: (value) => {\r\n        if (value.length > 0) {\r\n          // For now, if the block's value contains elements, it will only contain single element\r\n          if (process.env.NODE_ENV === \"development\") {\r\n            console.assert(\r\n              value.length === 1,\r\n              \"component prop should have only one element\"\r\n            );\r\n          }\r\n\r\n          return value[0]._component;\r\n        }\r\n\r\n        return \"__BLOCK_EMPTY__\";\r\n      },\r\n    };\r\n  },\r\n\r\n  \"component-collection\": (\r\n    _,\r\n    compilationContext: CompilationContextType\r\n  ): ComponentCollectionSchemaPropDefinition => {\r\n    const normalize = (x: any) => {\r\n      if (!Array.isArray(x)) {\r\n        return [];\r\n      }\r\n      const ret = (x || []).map((item: NoCodeComponentEntry) =>\r\n        normalizeComponent(item, compilationContext)\r\n      );\r\n\r\n      return ret;\r\n    };\r\n\r\n    return {\r\n      normalize,\r\n      compile: (\r\n        arr,\r\n        contextProps,\r\n        serializedDefinitions,\r\n        editingInfoComponents,\r\n        configPrefix,\r\n        cache\r\n      ) => {\r\n        return arr.map((componentConfig, index) =>\r\n          compileComponent(\r\n            componentConfig as NoCodeComponentEntry,\r\n            compilationContext,\r\n            (contextProps.itemProps || [])[index] || {},\r\n            serializedDefinitions,\r\n            cache,\r\n            (\r\n              editingInfoComponents as\r\n              | EditingInfoComponentCollection\r\n              | undefined\r\n            )?.items?.[index],\r\n            `${configPrefix}.${index}`\r\n          )\r\n        );\r\n      },\r\n      getHash: (value) => {\r\n        return value.map((v) => v._component).join(\";\");\r\n      },\r\n    };\r\n  },\r\n\r\n  \"component-collection-localised\": (\r\n    schemaProp,\r\n    compilationContext: CompilationContextType\r\n  ): ComponentCollectionLocalisedSchemaPropDefinition => {\r\n    const collectionSchemaPropDefinition = schemaPropDefinitions[\r\n      \"component-collection\"\r\n    ]({ ...schemaProp, type: \"component-collection\" }, compilationContext);\r\n\r\n    return {\r\n      normalize: (x: any) => {\r\n        if (x === undefined) {\r\n          return {};\r\n        }\r\n        const normalized: { [locale: string]: NoCodeComponentEntry[] } = {};\r\n        for (const locale in x) {\r\n          if (locale === \"__fallback\") {\r\n            continue;\r\n          }\r\n\r\n          normalized[locale] = collectionSchemaPropDefinition.normalize(\r\n            x[locale]\r\n          );\r\n        }\r\n\r\n        return normalized;\r\n      },\r\n      compile: (\r\n        value,\r\n        contextProps,\r\n        serializedDefinitions,\r\n        editingInfoComponents,\r\n        configPrefix,\r\n        cache\r\n      ) => {\r\n        const resolvedLocalisedValue = resolveLocalisedValue(\r\n          value,\r\n          compilationContext\r\n        );\r\n\r\n        return collectionSchemaPropDefinition.compile(\r\n          resolvedLocalisedValue?.value ?? [],\r\n          contextProps,\r\n          serializedDefinitions,\r\n          editingInfoComponents,\r\n          `${configPrefix}.${resolvedLocalisedValue?.locale ??\r\n          compilationContext.contextParams.locale\r\n          }`,\r\n          cache\r\n        );\r\n      },\r\n      getHash: (value, breakpoint, devices) => {\r\n        return collectionSchemaPropDefinition.getHash(\r\n          value[compilationContext.contextParams.locale] ?? [],\r\n          breakpoint,\r\n          devices\r\n        );\r\n      },\r\n    };\r\n  },\r\n\r\n  component$$$: () => {\r\n    return {\r\n      normalize: (x) => x,\r\n      compile: (x) => x,\r\n      getHash: (x) => x._component,\r\n    };\r\n  },\r\n\r\n  // external: (schemaProp, compilationContext) => {\r\n  //   if (schemaProp.responsive) {\r\n  //     const defaultValue: ExternalReferenceEmpty = {\r\n  //       id: null,\r\n  //       widgetId: compilationContext.isEditing\r\n  //         ? compilationContext.types[schemaProp.type]?.widgets[0]?.id\r\n  //         : \"\",\r\n  //     };\r\n\r\n  //     const normalize = getResponsiveNormalize<ExternalReference>(\r\n  //       compilationContext,\r\n  //       defaultValue,\r\n  //       defaultValue,\r\n  //       externalNormalize(schemaProp.type)\r\n  //     );\r\n\r\n  //     return {\r\n  //       normalize,\r\n  //       compile: (x) => x,\r\n  //       getHash: externalReferenceGetHash,\r\n  //     };\r\n  //   }\r\n\r\n  //   return {\r\n  //     normalize: (value) => {\r\n  //       const normalized = externalNormalize(schemaProp.type)(\r\n  //         value,\r\n  //         compilationContext\r\n  //       );\r\n\r\n  //       if (!normalized) {\r\n  //         return {\r\n  //           id: null,\r\n  //           widgetId: compilationContext.types[schemaProp.type]?.widgets[0]?.id,\r\n  //         };\r\n  //       }\r\n\r\n  //       return normalized;\r\n  //     },\r\n  //     compile: (value) => {\r\n  //       return value;\r\n  //     },\r\n  //     getHash: (value) => {\r\n  //       if (value.id === null) {\r\n  //         return `${schemaProp.type}.${value.widgetId}`;\r\n  //       }\r\n\r\n  //       return `${schemaProp.type}.${value.widgetId}.${value.id}`;\r\n  //     },\r\n  //   };\r\n  // },\r\n  position: (schemaProp, compilationContext) => {\r\n    return {\r\n      normalize: getResponsiveNormalize<Position>(\r\n        compilationContext,\r\n        schemaProp.defaultValue,\r\n        \"top-left\",\r\n        (x) => {\r\n          return typeof x === \"string\" ? (x as Position) : \"top-left\";\r\n        }\r\n      ),\r\n      compile: (x) => x,\r\n      getHash: (value, currentBreakpoint) => {\r\n        if (isTrulyResponsiveValue(value)) {\r\n          const breakpointValue = responsiveValueAt(value, currentBreakpoint);\r\n          return breakpointValue?.toString();\r\n        }\r\n\r\n        return value;\r\n      },\r\n    };\r\n  },\r\n  custom: (schemaProp, compilationContext) => {\r\n    const customTypeDefinition = compilationContext.types[schemaProp.type];\r\n\r\n    return {\r\n      normalize: (value) => {\r\n        if (customTypeDefinition.type === \"inline\") {\r\n          const defaultValue =\r\n            schemaProp.defaultValue ?? customTypeDefinition.defaultValue;\r\n\r\n          const normalizeScalar = (v: any) => {\r\n            if (isLocalValue(v)) {\r\n              if (customTypeDefinition.validate) {\r\n                const isValueValid = customTypeDefinition.validate(v.value);\r\n\r\n                if (isValueValid) {\r\n                  return v;\r\n                }\r\n\r\n                return {\r\n                  value: defaultValue,\r\n                  widgetId: v.widgetId,\r\n                };\r\n              }\r\n\r\n              return {\r\n                value: v.value ?? defaultValue,\r\n                widgetId: v.widgetId,\r\n              };\r\n            }\r\n\r\n            return {\r\n              value: v ?? defaultValue,\r\n              widgetId: customTypeDefinition.widget.id,\r\n            };\r\n          };\r\n\r\n          if (\r\n            (customTypeDefinition.responsiveness === \"optional\" &&\r\n              schemaProp.responsive) ||\r\n            customTypeDefinition.responsiveness === \"always\"\r\n          ) {\r\n            const normalize = getResponsiveNormalize(\r\n              compilationContext,\r\n              defaultValue,\r\n              defaultValue,\r\n              normalizeScalar\r\n            );\r\n\r\n            return normalize(value);\r\n          }\r\n\r\n          if (\r\n            customTypeDefinition.responsiveness === \"never\" &&\r\n            schemaProp.responsive\r\n          ) {\r\n            console.warn(\r\n              `Custom type \"${schemaProp.type}\" is marked as \"never\" responsive, but schema prop is marked as responsive. This is not supported and the value for this field is going to stay not responsive. Please change custom type definition or schema prop definition.`\r\n            );\r\n          }\r\n\r\n          const result = normalizeScalar(value);\r\n\r\n          if (result) {\r\n            return result;\r\n          }\r\n\r\n          const defaultLocalValue: LocalValue = {\r\n            value: defaultValue,\r\n            widgetId: customTypeDefinition.widget.id,\r\n          };\r\n\r\n          return defaultLocalValue;\r\n        }\r\n\r\n        if (customTypeDefinition.type === \"token\") {\r\n          const themeValues =\r\n            compilationContext.theme[customTypeDefinition.token];\r\n          const defaultThemeValueEntry = Object.entries(themeValues).find(\r\n            ([, v]) => v.isDefault\r\n          );\r\n\r\n          const defaultValue = (() => {\r\n            if (schemaProp.defaultValue) {\r\n              return schemaProp.defaultValue;\r\n            } else if (defaultThemeValueEntry) {\r\n              return { tokenId: defaultThemeValueEntry[0] };\r\n            } else {\r\n              return customTypeDefinition.defaultValue;\r\n            }\r\n          })();\r\n\r\n          const defaultWidgetId = customTypeDefinition.widget?.id;\r\n\r\n          const createTokenNormalizer = (normalizeScalar?: (x: any) => any) => {\r\n            return customTypeDefinition.responsiveness === \"always\" ||\r\n              (customTypeDefinition.responsiveness === \"optional\" &&\r\n                schemaProp.responsive)\r\n              ? getResponsiveNormalize<any>(\r\n                compilationContext,\r\n                schemaProp.defaultValue,\r\n                customTypeDefinition.defaultValue,\r\n                (x: any) => {\r\n                  return normalizeTokenValue(\r\n                    x,\r\n                    themeValues as ResponsiveValue<any>,\r\n                    defaultValue,\r\n                    defaultWidgetId,\r\n                    normalizeScalar ?? ((x) => x)\r\n                  );\r\n                }\r\n              )\r\n              : getNormalize(\r\n                compilationContext,\r\n                schemaProp.defaultValue,\r\n                customTypeDefinition.defaultValue,\r\n                (x: any) => {\r\n                  return normalizeTokenValue(\r\n                    x,\r\n                    themeValues as ResponsiveValue<any>,\r\n                    defaultValue,\r\n                    defaultWidgetId,\r\n                    normalizeScalar ?? ((x) => x)\r\n                  );\r\n                }\r\n              );\r\n          };\r\n\r\n          if (customTypeDefinition.token === \"space\") {\r\n            const normalizeSpace = createTokenNormalizer((x) => {\r\n              if (typeof x === \"number\") {\r\n                return `${x}px`;\r\n              }\r\n\r\n              const isValidSpacing = customTypeDefinition.validate?.(x) ?? true;\r\n\r\n              if (!isValidSpacing) {\r\n                return;\r\n              }\r\n\r\n              return x;\r\n            });\r\n\r\n            return normalizeSpace(value);\r\n          }\r\n\r\n          if (customTypeDefinition.token === \"icons\") {\r\n            const scalarValueNormalize = (x: any) => {\r\n              if (typeof x === \"string\" && x.trim().startsWith(\"<svg\")) {\r\n                return x;\r\n              }\r\n              return;\r\n            };\r\n\r\n            const iconDefaultValue =\r\n              normalizeTokenValue<string>(\r\n                schemaProp.defaultValue,\r\n                themeValues as Record<string, ThemeTokenValue<string>>,\r\n                customTypeDefinition.defaultValue,\r\n                defaultWidgetId,\r\n                scalarValueNormalize\r\n              ) ?? customTypeDefinition.defaultValue;\r\n\r\n            return (\r\n              normalizeTokenValue<string>(\r\n                value,\r\n                themeValues as Record<string, ThemeTokenValue<string>>,\r\n                iconDefaultValue,\r\n                defaultWidgetId,\r\n                scalarValueNormalize\r\n              ) ?? value\r\n            );\r\n          }\r\n\r\n          const defaultTokenNormalizer = createTokenNormalizer();\r\n\r\n          return defaultTokenNormalizer(value);\r\n        }\r\n\r\n        if (customTypeDefinition.type === \"external\") {\r\n          if (schemaProp.responsive) {\r\n            const defaultValue: ExternalReferenceEmpty = {\r\n              id: null,\r\n              widgetId: compilationContext.isEditing\r\n                ? customTypeDefinition.widgets[0]?.id\r\n                : \"\",\r\n            };\r\n\r\n            const normalize = getResponsiveNormalize<ExternalReference>(\r\n              compilationContext,\r\n              defaultValue,\r\n              defaultValue,\r\n              externalNormalize(schemaProp.type)\r\n            );\r\n\r\n            return normalize(value);\r\n          }\r\n\r\n          const normalized = externalNormalize(schemaProp.type)(\r\n            value,\r\n            compilationContext\r\n          );\r\n\r\n          if (!normalized) {\r\n            return {\r\n              id: null,\r\n              widgetId: customTypeDefinition.widgets[0]?.id,\r\n            };\r\n          }\r\n\r\n          return normalized;\r\n        }\r\n\r\n        throw new Error(\"Unknown type definition\");\r\n      },\r\n      compile: (x) => {\r\n        const val = responsiveValueMap(x, (y) => {\r\n          if (\"value\" in y) {\r\n            return y.value;\r\n          }\r\n\r\n          return y;\r\n        });\r\n\r\n        const flattened = responsiveValueFlatten(\r\n          val,\r\n          compilationContext.devices\r\n        );\r\n\r\n        return responsiveValueFill(\r\n          flattened,\r\n          compilationContext.devices,\r\n          getDevicesWidths(compilationContext.devices)\r\n        );\r\n      },\r\n      getHash: (value, breakpointIndex) => {\r\n        function getTokenValue(value: TokenValue) {\r\n          if (value.tokenId) {\r\n            return value.tokenId;\r\n          }\r\n\r\n          if (typeof value.value === \"object\") {\r\n            return JSON.stringify(value.value);\r\n          }\r\n\r\n          const scalarVal: any = value.value;\r\n\r\n          if (scalarVal.toString) {\r\n            return scalarVal.toString();\r\n          }\r\n\r\n          throw new Error(\"unreachable\");\r\n        }\r\n\r\n        if (customTypeDefinition.type === \"external\") {\r\n          return externalReferenceGetHash(\r\n            value as ResponsiveValue<ExternalReference>,\r\n            breakpointIndex\r\n          );\r\n        }\r\n\r\n        if (isTrulyResponsiveValue(value)) {\r\n          const breakpointValue = responsiveValueAt(\r\n            value as TrulyResponsiveValue<LocalValue | TokenValue>,\r\n            breakpointIndex\r\n          );\r\n\r\n          if (!breakpointValue) {\r\n            return;\r\n          }\r\n\r\n          if (\"tokenId\" in breakpointValue) {\r\n            return getTokenValue(breakpointValue);\r\n          }\r\n\r\n          return typeof breakpointValue.value === \"object\"\r\n            ? JSON.stringify(breakpointValue.value)\r\n            : breakpointValue.value;\r\n        }\r\n\r\n        if (\"tokenId\" in value) {\r\n          return getTokenValue(value);\r\n        }\r\n\r\n        return typeof (value as LocalValue).value === \"object\"\r\n          ? JSON.stringify((value as LocalValue).value)\r\n          : (value as LocalValue).value;\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nfunction getNormalize<T>(\r\n  compilationContext: CompilationContextType,\r\n  defaultValue: any,\r\n  fallbackDefaultValue: T,\r\n  normalize: (\r\n    x: any,\r\n    compilationContext: CompilationContextType\r\n  ) => T | undefined = (x) => x\r\n) {\r\n  return (val: any): T => {\r\n    const normalizedVal = normalize(val, compilationContext);\r\n    if (normalizedVal !== undefined) {\r\n      return normalizedVal;\r\n    }\r\n\r\n    const normalizedDefaultVal = normalize(defaultValue, compilationContext);\r\n    if (normalizedDefaultVal !== undefined) {\r\n      return normalizedDefaultVal;\r\n    }\r\n\r\n    return normalize(fallbackDefaultValue, compilationContext) as T;\r\n  };\r\n}\r\n\r\nfunction getResponsiveNormalize<ScalarType>(\r\n  compilationContext: CompilationContextType,\r\n  defaultValue: any,\r\n  fallbackDefaultValue: ScalarType,\r\n  normalize: (\r\n    x: any,\r\n    compilationContext: CompilationContextType\r\n  ) => ScalarType | undefined = (x) => x\r\n) {\r\n  if (isTrulyResponsiveValue(defaultValue)) {\r\n    /**\r\n     * Here we must decide how this behaves. It's not obvious. If default is responsive, we cannot easily use default breakpoints.\r\n     * It's because auto might be different. Changing one breakpoint changes \"context\" for others.\r\n     */\r\n    throw new Error(\"default responsive values not yet supported\");\r\n  }\r\n\r\n  return (val: any): TrulyResponsiveValue<ScalarType> => {\r\n    const scalarNormalize = getNormalize(\r\n      compilationContext,\r\n      defaultValue,\r\n      fallbackDefaultValue,\r\n      normalize\r\n    );\r\n\r\n    // if value is not really responsive\r\n    if (!isTrulyResponsiveValue(val)) {\r\n      return {\r\n        $res: true,\r\n        [compilationContext.mainBreakpointIndex]: scalarNormalize(val),\r\n      };\r\n    }\r\n\r\n    const responsiveVal = responsiveValueMap(val, (x) => {\r\n      return normalize(x, compilationContext);\r\n    });\r\n\r\n    // main breakpoint always set\r\n    if (responsiveVal[compilationContext.mainBreakpointIndex] === undefined) {\r\n      responsiveVal[compilationContext.mainBreakpointIndex] =\r\n        scalarNormalize(undefined);\r\n    }\r\n\r\n    return responsiveVal as TrulyResponsiveValue<ScalarType>;\r\n  };\r\n}\r\n\r\nfunction getSelectSchemaPropDefinition() {\r\n  return (\r\n    schemaProp: SelectSchemaProp | RadioGroupSchemaProp,\r\n    compilationContext: CompilationContextType\r\n  ): SelectSchemaPropDefinition => {\r\n    return {\r\n      normalize: schemaProp.responsive\r\n        ? getResponsiveNormalize(\r\n          compilationContext,\r\n          schemaProp.defaultValue,\r\n          getFirstOptionValue(schemaProp),\r\n          (x) => {\r\n            return isSelectValueCorrect(x, schemaProp.params.options)\r\n              ? x\r\n              : undefined;\r\n          }\r\n        )\r\n        : getNormalize(\r\n          compilationContext,\r\n          schemaProp.defaultValue,\r\n          getFirstOptionValue(schemaProp),\r\n          (x) => {\r\n            return isSelectValueCorrect(x, schemaProp.params.options)\r\n              ? x\r\n              : undefined;\r\n          }\r\n        ),\r\n      compile: (x) => x,\r\n      getHash: (value, currentBreakpoint) => {\r\n        if (isTrulyResponsiveValue(value)) {\r\n          const breakpointValue = responsiveValueAt(value, currentBreakpoint);\r\n          return breakpointValue?.toString();\r\n        }\r\n\r\n        return value;\r\n      },\r\n    };\r\n  };\r\n}\r\n\r\nfunction isSelectValueCorrect(value: any, options: Array<Option | string>) {\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n  return options.map(getSelectValue).indexOf(value) > -1;\r\n}\r\n\r\nfunction getSelectValue(arg: string | Option): string {\r\n  if (typeof arg === \"string\") {\r\n    return arg;\r\n  }\r\n\r\n  return arg.value;\r\n}\r\n\r\nfunction getFirstOptionValue(\r\n  schemaProp: SelectSchemaProp | RadioGroupSchemaProp\r\n) {\r\n  if (schemaProp.params.options.length === 0) {\r\n    throw new Error(\"Select field can't have 0 options\");\r\n  }\r\n\r\n  const firstOption: string | Option = schemaProp.params.options[0];\r\n  const firstOptionValue: string =\r\n    typeof firstOption === \"object\" ? firstOption.value : firstOption;\r\n\r\n  return firstOptionValue;\r\n}\r\n\r\nfunction normalizeTokenValue<T>(\r\n  x: any,\r\n  themeValues: { [key: string]: ThemeTokenValue<T> },\r\n  defaultValue: { tokenId: string } | { value: any },\r\n  defaultWidgetId: string | undefined,\r\n  scalarValueNormalize: (x: any) => T | undefined = (x) => undefined\r\n): TokenValue<T> | undefined {\r\n  const input = x ?? defaultValue;\r\n  const widgetId = input.widgetId ?? defaultWidgetId;\r\n\r\n  // if (typeof input !== \"object\" && \"value\" in defaultValue) {\r\n  //   const normalizedVal = scalarValueNormalize(defaultValue.value);\r\n\r\n  //   if (normalizedVal !== undefined) {\r\n  //     return {\r\n  //       value: normalizedVal,\r\n  //       widgetId,\r\n  //     };\r\n  //   }\r\n\r\n  //   return;\r\n  // }\r\n\r\n  const hasTokenId = \"tokenId\" in input && typeof input.tokenId === \"string\";\r\n\r\n  if (hasTokenId) {\r\n    const val = themeValues[input.tokenId];\r\n\r\n    if (val !== undefined) {\r\n      return {\r\n        value: val.value,\r\n        tokenId: input.tokenId,\r\n        widgetId,\r\n      };\r\n    }\r\n  }\r\n\r\n  if (\"value\" in input) {\r\n    const normalizedVal = scalarValueNormalize(input.value);\r\n\r\n    if (normalizedVal !== undefined) {\r\n      return {\r\n        tokenId: hasTokenId ? input.tokenId : undefined,\r\n        value: normalizedVal,\r\n        widgetId,\r\n      };\r\n    }\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nfunction externalNormalize(\r\n  externalType: string\r\n): (\r\n  x: any,\r\n  compilationContext: CompilationContextType\r\n) => ExternalReference | undefined {\r\n  return (x, compilationContext) => {\r\n    if (typeof x === \"object\" && x !== null) {\r\n      if (\"id\" in x && x.id !== null) {\r\n        const normalized: ExternalReferenceNonEmpty = {\r\n          id: x.id,\r\n          widgetId: x.widgetId,\r\n          key: x.key,\r\n        };\r\n\r\n        return normalized;\r\n      }\r\n\r\n      const normalized: ExternalReferenceEmpty = {\r\n        id: null,\r\n        widgetId:\r\n          typeof x.widgetId === \"string\"\r\n            ? x.widgetId\r\n            : (\r\n              compilationContext.types[externalType] as\r\n              | Extract<\r\n                CompilationContextType[\"types\"][string],\r\n                { type: \"external\" }\r\n              >\r\n              | undefined\r\n            )?.widgets[0]?.id,\r\n      };\r\n\r\n      return normalized;\r\n    }\r\n  };\r\n}\r\n\r\nfunction externalReferenceGetHash(\r\n  value: ResponsiveValue<ExternalReference>,\r\n  breakpointIndex: string\r\n): string | undefined {\r\n  if (isTrulyResponsiveValue(value)) {\r\n    const breakpointValue = responsiveValueAt(value, breakpointIndex);\r\n\r\n    if (breakpointValue) {\r\n      return externalReferenceGetHash(breakpointValue, breakpointIndex);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if (value.id) {\r\n    return `${value.id}.${value.widgetId}`;\r\n  }\r\n}\r\n\r\nexport function normalizeComponent(\r\n  configComponent: SetOptional<NoCodeComponentEntry, \"_id\">,\r\n  compilationContext: CompilationContextType\r\n): NoCodeComponentEntry {\r\n  const ret: NoCodeComponentEntry = {\r\n    _id: configComponent._id ?? uniqueId(),\r\n    _component: configComponent._component,\r\n  };\r\n\r\n  // Normalize itemProps (before own props). If component definition is missing, we still normalize item props\r\n  if (configComponent._itemProps) {\r\n    ret._itemProps = {};\r\n\r\n    for (const templateId in configComponent._itemProps) {\r\n      ret._itemProps[templateId] = {};\r\n\r\n      for (const fieldName in configComponent._itemProps[templateId]) {\r\n        ret._itemProps[templateId][fieldName] = {};\r\n\r\n        const values = configComponent._itemProps[templateId][fieldName];\r\n\r\n        const ownerDefinition = findComponentDefinitionById(\r\n          templateId,\r\n          compilationContext\r\n        )!;\r\n        const ownerSchemaProp = ownerDefinition.schema.find(\r\n          (x) => x.prop === fieldName\r\n        ) as ComponentCollectionSchemaProp | undefined;\r\n\r\n        if (!ownerSchemaProp) {\r\n          continue;\r\n        }\r\n\r\n        (ownerSchemaProp.itemFields || []).forEach((itemFieldSchemaProp) => {\r\n          ret._itemProps[templateId][fieldName][itemFieldSchemaProp.prop] =\r\n            getSchemaDefinition(\r\n              itemFieldSchemaProp,\r\n              compilationContext\r\n            ).normalize(values[itemFieldSchemaProp.prop]);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const componentDefinition = findComponentDefinitionById(\r\n    configComponent._component,\r\n    compilationContext\r\n  );\r\n\r\n  if (!componentDefinition) {\r\n    console.warn(\r\n      `[normalize] Unknown _component ${configComponent._component}`\r\n    );\r\n    return ret;\r\n  }\r\n\r\n  componentDefinition.schema.forEach((schemaProp) => {\r\n    ret[schemaProp.prop] = getSchemaDefinition(\r\n      schemaProp,\r\n      compilationContext\r\n    ).normalize(configComponent[schemaProp.prop]);\r\n  });\r\n\r\n  // RichText is a really specific component. It must have concrete shape to work properly.\r\n  // When using prop of type `component` with `accepts: [\"@easyblocks/rich-text\"]` it's going to be initialized with empty\r\n  // `elements` property which in result will cause RichText to not work properly. To fix this, we're going\r\n  // to initialize `elements` with default template - the same that's being added when user adds RichText to Stack manually.\r\n  if (ret._component === \"@easyblocks/rich-text\") {\r\n    if (\r\n      Object.keys(ret.elements).length === 0 ||\r\n      ret.elements[compilationContext.contextParams.locale]?.length === 0\r\n    ) {\r\n      const richTextConfig = buildRichTextNoCodeEntry({\r\n        locale: compilationContext.contextParams.locale,\r\n        color: Object.entries(compilationContext.theme.colors ?? {}).find(\r\n          ([, value]) => value.isDefault\r\n        )?.[0],\r\n        font: Object.entries(compilationContext.theme.fonts ?? {}).find(\r\n          ([, value]) => value.isDefault\r\n        )?.[0],\r\n      });\r\n\r\n      ret.elements = richTextConfig.elements;\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nexport function getSchemaDefinition<\r\n  T extends SchemaProp | Component$$$SchemaProp\r\n>(\r\n  schemaProp: T,\r\n  compilationContext: CompilationContextType\r\n): ReturnType<SchemaPropDefinitionProvider> {\r\n  const provider =\r\n    compilationContext.types[schemaProp.type] && schemaProp.type !== \"text\"\r\n      ? schemaPropDefinitions.custom\r\n      : schemaPropDefinitions[schemaProp.type as keyof SchemaPropDefinitionProviders];\r\n\r\n  return provider(schemaProp as any, compilationContext);\r\n}\r\n\r\nexport function resolveLocalisedValue<T>(\r\n  localisedValue: Record<string, T>,\r\n  compilationContext: CompilationContextType\r\n): { value: T; locale: string } | undefined {\r\n  const locale = compilationContext.contextParams.locale;\r\n\r\n  if (localisedValue[locale] !== undefined) {\r\n    return {\r\n      value: localisedValue[locale],\r\n      locale,\r\n    };\r\n  }\r\n\r\n  const fallbackLocale = getFallbackLocaleForLocale(\r\n    locale,\r\n    compilationContext.locales\r\n  );\r\n  if (!fallbackLocale) {\r\n    return;\r\n  }\r\n  return {\r\n    value: localisedValue[fallbackLocale],\r\n    locale: fallbackLocale,\r\n  };\r\n}\r\n"],"names":["textProvider","schemaProp","compilationContext","checkIfValid","x","id","startsWith","value","normalize","undefined","uniqueId","contextParams","locale","defaultValue","widgetId","Error","compile","fallbackValue","getFallbackForLocale","locales","key","getHash","schemaPropDefinitions","text","number","getNormalize","toString","string","responsive","getResponsiveNormalize","breakpointIndex","isTrulyResponsiveValue","responsiveValueAt","boolean","breakpointValue","select","getSelectSchemaPropDefinition","component","Array","isArray","length","componentDefinition","componentIdOrType","accepts","findComponentDefinitionById","componentDefinitionsByType","findComponentDefinitionsByType","required","prop","join","normalizeComponent","_component","arg","contextProps","serializedDefinitions","editingInfoComponent","configPrefix","cache","configAfterAuto","compiledComponentConfig","compileComponent","components","process","env","NODE_ENV","console","assert","component-collection","_","ret","map","item","arr","editingInfoComponents","componentConfig","index","itemProps","items","v","component-collection-localised","collectionSchemaPropDefinition","type","normalized","resolvedLocalisedValue","resolveLocalisedValue","breakpoint","devices","component$$$","position","currentBreakpoint","custom","customTypeDefinition","types","normalizeScalar","isLocalValue","validate","isValueValid","widget","responsiveness","warn","result","defaultLocalValue","themeValues","theme","token","defaultThemeValueEntry","Object","entries","find","_ref","isDefault","tokenId","defaultWidgetId","createTokenNormalizer","normalizeTokenValue","normalizeSpace","isValidSpacing","scalarValueNormalize","trim","iconDefaultValue","defaultTokenNormalizer","isEditing","widgets","externalNormalize","val","responsiveValueMap","y","flattened","responsiveValueFlatten","responsiveValueFill","getDevicesWidths","getTokenValue","JSON","stringify","scalarVal","externalReferenceGetHash","fallbackDefaultValue","arguments","normalizedVal","normalizedDefaultVal","scalarNormalize","$res","mainBreakpointIndex","responsiveVal","getFirstOptionValue","isSelectValueCorrect","params","options","getSelectValue","indexOf","firstOption","firstOptionValue","input","hasTokenId","externalType","configComponent","_id","_itemProps","templateId","fieldName","values","ownerDefinition","ownerSchemaProp","schema","itemFields","forEach","itemFieldSchemaProp","getSchemaDefinition","keys","elements","richTextConfig","buildRichTextNoCodeEntry","color","colors","_ref2","font","fonts","_ref3","provider","localisedValue","fallbackLocale","getFallbackLocaleForLocale"],"mappings":";;;;;;;;;;;;;;AAoMA,MAAMA,YAAmD,GAAGA,CAC1DC,UAAU,EACVC,kBAAkB,KACf;EACH,MAAMC,YAAY,GAAIC,CAAM,IAAK;IAC/B,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,EAAE;AACvC,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,IAAI,OAAOA,CAAC,CAACC,EAAE,KAAK,QAAQ,EAAE;MAC5B,IAAID,CAAC,CAACC,EAAE,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;AAC7B;AACA,QAAA,IAAI,OAAOF,CAAC,CAACG,KAAK,KAAK,QAAQ,IAAIH,CAAC,CAACG,KAAK,KAAK,IAAI,EAAE;AACnD,UAAA,OAAO,KAAK,CAAA;AACd,SAAA;AACF,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;EAED,OAAO;IACLC,SAAS,EAAGJ,CAAM,IAAK;AACrB,MAAA,IAAIA,CAAC,KAAKK,SAAS,IAAIL,CAAC,KAAK,IAAI,EAAE;QACjC,OAAO;AACLC,UAAAA,EAAE,EAAE,QAAQ,GAAGK,QAAQ,EAAE;AACzBH,UAAAA,KAAK,EAAE;YACL,CAACL,kBAAkB,CAACS,aAAa,CAACC,MAAM,GACtCX,UAAU,CAACY,YAAY,IAAI,aAAA;WAC9B;AACDC,UAAAA,QAAQ,EAAE,wBAAA;SACX,CAAA;AACH,OAAA;AAEA,MAAA,IAAIX,YAAY,CAACC,CAAC,CAAC,EAAE;AACnB,QAAA,OAAOA,CAAC,CAAA;AACV,OAAA;AAEA,MAAA,MAAM,IAAIW,KAAK,CAAC,CAAwBX,qBAAAA,EAAAA,CAAC,EAAE,CAAC,CAAA;KAC7C;IACDY,OAAO,EAAGZ,CAAM,IAAK;MACnB,IAAI,OAAO,IAAIA,CAAC,EAAE;QAChB,MAAMG,KAAK,GAAGH,CAAC,CAACG,KAAK,CAACL,kBAAkB,CAACS,aAAa,CAACC,MAAM,CAAC,CAAA;;AAE9D;AACA,QAAA,IAAI,OAAOL,KAAK,KAAK,QAAQ,EAAE;AAC7B,UAAA,MAAMU,aAAa,GACjBC,oBAAoB,CAClBd,CAAC,CAACG,KAAK,EACPL,kBAAkB,CAACS,aAAa,CAACC,MAAM,EACvCV,kBAAkB,CAACiB,OACrB,CAAC,IAAI,EAAE,CAAA;UAET,OAAO;YACLd,EAAE,EAAED,CAAC,CAACC,EAAE;AACRE,YAAAA,KAAK,EAAEU,aAAa;AACpBH,YAAAA,QAAQ,EAAE,wBAAA;WACX,CAAA;AACH,SAAA;QAEA,OAAO;UACLT,EAAE,EAAED,CAAC,CAACC,EAAE;UACRE,KAAK;AACLO,UAAAA,QAAQ,EAAE,wBAAA;SACX,CAAA;AACH,OAAA;MAEA,OAAO;QACLT,EAAE,EAAED,CAAC,CAACC,EAAE;QACRS,QAAQ,EAAEV,CAAC,CAACU,QAAQ;AACpB,QAAA,IAAIV,CAAC,CAACC,EAAE,KAAK,IAAI,IAAI;UAAEe,GAAG,EAAEhB,CAAC,CAACgB,GAAAA;SAAK,CAAA;OACpC,CAAA;KACF;IACDC,OAAO,EAAGd,KAAK,IAAK;AAClB;AACA,MAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AAC7B,QAAA,OAAOA,KAAK,CAAA;AACd,OAAA;MACA,IAAIA,KAAK,KAAK,IAAI,EAAE;AAClB,QAAA,OAAOE,SAAS,CAAA;AAClB,OAAA;AAEA,MAAA,OAAOF,KAAK,CAACF,EAAE,IAAII,SAAS,CAAA;AAC9B,KAAA;GACD,CAAA;AACH,CAAC,CAAA;AAEM,MAAMa,qBAAoD,GAAG;AAClEC,EAAAA,IAAI,EAAEvB,YAAY;AAClBwB,EAAAA,MAAM,EAAEA,CAACvB,UAAU,EAAEC,kBAAkB,KAAiC;IACtE,MAAMM,SAAS,GAAGiB,YAAY,CAC5BvB,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvB,CAAC,EACAT,CAAC,IAAM,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,GAAGK,SACtC,CAAC,CAAA;IACD,OAAO;MACLD,SAAS;MACTQ,OAAO,EAAGZ,CAAC,IAAKA,CAAC;MACjBiB,OAAO,EAAGd,KAAK,IAAK;AAClB,QAAA,OAAOA,KAAK,CAACmB,QAAQ,EAAE,CAAA;AACzB,OAAA;KACD,CAAA;GACF;AAEDC,EAAAA,MAAM,EAAEA,CAAC1B,UAAU,EAAEC,kBAAkB,KAAiC;IACtE,MAAMM,SAAS,GAAGP,UAAU,CAAC2B,UAAU,GACnCC,sBAAsB,CACtB3B,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvB,EAAE,EACDT,CAAC,IAAM,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,GAAGK,SACtC,CAAC,GACCgB,YAAY,CAACvB,kBAAkB,EAAED,UAAU,CAACY,YAAY,EAAE,EAAE,EAAGT,CAAC,IAChE,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,GAAGK,SAC9B,CAAC,CAAA;IAEH,OAAO;MACLD,SAAS;MACTQ,OAAO,EAAGZ,CAAC,IAAKA,CAAC;AACjBiB,MAAAA,OAAO,EAAEA,CAACd,KAAK,EAAEuB,eAAe,KAAK;AACnC,QAAA,IAAIC,sBAAsB,CAACxB,KAAK,CAAC,EAAE;AACjC,UAAA,OAAOyB,iBAAiB,CAACzB,KAAK,EAAEuB,eAAe,CAAC,CAAA;AAClD,SAAA;AAEA,QAAA,OAAOvB,KAAK,CAAA;AACd,OAAA;KACD,CAAA;GACF;AAED0B,EAAAA,OAAO,EAAEA,CAAChC,UAAU,EAAEC,kBAAkB,KAAkC;IACxE,MAAMM,SAAS,GAAGP,UAAU,CAAC2B,UAAU,GACnCC,sBAAsB,CACtB3B,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvB,KAAK,EACJT,CAAC,IAAM,OAAOA,CAAC,KAAK,SAAS,GAAGA,CAAC,GAAGK,SACvC,CAAC,GACCgB,YAAY,CAACvB,kBAAkB,EAAED,UAAU,CAACY,YAAY,EAAE,KAAK,EAAGT,CAAC,IACnE,OAAOA,CAAC,KAAK,SAAS,GAAGA,CAAC,GAAGK,SAC/B,CAAC,CAAA;IAEH,OAAO;MACLD,SAAS;MACTQ,OAAO,EAAGZ,CAAC,IAAKA,CAAC;AACjBiB,MAAAA,OAAO,EAAEA,CAACd,KAAK,EAAEuB,eAAe,KAAK;AACnC,QAAA,IAAIC,sBAAsB,CAACxB,KAAK,CAAC,EAAE;AACjC,UAAA,MAAM2B,eAAe,GAAGF,iBAAiB,CAACzB,KAAK,EAAEuB,eAAe,CAAC,CAAA;AACjE,UAAA,OAAOI,eAAe,EAAER,QAAQ,EAAE,CAAA;AACpC,SAAA;AAEA,QAAA,OAAOnB,KAAK,CAACmB,QAAQ,EAAE,CAAA;AACzB,OAAA;KACD,CAAA;GACF;EAEDS,MAAM,EAAEC,6BAA6B,EAAE;EAEvC,aAAa,EAAEA,6BAA6B,EAAE;AAE9CC,EAAAA,SAAS,EAAEA,CACTpC,UAAU,EACVC,kBAA0C,KACR;AAClC;AACA;AACA;IACA,MAAMM,SAAS,GAAIJ,CAAM,IAAK;AAC5B,MAAA,IAAI,CAACkC,KAAK,CAACC,OAAO,CAACnC,CAAC,CAAC,IAAIA,CAAC,CAACoC,MAAM,KAAK,CAAC,EAAE;AACvC,QAAA,IAAIC,mBAA0D,CAAA;AAE9D,QAAA,KAAK,MAAMC,iBAAiB,IAAIzC,UAAU,CAAC0C,OAAO,EAAE;AAClDF,UAAAA,mBAAmB,GAAGG,2BAA2B,CAC/CF,iBAAiB,EACjBxC,kBACF,CAAC,CAAA;UAED,IAAI,CAACuC,mBAAmB,EAAE;AACxB,YAAA,MAAMI,0BAA0B,GAAGC,8BAA8B,CAC/DJ,iBAAiB,EACjBxC,kBACF,CAAC,CAAA;AAED,YAAA,IAAI2C,0BAA0B,CAACL,MAAM,GAAG,CAAC,EAAE;AACzCC,cAAAA,mBAAmB,GAAGI,0BAA0B,CAAC,CAAC,CAAC,CAAA;AACnD,cAAA,MAAA;AACF,aAAA;AACF,WAAC,MAAM;AACL,YAAA,MAAA;AACF,WAAA;AACF,SAAA;QAEA,IAAI5C,UAAU,CAAC8C,QAAQ,EAAE;UACvB,IAAI,CAACN,mBAAmB,EAAE;AACxB,YAAA,MAAM,IAAI1B,KAAK,CACb,CAA0Cd,uCAAAA,EAAAA,UAAU,CAAC+C,IAAI,CAAA,iCAAA,EACrB/C,UAAU,CAAC0C,OAAO,CAACM,IAAI,CACzD,IACF,CAAC,GACH,CAAC,CAAA;AACH,WAAA;UAEA,OAAO,CACLC,kBAAkB,CAChB;YAAEC,UAAU,EAAEV,mBAAmB,CAACpC,EAAAA;WAAI,EACtCH,kBACF,CAAC,CACF,CAAA;AACH,SAAA;AAEA,QAAA,OAAO,EAAE,CAAA;AACX,OAAA;MAEA,OAAO,CAACgD,kBAAkB,CAAC9C,CAAC,CAAC,CAAC,CAAC,EAAEF,kBAAkB,CAAC,CAAC,CAAA;KACtD,CAAA;IAED,OAAO;MACLM,SAAS;AACTQ,MAAAA,OAAO,EAAEA,CACPoC,GAAG,EACHC,YAAY,EACZC,qBAAqB,EACrBC,oBAAoB,EACpBC,YAAY,EACZC,KAAK,KACF;AACH,QAAA,IAAIL,GAAG,CAACZ,MAAM,KAAK,CAAC,EAAE;AACpB,UAAA,OAAO,EAAE,CAAA;AACX,SAAA;;AAEA;QACA,MAAM;UAAEkB,eAAe;AAAEC,UAAAA,uBAAAA;AAAwB,SAAC,GAAGC,gBAAgB,CACnER,GAAG,CAAC,CAAC,CAAC,EACNlD,kBAAkB,EAClBmD,YAAY,EACZC,qBAAqB,IAAI;AACvBO,UAAAA,UAAU,EAAE,EAAA;SACb,EACDJ,KAAK,EACLF,oBAAoB,EACpB,CAAGC,EAAAA,YAAY,IACjB,CAAC,CAAA;AAED,QAAA,OAAO,CACL;UACEE,eAAe;AACfC,UAAAA,uBAAAA;AACF,SAAC,CACF,CAAA;OACF;MACDtC,OAAO,EAAGd,KAAK,IAAK;AAClB,QAAA,IAAIA,KAAK,CAACiC,MAAM,GAAG,CAAC,EAAE;AACpB;AACA,UAAA,IAAIsB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;YAC1CC,OAAO,CAACC,MAAM,CACZ3D,KAAK,CAACiC,MAAM,KAAK,CAAC,EAClB,6CACF,CAAC,CAAA;AACH,WAAA;AAEA,UAAA,OAAOjC,KAAK,CAAC,CAAC,CAAC,CAAC4C,UAAU,CAAA;AAC5B,SAAA;AAEA,QAAA,OAAO,iBAAiB,CAAA;AAC1B,OAAA;KACD,CAAA;GACF;AAED,EAAA,sBAAsB,EAAEgB,CACtBC,CAAC,EACDlE,kBAA0C,KACE;IAC5C,MAAMM,SAAS,GAAIJ,CAAM,IAAK;AAC5B,MAAA,IAAI,CAACkC,KAAK,CAACC,OAAO,CAACnC,CAAC,CAAC,EAAE;AACrB,QAAA,OAAO,EAAE,CAAA;AACX,OAAA;AACA,MAAA,MAAMiE,GAAG,GAAG,CAACjE,CAAC,IAAI,EAAE,EAAEkE,GAAG,CAAEC,IAA0B,IACnDrB,kBAAkB,CAACqB,IAAI,EAAErE,kBAAkB,CAC7C,CAAC,CAAA;AAED,MAAA,OAAOmE,GAAG,CAAA;KACX,CAAA;IAED,OAAO;MACL7D,SAAS;AACTQ,MAAAA,OAAO,EAAEA,CACPwD,GAAG,EACHnB,YAAY,EACZC,qBAAqB,EACrBmB,qBAAqB,EACrBjB,YAAY,EACZC,KAAK,KACF;QACH,OAAOe,GAAG,CAACF,GAAG,CAAC,CAACI,eAAe,EAAEC,KAAK,KACpCf,gBAAgB,CACdc,eAAe,EACfxE,kBAAkB,EAClB,CAACmD,YAAY,CAACuB,SAAS,IAAI,EAAE,EAAED,KAAK,CAAC,IAAI,EAAE,EAC3CrB,qBAAqB,EACrBG,KAAK,EAEHgB,qBAAqB,EAGpBI,KAAK,GAAGF,KAAK,CAAC,EACjB,CAAA,EAAGnB,YAAY,CAAImB,CAAAA,EAAAA,KAAK,CAC1B,CAAA,CACF,CAAC,CAAA;OACF;MACDtD,OAAO,EAAGd,KAAK,IAAK;AAClB,QAAA,OAAOA,KAAK,CAAC+D,GAAG,CAAEQ,CAAC,IAAKA,CAAC,CAAC3B,UAAU,CAAC,CAACF,IAAI,CAAC,GAAG,CAAC,CAAA;AACjD,OAAA;KACD,CAAA;GACF;AAED,EAAA,gCAAgC,EAAE8B,CAChC9E,UAAU,EACVC,kBAA0C,KACW;AACrD,IAAA,MAAM8E,8BAA8B,GAAG1D,qBAAqB,CAC1D,sBAAsB,CACvB,CAAC;AAAE,MAAA,GAAGrB,UAAU;AAAEgF,MAAAA,IAAI,EAAE,sBAAA;KAAwB,EAAE/E,kBAAkB,CAAC,CAAA;IAEtE,OAAO;MACLM,SAAS,EAAGJ,CAAM,IAAK;QACrB,IAAIA,CAAC,KAAKK,SAAS,EAAE;AACnB,UAAA,OAAO,EAAE,CAAA;AACX,SAAA;QACA,MAAMyE,UAAwD,GAAG,EAAE,CAAA;AACnE,QAAA,KAAK,MAAMtE,MAAM,IAAIR,CAAC,EAAE;UACtB,IAAIQ,MAAM,KAAK,YAAY,EAAE;AAC3B,YAAA,SAAA;AACF,WAAA;AAEAsE,UAAAA,UAAU,CAACtE,MAAM,CAAC,GAAGoE,8BAA8B,CAACxE,SAAS,CAC3DJ,CAAC,CAACQ,MAAM,CACV,CAAC,CAAA;AACH,SAAA;AAEA,QAAA,OAAOsE,UAAU,CAAA;OAClB;AACDlE,MAAAA,OAAO,EAAEA,CACPT,KAAK,EACL8C,YAAY,EACZC,qBAAqB,EACrBmB,qBAAqB,EACrBjB,YAAY,EACZC,KAAK,KACF;AACH,QAAA,MAAM0B,sBAAsB,GAAGC,qBAAqB,CAClD7E,KAAK,EACLL,kBACF,CAAC,CAAA;AAED,QAAA,OAAO8E,8BAA8B,CAAChE,OAAO,CAC3CmE,sBAAsB,EAAE5E,KAAK,IAAI,EAAE,EACnC8C,YAAY,EACZC,qBAAqB,EACrBmB,qBAAqB,EACrB,CAAA,EAAGjB,YAAY,CAAA,CAAA,EAAI2B,sBAAsB,EAAEvE,MAAM,IACjDV,kBAAkB,CAACS,aAAa,CAACC,MAAM,CACrC,CAAA,EACF6C,KACF,CAAC,CAAA;OACF;AACDpC,MAAAA,OAAO,EAAEA,CAACd,KAAK,EAAE8E,UAAU,EAAEC,OAAO,KAAK;AACvC,QAAA,OAAON,8BAA8B,CAAC3D,OAAO,CAC3Cd,KAAK,CAACL,kBAAkB,CAACS,aAAa,CAACC,MAAM,CAAC,IAAI,EAAE,EACpDyE,UAAU,EACVC,OACF,CAAC,CAAA;AACH,OAAA;KACD,CAAA;GACF;EAEDC,YAAY,EAAEA,MAAM;IAClB,OAAO;MACL/E,SAAS,EAAGJ,CAAC,IAAKA,CAAC;MACnBY,OAAO,EAAGZ,CAAC,IAAKA,CAAC;AACjBiB,MAAAA,OAAO,EAAGjB,CAAC,IAAKA,CAAC,CAAC+C,UAAAA;KACnB,CAAA;GACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAqC,EAAAA,QAAQ,EAAEA,CAACvF,UAAU,EAAEC,kBAAkB,KAAK;IAC5C,OAAO;AACLM,MAAAA,SAAS,EAAEqB,sBAAsB,CAC/B3B,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvB,UAAU,EACTT,CAAC,IAAK;AACL,QAAA,OAAO,OAAOA,CAAC,KAAK,QAAQ,GAAIA,CAAC,GAAgB,UAAU,CAAA;AAC7D,OACF,CAAC;MACDY,OAAO,EAAGZ,CAAC,IAAKA,CAAC;AACjBiB,MAAAA,OAAO,EAAEA,CAACd,KAAK,EAAEkF,iBAAiB,KAAK;AACrC,QAAA,IAAI1D,sBAAsB,CAACxB,KAAK,CAAC,EAAE;AACjC,UAAA,MAAM2B,eAAe,GAAGF,iBAAiB,CAACzB,KAAK,EAAEkF,iBAAiB,CAAC,CAAA;AACnE,UAAA,OAAOvD,eAAe,EAAER,QAAQ,EAAE,CAAA;AACpC,SAAA;AAEA,QAAA,OAAOnB,KAAK,CAAA;AACd,OAAA;KACD,CAAA;GACF;AACDmF,EAAAA,MAAM,EAAEA,CAACzF,UAAU,EAAEC,kBAAkB,KAAK;IAC1C,MAAMyF,oBAAoB,GAAGzF,kBAAkB,CAAC0F,KAAK,CAAC3F,UAAU,CAACgF,IAAI,CAAC,CAAA;IAEtE,OAAO;MACLzE,SAAS,EAAGD,KAAK,IAAK;AACpB,QAAA,IAAIoF,oBAAoB,CAACV,IAAI,KAAK,QAAQ,EAAE;UAC1C,MAAMpE,YAAY,GAChBZ,UAAU,CAACY,YAAY,IAAI8E,oBAAoB,CAAC9E,YAAY,CAAA;UAE9D,MAAMgF,eAAe,GAAIf,CAAM,IAAK;AAClC,YAAA,IAAIgB,YAAY,CAAChB,CAAC,CAAC,EAAE;cACnB,IAAIa,oBAAoB,CAACI,QAAQ,EAAE;gBACjC,MAAMC,YAAY,GAAGL,oBAAoB,CAACI,QAAQ,CAACjB,CAAC,CAACvE,KAAK,CAAC,CAAA;AAE3D,gBAAA,IAAIyF,YAAY,EAAE;AAChB,kBAAA,OAAOlB,CAAC,CAAA;AACV,iBAAA;gBAEA,OAAO;AACLvE,kBAAAA,KAAK,EAAEM,YAAY;kBACnBC,QAAQ,EAAEgE,CAAC,CAAChE,QAAAA;iBACb,CAAA;AACH,eAAA;cAEA,OAAO;AACLP,gBAAAA,KAAK,EAAEuE,CAAC,CAACvE,KAAK,IAAIM,YAAY;gBAC9BC,QAAQ,EAAEgE,CAAC,CAAChE,QAAAA;eACb,CAAA;AACH,aAAA;YAEA,OAAO;cACLP,KAAK,EAAEuE,CAAC,IAAIjE,YAAY;AACxBC,cAAAA,QAAQ,EAAE6E,oBAAoB,CAACM,MAAM,CAAC5F,EAAAA;aACvC,CAAA;WACF,CAAA;AAED,UAAA,IACGsF,oBAAoB,CAACO,cAAc,KAAK,UAAU,IACjDjG,UAAU,CAAC2B,UAAU,IACvB+D,oBAAoB,CAACO,cAAc,KAAK,QAAQ,EAChD;YACA,MAAM1F,SAAS,GAAGqB,sBAAsB,CACtC3B,kBAAkB,EAClBW,YAAY,EACZA,YAAY,EACZgF,eACF,CAAC,CAAA;YAED,OAAOrF,SAAS,CAACD,KAAK,CAAC,CAAA;AACzB,WAAA;UAEA,IACEoF,oBAAoB,CAACO,cAAc,KAAK,OAAO,IAC/CjG,UAAU,CAAC2B,UAAU,EACrB;YACAqC,OAAO,CAACkC,IAAI,CACV,CAAA,aAAA,EAAgBlG,UAAU,CAACgF,IAAI,iOACjC,CAAC,CAAA;AACH,WAAA;AAEA,UAAA,MAAMmB,MAAM,GAAGP,eAAe,CAACtF,KAAK,CAAC,CAAA;AAErC,UAAA,IAAI6F,MAAM,EAAE;AACV,YAAA,OAAOA,MAAM,CAAA;AACf,WAAA;AAEA,UAAA,MAAMC,iBAA6B,GAAG;AACpC9F,YAAAA,KAAK,EAAEM,YAAY;AACnBC,YAAAA,QAAQ,EAAE6E,oBAAoB,CAACM,MAAM,CAAC5F,EAAAA;WACvC,CAAA;AAED,UAAA,OAAOgG,iBAAiB,CAAA;AAC1B,SAAA;AAEA,QAAA,IAAIV,oBAAoB,CAACV,IAAI,KAAK,OAAO,EAAE;UACzC,MAAMqB,WAAW,GACfpG,kBAAkB,CAACqG,KAAK,CAACZ,oBAAoB,CAACa,KAAK,CAAC,CAAA;UACtD,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,OAAO,CAACL,WAAW,CAAC,CAACM,IAAI,CAC7DC,IAAA,IAAA;AAAA,YAAA,IAAC,GAAG/B,CAAC,CAAC,GAAA+B,IAAA,CAAA;YAAA,OAAK/B,CAAC,CAACgC,SAAS,CAAA;AAAA,WACxB,CAAC,CAAA;UAED,MAAMjG,YAAY,GAAG,CAAC,MAAM;YAC1B,IAAIZ,UAAU,CAACY,YAAY,EAAE;cAC3B,OAAOZ,UAAU,CAACY,YAAY,CAAA;aAC/B,MAAM,IAAI4F,sBAAsB,EAAE;cACjC,OAAO;gBAAEM,OAAO,EAAEN,sBAAsB,CAAC,CAAC,CAAA;eAAG,CAAA;AAC/C,aAAC,MAAM;cACL,OAAOd,oBAAoB,CAAC9E,YAAY,CAAA;AAC1C,aAAA;AACF,WAAC,GAAG,CAAA;AAEJ,UAAA,MAAMmG,eAAe,GAAGrB,oBAAoB,CAACM,MAAM,EAAE5F,EAAE,CAAA;UAEvD,MAAM4G,qBAAqB,GAAIpB,eAAiC,IAAK;AACnE,YAAA,OAAOF,oBAAoB,CAACO,cAAc,KAAK,QAAQ,IACpDP,oBAAoB,CAACO,cAAc,KAAK,UAAU,IACjDjG,UAAU,CAAC2B,UAAW,GACtBC,sBAAsB,CACtB3B,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvB8E,oBAAoB,CAAC9E,YAAY,EAChCT,CAAM,IAAK;AACV,cAAA,OAAO8G,mBAAmB,CACxB9G,CAAC,EACDkG,WAAW,EACXzF,YAAY,EACZmG,eAAe,EACfnB,eAAe,KAAMzF,CAAC,IAAKA,CAAC,CAC9B,CAAC,CAAA;AACH,aACF,CAAC,GACCqB,YAAY,CACZvB,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvB8E,oBAAoB,CAAC9E,YAAY,EAChCT,CAAM,IAAK;AACV,cAAA,OAAO8G,mBAAmB,CACxB9G,CAAC,EACDkG,WAAW,EACXzF,YAAY,EACZmG,eAAe,EACfnB,eAAe,KAAMzF,CAAC,IAAKA,CAAC,CAC9B,CAAC,CAAA;AACH,aACF,CAAC,CAAA;WACJ,CAAA;AAED,UAAA,IAAIuF,oBAAoB,CAACa,KAAK,KAAK,OAAO,EAAE;AAC1C,YAAA,MAAMW,cAAc,GAAGF,qBAAqB,CAAE7G,CAAC,IAAK;AAClD,cAAA,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;gBACzB,OAAO,CAAA,EAAGA,CAAC,CAAI,EAAA,CAAA,CAAA;AACjB,eAAA;cAEA,MAAMgH,cAAc,GAAGzB,oBAAoB,CAACI,QAAQ,GAAG3F,CAAC,CAAC,IAAI,IAAI,CAAA;cAEjE,IAAI,CAACgH,cAAc,EAAE;AACnB,gBAAA,OAAA;AACF,eAAA;AAEA,cAAA,OAAOhH,CAAC,CAAA;AACV,aAAC,CAAC,CAAA;YAEF,OAAO+G,cAAc,CAAC5G,KAAK,CAAC,CAAA;AAC9B,WAAA;AAEA,UAAA,IAAIoF,oBAAoB,CAACa,KAAK,KAAK,OAAO,EAAE;YAC1C,MAAMa,oBAAoB,GAAIjH,CAAM,IAAK;AACvC,cAAA,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACkH,IAAI,EAAE,CAAChH,UAAU,CAAC,MAAM,CAAC,EAAE;AACxD,gBAAA,OAAOF,CAAC,CAAA;AACV,eAAA;AACA,cAAA,OAAA;aACD,CAAA;YAED,MAAMmH,gBAAgB,GACpBL,mBAAmB,CACjBjH,UAAU,CAACY,YAAY,EACvByF,WAAW,EACXX,oBAAoB,CAAC9E,YAAY,EACjCmG,eAAe,EACfK,oBACF,CAAC,IAAI1B,oBAAoB,CAAC9E,YAAY,CAAA;AAExC,YAAA,OACEqG,mBAAmB,CACjB3G,KAAK,EACL+F,WAAW,EACXiB,gBAAgB,EAChBP,eAAe,EACfK,oBACF,CAAC,IAAI9G,KAAK,CAAA;AAEd,WAAA;AAEA,UAAA,MAAMiH,sBAAsB,GAAGP,qBAAqB,EAAE,CAAA;UAEtD,OAAOO,sBAAsB,CAACjH,KAAK,CAAC,CAAA;AACtC,SAAA;AAEA,QAAA,IAAIoF,oBAAoB,CAACV,IAAI,KAAK,UAAU,EAAE;UAC5C,IAAIhF,UAAU,CAAC2B,UAAU,EAAE;AACzB,YAAA,MAAMf,YAAoC,GAAG;AAC3CR,cAAAA,EAAE,EAAE,IAAI;AACRS,cAAAA,QAAQ,EAAEZ,kBAAkB,CAACuH,SAAS,GAClC9B,oBAAoB,CAAC+B,OAAO,CAAC,CAAC,CAAC,EAAErH,EAAE,GACnC,EAAA;aACL,CAAA;AAED,YAAA,MAAMG,SAAS,GAAGqB,sBAAsB,CACtC3B,kBAAkB,EAClBW,YAAY,EACZA,YAAY,EACZ8G,iBAAiB,CAAC1H,UAAU,CAACgF,IAAI,CACnC,CAAC,CAAA;YAED,OAAOzE,SAAS,CAACD,KAAK,CAAC,CAAA;AACzB,WAAA;AAEA,UAAA,MAAM2E,UAAU,GAAGyC,iBAAiB,CAAC1H,UAAU,CAACgF,IAAI,CAAC,CACnD1E,KAAK,EACLL,kBACF,CAAC,CAAA;UAED,IAAI,CAACgF,UAAU,EAAE;YACf,OAAO;AACL7E,cAAAA,EAAE,EAAE,IAAI;AACRS,cAAAA,QAAQ,EAAE6E,oBAAoB,CAAC+B,OAAO,CAAC,CAAC,CAAC,EAAErH,EAAAA;aAC5C,CAAA;AACH,WAAA;AAEA,UAAA,OAAO6E,UAAU,CAAA;AACnB,SAAA;AAEA,QAAA,MAAM,IAAInE,KAAK,CAAC,yBAAyB,CAAC,CAAA;OAC3C;MACDC,OAAO,EAAGZ,CAAC,IAAK;AACd,QAAA,MAAMwH,GAAG,GAAGC,kBAAkB,CAACzH,CAAC,EAAG0H,CAAC,IAAK;UACvC,IAAI,OAAO,IAAIA,CAAC,EAAE;YAChB,OAAOA,CAAC,CAACvH,KAAK,CAAA;AAChB,WAAA;AAEA,UAAA,OAAOuH,CAAC,CAAA;AACV,SAAC,CAAC,CAAA;QAEF,MAAMC,SAAS,GAAGC,sBAAsB,CACtCJ,GAAG,EACH1H,kBAAkB,CAACoF,OACrB,CAAC,CAAA;AAED,QAAA,OAAO2C,mBAAmB,CACxBF,SAAS,EACT7H,kBAAkB,CAACoF,OAAO,EAC1B4C,gBAAgB,CAAChI,kBAAkB,CAACoF,OAAO,CAC7C,CAAC,CAAA;OACF;AACDjE,MAAAA,OAAO,EAAEA,CAACd,KAAK,EAAEuB,eAAe,KAAK;QACnC,SAASqG,aAAaA,CAAC5H,KAAiB,EAAE;UACxC,IAAIA,KAAK,CAACwG,OAAO,EAAE;YACjB,OAAOxG,KAAK,CAACwG,OAAO,CAAA;AACtB,WAAA;AAEA,UAAA,IAAI,OAAOxG,KAAK,CAACA,KAAK,KAAK,QAAQ,EAAE;AACnC,YAAA,OAAO6H,IAAI,CAACC,SAAS,CAAC9H,KAAK,CAACA,KAAK,CAAC,CAAA;AACpC,WAAA;AAEA,UAAA,MAAM+H,SAAc,GAAG/H,KAAK,CAACA,KAAK,CAAA;UAElC,IAAI+H,SAAS,CAAC5G,QAAQ,EAAE;AACtB,YAAA,OAAO4G,SAAS,CAAC5G,QAAQ,EAAE,CAAA;AAC7B,WAAA;AAEA,UAAA,MAAM,IAAIX,KAAK,CAAC,aAAa,CAAC,CAAA;AAChC,SAAA;AAEA,QAAA,IAAI4E,oBAAoB,CAACV,IAAI,KAAK,UAAU,EAAE;AAC5C,UAAA,OAAOsD,wBAAwB,CAC7BhI,KAAK,EACLuB,eACF,CAAC,CAAA;AACH,SAAA;AAEA,QAAA,IAAIC,sBAAsB,CAACxB,KAAK,CAAC,EAAE;AACjC,UAAA,MAAM2B,eAAe,GAAGF,iBAAiB,CACvCzB,KAAK,EACLuB,eACF,CAAC,CAAA;UAED,IAAI,CAACI,eAAe,EAAE;AACpB,YAAA,OAAA;AACF,WAAA;UAEA,IAAI,SAAS,IAAIA,eAAe,EAAE;YAChC,OAAOiG,aAAa,CAACjG,eAAe,CAAC,CAAA;AACvC,WAAA;AAEA,UAAA,OAAO,OAAOA,eAAe,CAAC3B,KAAK,KAAK,QAAQ,GAC5C6H,IAAI,CAACC,SAAS,CAACnG,eAAe,CAAC3B,KAAK,CAAC,GACrC2B,eAAe,CAAC3B,KAAK,CAAA;AAC3B,SAAA;QAEA,IAAI,SAAS,IAAIA,KAAK,EAAE;UACtB,OAAO4H,aAAa,CAAC5H,KAAK,CAAC,CAAA;AAC7B,SAAA;AAEA,QAAA,OAAO,OAAQA,KAAK,CAAgBA,KAAK,KAAK,QAAQ,GAClD6H,IAAI,CAACC,SAAS,CAAE9H,KAAK,CAAgBA,KAAK,CAAC,GAC1CA,KAAK,CAAgBA,KAAK,CAAA;AACjC,OAAA;KACD,CAAA;AACH,GAAA;AACF,EAAC;AAED,SAASkB,YAAYA,CACnBvB,kBAA0C,EAC1CW,YAAiB,EACjB2H,oBAAuB,EAKvB;AAAA,EAAA,IAJAhI,SAGkB,GAAAiI,SAAA,CAAAjG,MAAA,GAAAiG,CAAAA,IAAAA,SAAA,CAAAhI,CAAAA,CAAAA,KAAAA,SAAA,GAAAgI,SAAA,CAAIrI,CAAAA,CAAAA,GAAAA,CAAC,IAAKA,CAAC,CAAA;AAE7B,EAAA,OAAQwH,GAAQ,IAAQ;AACtB,IAAA,MAAMc,aAAa,GAAGlI,SAAS,CAACoH,GAAG,EAAE1H,kBAAkB,CAAC,CAAA;IACxD,IAAIwI,aAAa,KAAKjI,SAAS,EAAE;AAC/B,MAAA,OAAOiI,aAAa,CAAA;AACtB,KAAA;AAEA,IAAA,MAAMC,oBAAoB,GAAGnI,SAAS,CAACK,YAAY,EAAEX,kBAAkB,CAAC,CAAA;IACxE,IAAIyI,oBAAoB,KAAKlI,SAAS,EAAE;AACtC,MAAA,OAAOkI,oBAAoB,CAAA;AAC7B,KAAA;AAEA,IAAA,OAAOnI,SAAS,CAACgI,oBAAoB,EAAEtI,kBAAkB,CAAC,CAAA;GAC3D,CAAA;AACH,CAAA;AAEA,SAAS2B,sBAAsBA,CAC7B3B,kBAA0C,EAC1CW,YAAiB,EACjB2H,oBAAgC,EAKhC;AAAA,EAAA,IAJAhI,SAG2B,GAAAiI,SAAA,CAAAjG,MAAA,GAAAiG,CAAAA,IAAAA,SAAA,CAAAhI,CAAAA,CAAAA,KAAAA,SAAA,GAAAgI,SAAA,CAAIrI,CAAAA,CAAAA,GAAAA,CAAC,IAAKA,CAAC,CAAA;AAEtC,EAAA,IAAI2B,sBAAsB,CAAClB,YAAY,CAAC,EAAE;AACxC;AACJ;AACA;AACA;AACI,IAAA,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC,CAAA;AAChE,GAAA;AAEA,EAAA,OAAQ6G,GAAQ,IAAuC;IACrD,MAAMgB,eAAe,GAAGnH,YAAY,CAClCvB,kBAAkB,EAClBW,YAAY,EACZ2H,oBAAoB,EACpBhI,SACF,CAAC,CAAA;;AAED;AACA,IAAA,IAAI,CAACuB,sBAAsB,CAAC6F,GAAG,CAAC,EAAE;MAChC,OAAO;AACLiB,QAAAA,IAAI,EAAE,IAAI;AACV,QAAA,CAAC3I,kBAAkB,CAAC4I,mBAAmB,GAAGF,eAAe,CAAChB,GAAG,CAAA;OAC9D,CAAA;AACH,KAAA;AAEA,IAAA,MAAMmB,aAAa,GAAGlB,kBAAkB,CAACD,GAAG,EAAGxH,CAAC,IAAK;AACnD,MAAA,OAAOI,SAAS,CAACJ,CAAC,EAAEF,kBAAkB,CAAC,CAAA;AACzC,KAAC,CAAC,CAAA;;AAEF;IACA,IAAI6I,aAAa,CAAC7I,kBAAkB,CAAC4I,mBAAmB,CAAC,KAAKrI,SAAS,EAAE;MACvEsI,aAAa,CAAC7I,kBAAkB,CAAC4I,mBAAmB,CAAC,GACnDF,eAAe,CAACnI,SAAS,CAAC,CAAA;AAC9B,KAAA;AAEA,IAAA,OAAOsI,aAAa,CAAA;GACrB,CAAA;AACH,CAAA;AAEA,SAAS3G,6BAA6BA,GAAG;AACvC,EAAA,OAAO,CACLnC,UAAmD,EACnDC,kBAA0C,KACX;IAC/B,OAAO;AACLM,MAAAA,SAAS,EAAEP,UAAU,CAAC2B,UAAU,GAC5BC,sBAAsB,CACtB3B,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvBmI,mBAAmB,CAAC/I,UAAU,CAAC,EAC9BG,CAAC,IAAK;AACL,QAAA,OAAO6I,oBAAoB,CAAC7I,CAAC,EAAEH,UAAU,CAACiJ,MAAM,CAACC,OAAO,CAAC,GACrD/I,CAAC,GACDK,SAAS,CAAA;AACf,OACF,CAAC,GACCgB,YAAY,CACZvB,kBAAkB,EAClBD,UAAU,CAACY,YAAY,EACvBmI,mBAAmB,CAAC/I,UAAU,CAAC,EAC9BG,CAAC,IAAK;AACL,QAAA,OAAO6I,oBAAoB,CAAC7I,CAAC,EAAEH,UAAU,CAACiJ,MAAM,CAACC,OAAO,CAAC,GACrD/I,CAAC,GACDK,SAAS,CAAA;AACf,OACF,CAAC;MACHO,OAAO,EAAGZ,CAAC,IAAKA,CAAC;AACjBiB,MAAAA,OAAO,EAAEA,CAACd,KAAK,EAAEkF,iBAAiB,KAAK;AACrC,QAAA,IAAI1D,sBAAsB,CAACxB,KAAK,CAAC,EAAE;AACjC,UAAA,MAAM2B,eAAe,GAAGF,iBAAiB,CAACzB,KAAK,EAAEkF,iBAAiB,CAAC,CAAA;AACnE,UAAA,OAAOvD,eAAe,EAAER,QAAQ,EAAE,CAAA;AACpC,SAAA;AAEA,QAAA,OAAOnB,KAAK,CAAA;AACd,OAAA;KACD,CAAA;GACF,CAAA;AACH,CAAA;AAEA,SAAS0I,oBAAoBA,CAAC1I,KAAU,EAAE4I,OAA+B,EAAE;AACzE,EAAA,IAAI,OAAO5I,KAAK,KAAK,QAAQ,EAAE;AAC7B,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACA,EAAA,OAAO4I,OAAO,CAAC7E,GAAG,CAAC8E,cAAc,CAAC,CAACC,OAAO,CAAC9I,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;AACxD,CAAA;AAEA,SAAS6I,cAAcA,CAAChG,GAAoB,EAAU;AACpD,EAAA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;AAC3B,IAAA,OAAOA,GAAG,CAAA;AACZ,GAAA;EAEA,OAAOA,GAAG,CAAC7C,KAAK,CAAA;AAClB,CAAA;AAEA,SAASyI,mBAAmBA,CAC1B/I,UAAmD,EACnD;EACA,IAAIA,UAAU,CAACiJ,MAAM,CAACC,OAAO,CAAC3G,MAAM,KAAK,CAAC,EAAE;AAC1C,IAAA,MAAM,IAAIzB,KAAK,CAAC,mCAAmC,CAAC,CAAA;AACtD,GAAA;EAEA,MAAMuI,WAA4B,GAAGrJ,UAAU,CAACiJ,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAA;EACjE,MAAMI,gBAAwB,GAC5B,OAAOD,WAAW,KAAK,QAAQ,GAAGA,WAAW,CAAC/I,KAAK,GAAG+I,WAAW,CAAA;AAEnE,EAAA,OAAOC,gBAAgB,CAAA;AACzB,CAAA;AAEA,SAASrC,mBAAmBA,CAC1B9G,CAAM,EACNkG,WAAkD,EAClDzF,YAAkD,EAClDmG,eAAmC,EAER;AAAA,EAAA,IAD3BK,oBAA+C,GAAAoB,SAAA,CAAAjG,MAAA,GAAAiG,CAAAA,IAAAA,SAAA,CAAAhI,CAAAA,CAAAA,KAAAA,SAAA,GAAAgI,SAAA,CAAIrI,CAAAA,CAAAA,GAAAA,CAAC,IAAKK,SAAS,CAAA;AAElE,EAAA,MAAM+I,KAAK,GAAGpJ,CAAC,IAAIS,YAAY,CAAA;AAC/B,EAAA,MAAMC,QAAQ,GAAG0I,KAAK,CAAC1I,QAAQ,IAAIkG,eAAe,CAAA;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;EAEA,MAAMyC,UAAU,GAAG,SAAS,IAAID,KAAK,IAAI,OAAOA,KAAK,CAACzC,OAAO,KAAK,QAAQ,CAAA;AAE1E,EAAA,IAAI0C,UAAU,EAAE;AACd,IAAA,MAAM7B,GAAG,GAAGtB,WAAW,CAACkD,KAAK,CAACzC,OAAO,CAAC,CAAA;IAEtC,IAAIa,GAAG,KAAKnH,SAAS,EAAE;MACrB,OAAO;QACLF,KAAK,EAAEqH,GAAG,CAACrH,KAAK;QAChBwG,OAAO,EAAEyC,KAAK,CAACzC,OAAO;AACtBjG,QAAAA,QAAAA;OACD,CAAA;AACH,KAAA;AACF,GAAA;EAEA,IAAI,OAAO,IAAI0I,KAAK,EAAE;AACpB,IAAA,MAAMd,aAAa,GAAGrB,oBAAoB,CAACmC,KAAK,CAACjJ,KAAK,CAAC,CAAA;IAEvD,IAAImI,aAAa,KAAKjI,SAAS,EAAE;MAC/B,OAAO;AACLsG,QAAAA,OAAO,EAAE0C,UAAU,GAAGD,KAAK,CAACzC,OAAO,GAAGtG,SAAS;AAC/CF,QAAAA,KAAK,EAAEmI,aAAa;AACpB5H,QAAAA,QAAAA;OACD,CAAA;AACH,KAAA;AACF,GAAA;AAEA,EAAA,OAAA;AACF,CAAA;AAEA,SAAS6G,iBAAiBA,CACxB+B,YAAoB,EAIa;AACjC,EAAA,OAAO,CAACtJ,CAAC,EAAEF,kBAAkB,KAAK;IAChC,IAAI,OAAOE,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,EAAE;MACvC,IAAI,IAAI,IAAIA,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAK,IAAI,EAAE;AAC9B,QAAA,MAAM6E,UAAqC,GAAG;UAC5C7E,EAAE,EAAED,CAAC,CAACC,EAAE;UACRS,QAAQ,EAAEV,CAAC,CAACU,QAAQ;UACpBM,GAAG,EAAEhB,CAAC,CAACgB,GAAAA;SACR,CAAA;AAED,QAAA,OAAO8D,UAAU,CAAA;AACnB,OAAA;AAEA,MAAA,MAAMA,UAAkC,GAAG;AACzC7E,QAAAA,EAAE,EAAE,IAAI;QACRS,QAAQ,EACN,OAAOV,CAAC,CAACU,QAAQ,KAAK,QAAQ,GAC1BV,CAAC,CAACU,QAAQ,GAEVZ,kBAAkB,CAAC0F,KAAK,CAAC8D,YAAY,CAAC,EAMrChC,OAAO,CAAC,CAAC,CAAC,EAAErH,EAAAA;OACpB,CAAA;AAED,MAAA,OAAO6E,UAAU,CAAA;AACnB,KAAA;GACD,CAAA;AACH,CAAA;AAEA,SAASqD,wBAAwBA,CAC/BhI,KAAyC,EACzCuB,eAAuB,EACH;AACpB,EAAA,IAAIC,sBAAsB,CAACxB,KAAK,CAAC,EAAE;AACjC,IAAA,MAAM2B,eAAe,GAAGF,iBAAiB,CAACzB,KAAK,EAAEuB,eAAe,CAAC,CAAA;AAEjE,IAAA,IAAII,eAAe,EAAE;AACnB,MAAA,OAAOqG,wBAAwB,CAACrG,eAAe,EAAEJ,eAAe,CAAC,CAAA;AACnE,KAAA;AAEA,IAAA,OAAA;AACF,GAAA;EAEA,IAAIvB,KAAK,CAACF,EAAE,EAAE;IACZ,OAAO,CAAA,EAAGE,KAAK,CAACF,EAAE,IAAIE,KAAK,CAACO,QAAQ,CAAE,CAAA,CAAA;AACxC,GAAA;AACF,CAAA;AAEO,SAASoC,kBAAkBA,CAChCyG,eAAyD,EACzDzJ,kBAA0C,EACpB;AACtB,EAAA,MAAMmE,GAAyB,GAAG;AAChCuF,IAAAA,GAAG,EAAED,eAAe,CAACC,GAAG,IAAIlJ,QAAQ,EAAE;IACtCyC,UAAU,EAAEwG,eAAe,CAACxG,UAAAA;GAC7B,CAAA;;AAED;EACA,IAAIwG,eAAe,CAACE,UAAU,EAAE;AAC9BxF,IAAAA,GAAG,CAACwF,UAAU,GAAG,EAAE,CAAA;AAEnB,IAAA,KAAK,MAAMC,UAAU,IAAIH,eAAe,CAACE,UAAU,EAAE;AACnDxF,MAAAA,GAAG,CAACwF,UAAU,CAACC,UAAU,CAAC,GAAG,EAAE,CAAA;MAE/B,KAAK,MAAMC,SAAS,IAAIJ,eAAe,CAACE,UAAU,CAACC,UAAU,CAAC,EAAE;QAC9DzF,GAAG,CAACwF,UAAU,CAACC,UAAU,CAAC,CAACC,SAAS,CAAC,GAAG,EAAE,CAAA;QAE1C,MAAMC,MAAM,GAAGL,eAAe,CAACE,UAAU,CAACC,UAAU,CAAC,CAACC,SAAS,CAAC,CAAA;AAEhE,QAAA,MAAME,eAAe,GAAGrH,2BAA2B,CACjDkH,UAAU,EACV5J,kBACF,CAAE,CAAA;AACF,QAAA,MAAMgK,eAAe,GAAGD,eAAe,CAACE,MAAM,CAACvD,IAAI,CAChDxG,CAAC,IAAKA,CAAC,CAAC4C,IAAI,KAAK+G,SACpB,CAA8C,CAAA;QAE9C,IAAI,CAACG,eAAe,EAAE;AACpB,UAAA,SAAA;AACF,SAAA;QAEA,CAACA,eAAe,CAACE,UAAU,IAAI,EAAE,EAAEC,OAAO,CAAEC,mBAAmB,IAAK;AAClEjG,UAAAA,GAAG,CAACwF,UAAU,CAACC,UAAU,CAAC,CAACC,SAAS,CAAC,CAACO,mBAAmB,CAACtH,IAAI,CAAC,GAC7DuH,mBAAmB,CACjBD,mBAAmB,EACnBpK,kBACF,CAAC,CAACM,SAAS,CAACwJ,MAAM,CAACM,mBAAmB,CAACtH,IAAI,CAAC,CAAC,CAAA;AACjD,SAAC,CAAC,CAAA;AACJ,OAAA;AACF,KAAA;AACF,GAAA;EAEA,MAAMP,mBAAmB,GAAGG,2BAA2B,CACrD+G,eAAe,CAACxG,UAAU,EAC1BjD,kBACF,CAAC,CAAA;EAED,IAAI,CAACuC,mBAAmB,EAAE;IACxBwB,OAAO,CAACkC,IAAI,CACV,CAAA,+BAAA,EAAkCwD,eAAe,CAACxG,UAAU,EAC9D,CAAC,CAAA;AACD,IAAA,OAAOkB,GAAG,CAAA;AACZ,GAAA;AAEA5B,EAAAA,mBAAmB,CAAC0H,MAAM,CAACE,OAAO,CAAEpK,UAAU,IAAK;IACjDoE,GAAG,CAACpE,UAAU,CAAC+C,IAAI,CAAC,GAAGuH,mBAAmB,CACxCtK,UAAU,EACVC,kBACF,CAAC,CAACM,SAAS,CAACmJ,eAAe,CAAC1J,UAAU,CAAC+C,IAAI,CAAC,CAAC,CAAA;AAC/C,GAAC,CAAC,CAAA;;AAEF;AACA;AACA;AACA;AACA,EAAA,IAAIqB,GAAG,CAAClB,UAAU,KAAK,uBAAuB,EAAE;IAC9C,IACEuD,MAAM,CAAC8D,IAAI,CAACnG,GAAG,CAACoG,QAAQ,CAAC,CAACjI,MAAM,KAAK,CAAC,IACtC6B,GAAG,CAACoG,QAAQ,CAACvK,kBAAkB,CAACS,aAAa,CAACC,MAAM,CAAC,EAAE4B,MAAM,KAAK,CAAC,EACnE;MACA,MAAMkI,cAAc,GAAGC,wBAAwB,CAAC;AAC9C/J,QAAAA,MAAM,EAAEV,kBAAkB,CAACS,aAAa,CAACC,MAAM;AAC/CgK,QAAAA,KAAK,EAAElE,MAAM,CAACC,OAAO,CAACzG,kBAAkB,CAACqG,KAAK,CAACsE,MAAM,IAAI,EAAE,CAAC,CAACjE,IAAI,CAC/DkE,KAAA,IAAA;AAAA,UAAA,IAAC,GAAGvK,KAAK,CAAC,GAAAuK,KAAA,CAAA;UAAA,OAAKvK,KAAK,CAACuG,SAAS,CAAA;SAChC,CAAC,GAAG,CAAC,CAAC;AACNiE,QAAAA,IAAI,EAAErE,MAAM,CAACC,OAAO,CAACzG,kBAAkB,CAACqG,KAAK,CAACyE,KAAK,IAAI,EAAE,CAAC,CAACpE,IAAI,CAC7DqE,KAAA,IAAA;AAAA,UAAA,IAAC,GAAG1K,KAAK,CAAC,GAAA0K,KAAA,CAAA;UAAA,OAAK1K,KAAK,CAACuG,SAAS,CAAA;SAChC,CAAC,GAAG,CAAC,CAAA;AACP,OAAC,CAAC,CAAA;AAEFzC,MAAAA,GAAG,CAACoG,QAAQ,GAAGC,cAAc,CAACD,QAAQ,CAAA;AACxC,KAAA;AACF,GAAA;AAEA,EAAA,OAAOpG,GAAG,CAAA;AACZ,CAAA;AAEO,SAASkG,mBAAmBA,CAGjCtK,UAAa,EACbC,kBAA0C,EACA;EAC1C,MAAMgL,QAAQ,GACZhL,kBAAkB,CAAC0F,KAAK,CAAC3F,UAAU,CAACgF,IAAI,CAAC,IAAIhF,UAAU,CAACgF,IAAI,KAAK,MAAM,GACnE3D,qBAAqB,CAACoE,MAAM,GAC5BpE,qBAAqB,CAACrB,UAAU,CAACgF,IAAI,CAAwC,CAAA;AAEnF,EAAA,OAAOiG,QAAQ,CAACjL,UAAU,EAASC,kBAAkB,CAAC,CAAA;AACxD,CAAA;AAEO,SAASkF,qBAAqBA,CACnC+F,cAAiC,EACjCjL,kBAA0C,EACA;AAC1C,EAAA,MAAMU,MAAM,GAAGV,kBAAkB,CAACS,aAAa,CAACC,MAAM,CAAA;AAEtD,EAAA,IAAIuK,cAAc,CAACvK,MAAM,CAAC,KAAKH,SAAS,EAAE;IACxC,OAAO;AACLF,MAAAA,KAAK,EAAE4K,cAAc,CAACvK,MAAM,CAAC;AAC7BA,MAAAA,MAAAA;KACD,CAAA;AACH,GAAA;EAEA,MAAMwK,cAAc,GAAGC,0BAA0B,CAC/CzK,MAAM,EACNV,kBAAkB,CAACiB,OACrB,CAAC,CAAA;EACD,IAAI,CAACiK,cAAc,EAAE;AACnB,IAAA,OAAA;AACF,GAAA;EACA,OAAO;AACL7K,IAAAA,KAAK,EAAE4K,cAAc,CAACC,cAAc,CAAC;AACrCxK,IAAAA,MAAM,EAAEwK,cAAAA;GACT,CAAA;AACH;;;;"}