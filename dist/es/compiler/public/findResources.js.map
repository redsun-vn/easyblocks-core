{"version":3,"file":"findResources.js","sources":["../../../../src/compiler/public/findResources.ts"],"sourcesContent":["import {\r\n  getExternalReferenceLocationKey,\r\n  isLocalTextReference,\r\n} from \"../../resourcesUtils\";\r\nimport {\r\n  isTrulyResponsiveValue,\r\n  responsiveValueEntries,\r\n} from \"../../responsiveness\";\r\nimport {\r\n  CompilerModule,\r\n  ExternalReference,\r\n  ExternalSchemaProp,\r\n  ExternalWithSchemaProp,\r\n  NoCodeComponentDefinition,\r\n} from \"../../types\";\r\nimport { configTraverse } from \"../configTraverse\";\r\nimport { createCompilationContext } from \"../createCompilationContext\";\r\nimport { normalize } from \"../normalize\";\r\nimport { normalizeInput } from \"../normalizeInput\";\r\nimport { isExternalSchemaProp } from \"../schema\";\r\n\r\nexport const findExternals: CompilerModule[\"findExternals\"] = (\r\n  input,\r\n  config,\r\n  contextParams\r\n) => {\r\n  const inputConfigComponent = normalizeInput(input);\r\n  const externalsWithSchemaProps: ExternalWithSchemaProp[] = [];\r\n  const compilationContext = createCompilationContext(\r\n    config,\r\n    contextParams,\r\n    input._component\r\n  );\r\n  const normalizedConfig = normalize(inputConfigComponent, compilationContext);\r\n\r\n  configTraverse(\r\n    normalizedConfig,\r\n    compilationContext,\r\n    ({ config, value, schemaProp }) => {\r\n      // This kinda tricky, because \"text\" is a special case. It can be either local or external.\r\n      // To prevent false positives, we need to check if it's local text reference and make sure that we won't\r\n      // treat \"text\" that's actually external as non external.\r\n      if (\r\n        (schemaProp.type === \"text\" && isLocalTextReference(value, \"text\")) ||\r\n        (schemaProp.type !== \"text\" &&\r\n          !isExternalSchemaProp(schemaProp, compilationContext.types))\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const hasInputComponentRootParams =\r\n        compilationContext.definitions.components.some(\r\n          (c: NoCodeComponentDefinition) =>\r\n            c.id === normalizedConfig._component && c.rootParams !== undefined\r\n        );\r\n\r\n      const configId =\r\n        normalizedConfig._id === config._id && hasInputComponentRootParams\r\n          ? \"$\"\r\n          : config._id;\r\n\r\n      if (isTrulyResponsiveValue(value)) {\r\n        responsiveValueEntries(value).forEach(([breakpoint, currentValue]) => {\r\n          if (currentValue === undefined) {\r\n            return;\r\n          }\r\n\r\n          externalsWithSchemaProps.push({\r\n            id: getExternalReferenceLocationKey(\r\n              configId,\r\n              schemaProp.prop,\r\n              breakpoint\r\n            ),\r\n            schemaProp: schemaProp as ExternalSchemaProp,\r\n            externalReference: currentValue as ExternalReference,\r\n          });\r\n        });\r\n      } else {\r\n        externalsWithSchemaProps.push({\r\n          id: getExternalReferenceLocationKey(configId, schemaProp.prop),\r\n          schemaProp: schemaProp as ExternalSchemaProp,\r\n          externalReference: value as ExternalReference,\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  return externalsWithSchemaProps;\r\n};\r\n"],"names":["findExternals","input","config","contextParams","inputConfigComponent","normalizeInput","externalsWithSchemaProps","compilationContext","createCompilationContext","_component","normalizedConfig","normalize","configTraverse","_ref","value","schemaProp","type","isLocalTextReference","isExternalSchemaProp","types","hasInputComponentRootParams","definitions","components","some","c","id","rootParams","undefined","configId","_id","isTrulyResponsiveValue","responsiveValueEntries","forEach","_ref2","breakpoint","currentValue","push","getExternalReferenceLocationKey","prop","externalReference"],"mappings":";;;;;;;;;;AAqBO,MAAMA,aAA8C,GAAGA,CAC5DC,KAAK,EACLC,MAAM,EACNC,aAAa,KACV;AACH,EAAA,MAAMC,oBAAoB,GAAGC,cAAc,CAACJ,KAAK,CAAC,CAAA;EAClD,MAAMK,wBAAkD,GAAG,EAAE,CAAA;EAC7D,MAAMC,kBAAkB,GAAGC,wBAAwB,CACjDN,MAAM,EACNC,aAAa,EACbF,KAAK,CAACQ,UACR,CAAC,CAAA;AACD,EAAA,MAAMC,gBAAgB,GAAGC,SAAS,CAACP,oBAAoB,EAAEG,kBAAkB,CAAC,CAAA;AAE5EK,EAAAA,cAAc,CACZF,gBAAgB,EAChBH,kBAAkB,EAClBM,IAAA,IAAmC;IAAA,IAAlC;MAAEX,MAAM;MAAEY,KAAK;AAAEC,MAAAA,UAAAA;AAAW,KAAC,GAAAF,IAAA,CAAA;AAC5B;AACA;AACA;AACA,IAAA,IACGE,UAAU,CAACC,IAAI,KAAK,MAAM,IAAIC,oBAAoB,CAACH,KAAK,EAAE,MAAM,CAAC,IACjEC,UAAU,CAACC,IAAI,KAAK,MAAM,IACzB,CAACE,oBAAoB,CAACH,UAAU,EAAER,kBAAkB,CAACY,KAAK,CAAE,EAC9D;AACA,MAAA,OAAA;AACF,KAAA;IAEA,MAAMC,2BAA2B,GAC/Bb,kBAAkB,CAACc,WAAW,CAACC,UAAU,CAACC,IAAI,CAC3CC,CAA4B,IAC3BA,CAAC,CAACC,EAAE,KAAKf,gBAAgB,CAACD,UAAU,IAAIe,CAAC,CAACE,UAAU,KAAKC,SAC7D,CAAC,CAAA;AAEH,IAAA,MAAMC,QAAQ,GACZlB,gBAAgB,CAACmB,GAAG,KAAK3B,MAAM,CAAC2B,GAAG,IAAIT,2BAA2B,GAC9D,GAAG,GACHlB,MAAM,CAAC2B,GAAG,CAAA;AAEhB,IAAA,IAAIC,sBAAsB,CAAChB,KAAK,CAAC,EAAE;AACjCiB,MAAAA,sBAAsB,CAACjB,KAAK,CAAC,CAACkB,OAAO,CAACC,KAAA,IAAgC;AAAA,QAAA,IAA/B,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAAF,KAAA,CAAA;QAC/D,IAAIE,YAAY,KAAKR,SAAS,EAAE;AAC9B,UAAA,OAAA;AACF,SAAA;QAEArB,wBAAwB,CAAC8B,IAAI,CAAC;UAC5BX,EAAE,EAAEY,+BAA+B,CACjCT,QAAQ,EACRb,UAAU,CAACuB,IAAI,EACfJ,UACF,CAAC;AACDnB,UAAAA,UAAU,EAAEA,UAAgC;AAC5CwB,UAAAA,iBAAiB,EAAEJ,YAAAA;AACrB,SAAC,CAAC,CAAA;AACJ,OAAC,CAAC,CAAA;AACJ,KAAC,MAAM;MACL7B,wBAAwB,CAAC8B,IAAI,CAAC;QAC5BX,EAAE,EAAEY,+BAA+B,CAACT,QAAQ,EAAEb,UAAU,CAACuB,IAAI,CAAC;AAC9DvB,QAAAA,UAAU,EAAEA,UAAgC;AAC5CwB,QAAAA,iBAAiB,EAAEzB,KAAAA;AACrB,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GACF,CAAC,CAAA;AAED,EAAA,OAAOR,wBAAwB,CAAA;AACjC;;;;"}