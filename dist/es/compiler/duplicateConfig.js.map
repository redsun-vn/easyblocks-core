{"version":3,"file":"duplicateConfig.js","sources":["../../../src/compiler/duplicateConfig.ts"],"sourcesContent":["import { deepClone, uniqueId } from \"@/utils\";\nimport { NoCodeComponentEntry } from \"../types\";\nimport { configTraverse } from \"./configTraverse\";\nimport { traverseComponents } from \"./traverseComponents\";\nimport { CompilationContextType } from \"./types\";\n\nexport function duplicateConfig<\n  ConfigType extends NoCodeComponentEntry = NoCodeComponentEntry\n>(inputConfig: ConfigType, compilationContext: CompilationContextType) {\n  // deep copy first\n  const config = deepClone(inputConfig);\n\n  // refresh component ids\n  traverseComponents(config, compilationContext, ({ componentConfig }) => {\n    componentConfig._id = uniqueId();\n  });\n\n  // every text must get new local id\n  configTraverse(config, compilationContext, ({ value, schemaProp }) => {\n    if (schemaProp.type === \"text\") {\n      value.id = \"local.\" + uniqueId();\n    }\n  });\n\n  return config;\n}\n"],"names":["duplicateConfig","inputConfig","compilationContext","config","deepClone","traverseComponents","_ref","componentConfig","_id","uniqueId","configTraverse","_ref2","value","schemaProp","type","id"],"mappings":";;;;;;AAMO,SAASA,eAAeA,CAE7BC,WAAuB,EAAEC,kBAA0C,EAAE;AACrE;AACA,EAAA,MAAMC,MAAM,GAAGC,SAAS,CAACH,WAAW,CAAC,CAAA;;AAErC;AACAI,EAAAA,kBAAkB,CAACF,MAAM,EAAED,kBAAkB,EAAEI,IAAA,IAAyB;IAAA,IAAxB;AAAEC,MAAAA,eAAAA;AAAgB,KAAC,GAAAD,IAAA,CAAA;AACjEC,IAAAA,eAAe,CAACC,GAAG,GAAGC,QAAQ,EAAE,CAAA;AAClC,GAAC,CAAC,CAAA;;AAEF;AACAC,EAAAA,cAAc,CAACP,MAAM,EAAED,kBAAkB,EAAES,KAAA,IAA2B;IAAA,IAA1B;MAAEC,KAAK;AAAEC,MAAAA,UAAAA;AAAW,KAAC,GAAAF,KAAA,CAAA;AAC/D,IAAA,IAAIE,UAAU,CAACC,IAAI,KAAK,MAAM,EAAE;AAC9BF,MAAAA,KAAK,CAACG,EAAE,GAAG,QAAQ,GAAGN,QAAQ,EAAE,CAAA;AAClC,KAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,OAAON,MAAM,CAAA;AACf;;;;"}