{"version":3,"file":"configFindAllPaths.js","sources":["../../../src/compiler/configFindAllPaths.ts"],"sourcesContent":["import { NoCodeComponentEntry } from \"../types\";\r\nimport { traverseComponents } from \"./traverseComponents\";\r\nimport { CompilationContextType } from \"./types\";\r\n\r\nfunction configFindAllPaths<T extends NoCodeComponentEntry>(\r\n  config: NoCodeComponentEntry,\r\n  editorContext: CompilationContextType,\r\n  predicate: (\r\n    config: NoCodeComponentEntry,\r\n    editorContext: CompilationContextType\r\n  ) => config is T\r\n): Array<string> {\r\n  const matchedConfigPaths: Array<string> = [];\r\n\r\n  traverseComponents(config, editorContext, ({ path, componentConfig }) => {\r\n    if (predicate(componentConfig, editorContext)) {\r\n      matchedConfigPaths.push(path);\r\n    }\r\n  });\r\n\r\n  return matchedConfigPaths;\r\n}\r\n\r\nexport { configFindAllPaths };\r\n"],"names":["configFindAllPaths","config","editorContext","predicate","matchedConfigPaths","traverseComponents","_ref","path","componentConfig","push"],"mappings":";;;AAIA,SAASA,kBAAkBA,CACzBC,MAA4B,EAC5BC,aAAqC,EACrCC,SAGgB,EACD;EACf,MAAMC,kBAAiC,GAAG,EAAE,CAAA;AAE5CC,EAAAA,kBAAkB,CAACJ,MAAM,EAAEC,aAAa,EAAEI,IAAA,IAA+B;IAAA,IAA9B;MAAEC,IAAI;AAAEC,MAAAA,eAAAA;AAAgB,KAAC,GAAAF,IAAA,CAAA;AAClE,IAAA,IAAIH,SAAS,CAACK,eAAe,EAAEN,aAAa,CAAC,EAAE;AAC7CE,MAAAA,kBAAkB,CAACK,IAAI,CAACF,IAAI,CAAC,CAAA;AAC/B,KAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOH,kBAAkB,CAAA;AAC3B;;;;"}