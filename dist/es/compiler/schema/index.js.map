{"version":3,"file":"index.js","sources":["../../../../src/compiler/schema/index.ts"],"sourcesContent":["import {\n  ComponentCollectionLocalisedSchemaProp,\n  ComponentCollectionSchemaProp,\n  ComponentPickerType,\n  ComponentSchemaProp,\n  ExternalSchemaProp,\n  Field,\n  SchemaProp as CoreSchemaProp,\n  SchemaPropShared,\n  LocalSchemaProp,\n} from \"../../types\";\nimport { EditorContextType, InternalComponentDefinition } from \"../types\";\n\ntype SchemaProp = CoreSchemaProp | Component$$$SchemaProp;\n\nexport type Component$$$SchemaProp = SchemaPropShared<\"component$$$\"> & {\n  definition: InternalComponentDefinition;\n  picker?: ComponentPickerType;\n  required?: boolean;\n};\n\nexport type InternalAnyField = InternalField & { [key: string]: any };\n\nexport type InternalAnyTinaField = InternalAnyField;\n\nexport type InternalField = Omit<Field, \"schemaProp\" | \"parse\" | \"format\"> & {\n  parse?: (value: any, name: string, field: InternalAnyField) => any;\n  format?: (value: any, name: string, field: InternalAnyField) => any;\n  schemaProp: Field[\"schemaProp\"] | Component$$$SchemaProp;\n};\n\nexport function isSchemaPropComponentCollectionLocalised(\n  schemaProp: SchemaProp\n): schemaProp is ComponentCollectionLocalisedSchemaProp {\n  return schemaProp.type === \"component-collection-localised\";\n}\n\nexport function isSchemaPropCollection(\n  schemaProp: SchemaProp\n): schemaProp is\n  | ComponentCollectionLocalisedSchemaProp\n  | ComponentCollectionSchemaProp {\n  return (\n    schemaProp.type === \"component-collection\" ||\n    schemaProp.type === \"component-collection-localised\"\n  );\n}\n\nexport function isSchemaPropComponent(\n  schemaProp: SchemaProp\n): schemaProp is ComponentSchemaProp {\n  return schemaProp.type === \"component\";\n}\n\nexport function isSchemaPropComponentOrComponentCollection(\n  schemaProp: SchemaProp\n): schemaProp is\n  | ComponentCollectionLocalisedSchemaProp\n  | ComponentCollectionSchemaProp\n  | ComponentSchemaProp {\n  return (\n    isSchemaPropCollection(schemaProp) || isSchemaPropComponent(schemaProp)\n  );\n}\n\nexport function isSchemaPropActionTextModifier(schemaProp: SchemaProp) {\n  return (\n    schemaProp.type === \"component\" &&\n    (schemaProp as ComponentSchemaProp).accepts.includes(\"actionTextModifier\")\n  );\n}\n\nexport function isSchemaPropTextModifier(schemaProp: SchemaProp) {\n  return (\n    schemaProp.type === \"component\" &&\n    (schemaProp as ComponentSchemaProp).accepts.includes(\"textModifier\")\n  );\n}\n\nconst internalTypes = new Set<SchemaProp[\"type\"]>([\n  \"string\",\n  \"number\",\n  \"boolean\",\n  \"select\",\n  \"radio-group\",\n  \"color\",\n  \"space\",\n  \"font\",\n  \"icon\",\n  \"text\",\n  \"component\",\n  \"component-collection\",\n  \"position\",\n  \"component$$$\",\n  \"component-collection-localised\",\n  \"aspectRatio\",\n  \"containerWidth\",\n  \"boxShadow\",\n]);\n\nexport function isCustomSchemaProp(\n  schemaProp: SchemaProp\n): schemaProp is ExternalSchemaProp | LocalSchemaProp {\n  return !internalTypes.has(schemaProp.type);\n}\n\nexport function isExternalSchemaProp(\n  schemaProp: SchemaProp,\n  types: EditorContextType[\"types\"]\n): schemaProp is ExternalSchemaProp {\n  return types[schemaProp.type] && types[schemaProp.type].type === \"external\";\n}\n\ntype TextModifierSchemaPropOptions = Omit<\n  ComponentSchemaProp,\n  \"type\" | \"accepts\" | \"hidden\"\n> &\n  Partial<Pick<ComponentSchemaProp, \"accepts\">>;\n\nexport function textModifierSchemaProp(\n  options: TextModifierSchemaPropOptions\n): ComponentSchemaProp {\n  return {\n    type: \"component\",\n    accepts: [\"textModifier\"],\n    // Schema props of type \"component\" are hidden by default\n    visible: true,\n    ...options,\n  };\n}\n"],"names":["isSchemaPropComponentCollectionLocalised","schemaProp","type","isSchemaPropCollection","isSchemaPropComponent","isSchemaPropComponentOrComponentCollection","isSchemaPropActionTextModifier","accepts","includes","isSchemaPropTextModifier","internalTypes","Set","isCustomSchemaProp","has","isExternalSchemaProp","types","textModifierSchemaProp","options","visible"],"mappings":";AA+BO,SAASA,wCAAwCA,CACtDC,UAAsB,EACgC;AACtD,EAAA,OAAOA,UAAU,CAACC,IAAI,KAAK,gCAAgC,CAAA;AAC7D,CAAA;AAEO,SAASC,sBAAsBA,CACpCF,UAAsB,EAGU;EAChC,OACEA,UAAU,CAACC,IAAI,KAAK,sBAAsB,IAC1CD,UAAU,CAACC,IAAI,KAAK,gCAAgC,CAAA;AAExD,CAAA;AAEO,SAASE,qBAAqBA,CACnCH,UAAsB,EACa;AACnC,EAAA,OAAOA,UAAU,CAACC,IAAI,KAAK,WAAW,CAAA;AACxC,CAAA;AAEO,SAASG,0CAA0CA,CACxDJ,UAAsB,EAIA;EACtB,OACEE,sBAAsB,CAACF,UAAU,CAAC,IAAIG,qBAAqB,CAACH,UAAU,CAAC,CAAA;AAE3E,CAAA;AAEO,SAASK,8BAA8BA,CAACL,UAAsB,EAAE;AACrE,EAAA,OACEA,UAAU,CAACC,IAAI,KAAK,WAAW,IAC9BD,UAAU,CAAyBM,OAAO,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CAAA;AAE9E,CAAA;AAEO,SAASC,wBAAwBA,CAACR,UAAsB,EAAE;AAC/D,EAAA,OACEA,UAAU,CAACC,IAAI,KAAK,WAAW,IAC9BD,UAAU,CAAyBM,OAAO,CAACC,QAAQ,CAAC,cAAc,CAAC,CAAA;AAExE,CAAA;AAEA,MAAME,aAAa,GAAG,IAAIC,GAAG,CAAqB,CAChD,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,aAAa,EACb,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,MAAM,EACN,WAAW,EACX,sBAAsB,EACtB,UAAU,EACV,cAAc,EACd,gCAAgC,EAChC,aAAa,EACb,gBAAgB,EAChB,WAAW,CACZ,CAAC,CAAA;AAEK,SAASC,kBAAkBA,CAChCX,UAAsB,EAC8B;EACpD,OAAO,CAACS,aAAa,CAACG,GAAG,CAACZ,UAAU,CAACC,IAAI,CAAC,CAAA;AAC5C,CAAA;AAEO,SAASY,oBAAoBA,CAClCb,UAAsB,EACtBc,KAAiC,EACC;AAClC,EAAA,OAAOA,KAAK,CAACd,UAAU,CAACC,IAAI,CAAC,IAAIa,KAAK,CAACd,UAAU,CAACC,IAAI,CAAC,CAACA,IAAI,KAAK,UAAU,CAAA;AAC7E,CAAA;AAQO,SAASc,sBAAsBA,CACpCC,OAAsC,EACjB;EACrB,OAAO;AACLf,IAAAA,IAAI,EAAE,WAAW;IACjBK,OAAO,EAAE,CAAC,cAAc,CAAC;AACzB;AACAW,IAAAA,OAAO,EAAE,IAAI;IACb,GAAGD,OAAAA;GACJ,CAAA;AACH;;;;"}