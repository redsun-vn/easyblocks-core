{"version":3,"file":"Easyblocks.js","sources":["../../../src/components/Easyblocks.tsx"],"sourcesContent":["\"use client\";\nimport React, { ReactElement, useEffect } from \"react\";\nimport { RichTextClient } from \"../compiler/builtins/$richText/$richText.client\";\nimport { RichTextBlockElementClient } from \"../compiler/builtins/$richText/$richTextBlockElement/$richTextBlockElement.client\";\nimport { RichTextLineElementClient } from \"../compiler/builtins/$richText/$richTextLineElement/$richTextLineElement.client\";\nimport { RichTextPartClient } from \"../compiler/builtins/$richText/$richTextPart/$richTextPart.client\";\nimport { TextClient } from \"../compiler/builtins/$text/$text.client\";\nimport { ExternalData, RenderableDocument } from \"../types\";\nimport {\n  ComponentBuilder,\n  ComponentBuilderProps,\n} from \"./ComponentBuilder/ComponentBuilder\";\nimport { EasyblocksExternalDataProvider } from \"./EasyblocksExternalDataProvider\";\nimport { EasyblocksMetadataProvider } from \"./EasyblocksMetadataProvider\";\nimport { MissingComponent } from \"./MissingComponent\";\n\nexport type EasyblocksProps = {\n  renderableDocument: RenderableDocument;\n  externalData?: ExternalData;\n  components?: Record<string, React.ComponentType<any>>;\n  componentOverrides?: ComponentOverrides;\n};\n\nexport type ComponentOverrides = Record<string, ReactElement>;\n\nconst builtinComponents: ComponentBuilderProps[\"components\"] = {\n  \"@easyblocks/missing-component\": MissingComponent,\n  \"@easyblocks/rich-text.client\": RichTextClient,\n  \"@easyblocks/rich-text-block-element\": RichTextBlockElementClient,\n  \"@easyblocks/rich-text-line-element\": RichTextLineElementClient,\n  \"@easyblocks/rich-text-part\": RichTextPartClient,\n  \"@easyblocks/text.client\": TextClient,\n  \"EditableComponentBuilder.client\": ComponentBuilder,\n};\n\nfunction Easyblocks({\n  renderableDocument,\n  externalData,\n  componentOverrides,\n  components,\n}: EasyblocksProps) {\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      \"--shopstory-viewport-width\",\n      `calc(100vw - ${\n        window.innerWidth - document.documentElement.clientWidth\n      }px)`\n    );\n  });\n\n  const renderableContent = renderableDocument.renderableContent;\n\n  if (renderableContent === null) {\n    return null;\n  }\n\n  if (componentOverrides) {\n    const overridesEntries = Object.entries(componentOverrides);\n\n    overridesEntries.forEach(([componentProp, componentOverride]) => {\n      renderableContent.components[componentProp] = [componentOverride];\n    });\n  }\n\n  return (\n    <EasyblocksMetadataProvider meta={renderableDocument.meta}>\n      <EasyblocksExternalDataProvider externalData={externalData ?? {}}>\n        <ComponentBuilder\n          compiled={renderableContent}\n          path={\"\"}\n          components={{\n            ...components,\n            ...builtinComponents,\n          }}\n        />\n      </EasyblocksExternalDataProvider>\n    </EasyblocksMetadataProvider>\n  );\n}\n\nexport { Easyblocks };\n"],"names":["components","useEffect","overridesEntries","compiled","path"],"mappings":";;;;;;;;;;;;;AAyBA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA;;;;;AAIEA;AACe;AACfC;;AAOA;AAEA;;AAGE;AACF;AAEA;AACE;AAEAC;AAAiE;;AAEjE;AACF;AAEA;;AAC4D;;AACS;AAE7DC;AACAC;AACAJ;AACE;;AAEF;;AAKV;;"}