{"version":3,"file":"stringifier.js","sources":["../../../../src/reduce-css-calc/lib/stringifier.js"],"sourcesContent":["import { flip } from \"./reducer\";\n\nconst order = {\n  \"*\": 0,\n  \"/\": 0,\n  \"+\": 1,\n  \"-\": 1,\n};\n\nfunction round(value, prec) {\n  if (prec !== false) {\n    const precision = Math.pow(10, prec);\n    return Math.round(value * precision) / precision;\n  }\n  return value;\n}\n\nfunction stringify(node, prec) {\n  switch (node.type) {\n    case \"MathExpression\": {\n      const { left, right, operator: op } = node;\n      let str = \"\";\n\n      if (left.type === \"MathExpression\" && order[op] < order[left.operator])\n        str += \"(\" + stringify(left, prec) + \")\";\n      else str += stringify(left, prec);\n\n      str += \" \" + node.operator + \" \";\n\n      if (\n        right.type === \"MathExpression\" &&\n        order[op] < order[right.operator]\n      ) {\n        str += \"(\" + stringify(right, prec) + \")\";\n      } else if (\n        right.type === \"MathExpression\" &&\n        op === \"-\" &&\n        [\"+\", \"-\"].includes(right.operator)\n      ) {\n        // fix #52 : a-(b+c) = a-b-c\n        right.operator = flip(right.operator);\n        str += stringify(right, prec);\n      } else {\n        str += stringify(right, prec);\n      }\n\n      return str;\n    }\n    case \"Value\":\n      return round(node.value, prec);\n    case \"CssVariable\":\n      if (node.fallback) {\n        return `var(${node.value}, ${stringify(node.fallback, prec, true)})`;\n      }\n      return `var(${node.value})`;\n    case \"Calc\":\n      if (node.prefix) {\n        return `-${node.prefix}-calc(${stringify(node.value, prec)})`;\n      }\n      return `calc(${stringify(node.value, prec)})`;\n    default:\n      return round(node.value, prec) + node.unit;\n  }\n}\n\nexport function stringifier(calc, node, precision) {\n  let str = stringify(node, precision);\n\n  if (node.type === \"MathExpression\") {\n    // if calc expression couldn't be resolved to a single value, re-wrap it as\n    // a calc()\n    str = calc + \"(\" + str + \")\";\n  }\n  return str;\n}\n"],"names":["order","round","value","prec","precision","Math","pow","stringify","node","type","left","right","operator","op","str","includes","flip","fallback","prefix","unit","stringifier","calc"],"mappings":"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"}