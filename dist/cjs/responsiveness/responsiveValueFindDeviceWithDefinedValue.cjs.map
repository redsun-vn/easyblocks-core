{"version":3,"file":"responsiveValueFindDeviceWithDefinedValue.cjs","sources":["../../../src/responsiveness/responsiveValueFindDeviceWithDefinedValue.ts"],"sourcesContent":["import {\r\n  getDeviceWidthPairs,\r\n  getDeviceWidthPairsFromDevices,\r\n} from \"../compiler/getDeviceWidthPairs\";\r\nimport type { DeviceRange, Devices, TrulyResponsiveValue } from \"../types\";\r\n\r\nexport function responsiveValueFindHigherDeviceWithDefinedValue<T>(\r\n  value: TrulyResponsiveValue<T>,\r\n  breakpoint: string,\r\n  devices: Devices,\r\n  widths?: TrulyResponsiveValue<number>\r\n): DeviceRange | undefined {\r\n  const componentWidths = widths\r\n    ? getDeviceWidthPairs(widths, devices)\r\n    : getDeviceWidthPairsFromDevices(devices);\r\n\r\n  const componentWidthIndex = componentWidths.findIndex(\r\n    (x) => x.deviceId === breakpoint\r\n  );\r\n  const componentWidth = devices[componentWidthIndex];\r\n\r\n  if (!componentWidth) {\r\n    throw new Error(\"undefined breakpoint\");\r\n  }\r\n\r\n  //\r\n  // if (device.breakpoint === null) {\r\n  //   return;\r\n  // }\r\n\r\n  for (let i = componentWidthIndex + 1; i <= componentWidths.length - 1; i++) {\r\n    const deviceId = componentWidths[i].deviceId;\r\n\r\n    if (value[deviceId] !== undefined) {\r\n      return devices.find((d) => d.id === deviceId)!;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function responsiveValueFindLowerDeviceWithDefinedValue<T>(\r\n  value: TrulyResponsiveValue<T>,\r\n  breakpoint: string,\r\n  devices: Devices,\r\n  widths?: TrulyResponsiveValue<number>\r\n): DeviceRange | undefined {\r\n  const componentWidths = widths\r\n    ? getDeviceWidthPairs(widths, devices)\r\n    : getDeviceWidthPairsFromDevices(devices);\r\n  const componentWidthIndex = componentWidths.findIndex(\r\n    (x) => x.deviceId === breakpoint\r\n  );\r\n  const componentWidth = devices[componentWidthIndex];\r\n\r\n  if (!componentWidth) {\r\n    throw new Error(\"undefined breakpoint\");\r\n  }\r\n\r\n  for (let i = componentWidthIndex - 1; i >= 0; i--) {\r\n    const deviceId = componentWidths[i].deviceId;\r\n\r\n    if (value[deviceId] !== undefined) {\r\n      return devices.find((d) => d.id === deviceId)!;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function responsiveValueFindDeviceWithDefinedValue<T>(\r\n  value: TrulyResponsiveValue<T>,\r\n  breakpoint: string,\r\n  devices: Devices,\r\n  widths?: TrulyResponsiveValue<number>\r\n): DeviceRange | undefined {\r\n  if (value[breakpoint] !== undefined) {\r\n    return devices.find((x) => x.id === breakpoint);\r\n  }\r\n\r\n  const higherDevice = responsiveValueFindHigherDeviceWithDefinedValue(\r\n    value,\r\n    breakpoint,\r\n    devices,\r\n    widths\r\n  );\r\n\r\n  if (higherDevice !== undefined) {\r\n    return higherDevice;\r\n  }\r\n\r\n  const lowerDevice = responsiveValueFindLowerDeviceWithDefinedValue(\r\n    value,\r\n    breakpoint,\r\n    devices,\r\n    widths\r\n  );\r\n\r\n  if (lowerDevice !== undefined) {\r\n    return lowerDevice;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n"],"names":["responsiveValueFindHigherDeviceWithDefinedValue","value","breakpoint","devices","widths","componentWidths","getDeviceWidthPairs","getDeviceWidthPairsFromDevices","componentWidthIndex","findIndex","x","deviceId","componentWidth","Error","i","length","undefined","find","d","id","responsiveValueFindLowerDeviceWithDefinedValue","responsiveValueFindDeviceWithDefinedValue","higherDevice","lowerDevice"],"mappings":"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"}