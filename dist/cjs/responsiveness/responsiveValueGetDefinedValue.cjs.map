{"version":3,"file":"responsiveValueGetDefinedValue.cjs","sources":["../../../src/responsiveness/responsiveValueGetDefinedValue.ts"],"sourcesContent":["import { Devices, ResponsiveValue, TrulyResponsiveValue } from \"../types\";\r\nimport { isTrulyResponsiveValue } from \"./isTrulyResponsiveValue\";\r\nimport {\r\n  responsiveValueFindDeviceWithDefinedValue,\r\n  responsiveValueFindHigherDeviceWithDefinedValue,\r\n  responsiveValueFindLowerDeviceWithDefinedValue,\r\n} from \"./responsiveValueFindDeviceWithDefinedValue\";\r\n\r\nexport function responsiveValueGetFirstHigherValue<T>(\r\n  value: TrulyResponsiveValue<T>,\r\n  breakpoint: string,\r\n  devices: Devices,\r\n  widths: TrulyResponsiveValue<number>\r\n) {\r\n  const higherDefinedDevice = responsiveValueFindHigherDeviceWithDefinedValue(\r\n    value,\r\n    breakpoint,\r\n    devices,\r\n    widths\r\n  );\r\n\r\n  if (!higherDefinedDevice) {\r\n    return;\r\n  }\r\n\r\n  return value[higherDefinedDevice.id] as T;\r\n}\r\n\r\nexport function responsiveValueGetFirstLowerValue<T>(\r\n  value: TrulyResponsiveValue<T>,\r\n  breakpoint: string,\r\n  devices: Devices,\r\n  widths: TrulyResponsiveValue<number>\r\n) {\r\n  const lowerDefinedDevice = responsiveValueFindLowerDeviceWithDefinedValue(\r\n    value,\r\n    breakpoint,\r\n    devices,\r\n    widths\r\n  );\r\n  if (!lowerDefinedDevice) {\r\n    return;\r\n  }\r\n\r\n  return value[lowerDefinedDevice.id] as T;\r\n}\r\n\r\nexport function responsiveValueGetDefinedValue<T>(\r\n  value: ResponsiveValue<T>,\r\n  breakpoint: string,\r\n  devices: Devices,\r\n  widths?: TrulyResponsiveValue<number>\r\n) {\r\n  if (!isTrulyResponsiveValue(value)) {\r\n    return value;\r\n  }\r\n\r\n  const definedDevice = responsiveValueFindDeviceWithDefinedValue(\r\n    value,\r\n    breakpoint,\r\n    devices,\r\n    widths\r\n  );\r\n\r\n  if (!definedDevice) {\r\n    return;\r\n  }\r\n\r\n  return value[definedDevice.id] as T;\r\n}\r\n"],"names":["responsiveValueGetFirstHigherValue","value","breakpoint","devices","widths","higherDefinedDevice","responsiveValueFindHigherDeviceWithDefinedValue","id","responsiveValueGetFirstLowerValue","lowerDefinedDevice","responsiveValueFindLowerDeviceWithDefinedValue","responsiveValueGetDefinedValue","isTrulyResponsiveValue","definedDevice","responsiveValueFindDeviceWithDefinedValue"],"mappings":";;;;;;;;AAQO,SAASA,kCAAkCA,CAChDC,KAA8B,EAC9BC,UAAkB,EAClBC,OAAgB,EAChBC,MAAoC,EACpC;EACA,MAAMC,mBAAmB,GAAGC,yFAA+C,CACzEL,KAAK,EACLC,UAAU,EACVC,OAAO,EACPC,MACF,CAAC,CAAA;EAED,IAAI,CAACC,mBAAmB,EAAE;AACxB,IAAA,OAAA;AACF,GAAA;AAEA,EAAA,OAAOJ,KAAK,CAACI,mBAAmB,CAACE,EAAE,CAAC,CAAA;AACtC,CAAA;AAEO,SAASC,iCAAiCA,CAC/CP,KAA8B,EAC9BC,UAAkB,EAClBC,OAAgB,EAChBC,MAAoC,EACpC;EACA,MAAMK,kBAAkB,GAAGC,wFAA8C,CACvET,KAAK,EACLC,UAAU,EACVC,OAAO,EACPC,MACF,CAAC,CAAA;EACD,IAAI,CAACK,kBAAkB,EAAE;AACvB,IAAA,OAAA;AACF,GAAA;AAEA,EAAA,OAAOR,KAAK,CAACQ,kBAAkB,CAACF,EAAE,CAAC,CAAA;AACrC,CAAA;AAEO,SAASI,8BAA8BA,CAC5CV,KAAyB,EACzBC,UAAkB,EAClBC,OAAgB,EAChBC,MAAqC,EACrC;AACA,EAAA,IAAI,CAACQ,6CAAsB,CAACX,KAAK,CAAC,EAAE;AAClC,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;EAEA,MAAMY,aAAa,GAAGC,mFAAyC,CAC7Db,KAAK,EACLC,UAAU,EACVC,OAAO,EACPC,MACF,CAAC,CAAA;EAED,IAAI,CAACS,aAAa,EAAE;AAClB,IAAA,OAAA;AACF,GAAA;AAEA,EAAA,OAAOZ,KAAK,CAACY,aAAa,CAACN,EAAE,CAAC,CAAA;AAChC;;;;;;"}