{"version":3,"file":"resourcesUtils.cjs","sources":["../../src/resourcesUtils.ts"],"sourcesContent":["import { isEmptyRenderableContent } from \"./checkers\";\nimport { responsiveValueMap } from \"./responsiveness\";\nimport type {\n  ExternalData,\n  ExternalReference,\n  ExternalReferenceNonEmpty,\n  ExternalSchemaProp,\n  FetchOutputCompoundResources,\n  NonNullish,\n  ResponsiveValue,\n} from \"./types\";\n\nexport function getExternalValue(\n  externalDataValue: ExternalData[string]\n): NonNullish | undefined {\n  if (\"error\" in externalDataValue) {\n    return;\n  }\n\n  return externalDataValue.value;\n}\n\nexport function isLocalTextReference(\n  resource: { id: string | null },\n  type: string\n) {\n  if (resource.id === null) {\n    return false;\n  }\n\n  return type === \"text\" && resource.id.startsWith(\"local.\");\n}\n\nexport function getExternalReferenceLocationKey(\n  configId: string,\n  fieldName: string,\n  deviceId?: string\n) {\n  let resourceId = `${configId}.${fieldName}`;\n\n  if (deviceId) {\n    resourceId += `.${deviceId}`;\n  }\n\n  return resourceId;\n}\n\nexport function getResolvedExternalDataValue(\n  externalData: ExternalData,\n  configId: string,\n  fieldName: string,\n  value: ExternalReferenceNonEmpty\n) {\n  const externalReferenceLocationKey =\n    typeof value.id === \"string\" && value.id.startsWith(\"$.\")\n      ? value.id\n      : getExternalReferenceLocationKey(configId, fieldName);\n\n  const externalValue = externalData[externalReferenceLocationKey];\n\n  if (externalValue === undefined || \"error\" in externalValue) {\n    return;\n  }\n\n  return externalValue;\n}\n\nexport function resolveExternalValue(\n  responsiveResource: ResponsiveValue<ExternalReference>,\n  configId: string,\n  schemaProp: ExternalSchemaProp,\n  externalData: ExternalData\n): ResponsiveValue<NonNullish | undefined> | undefined {\n  return responsiveValueMap(responsiveResource, (r: any, breakpointIndex) => {\n    if (r.id) {\n      // If resource field has `key` defined and its `id` starts with \"$.\", it means that it's a reference to the\n      // root resource and we need to look for the resource with the same id as the root resource.\n      const locationKey =\n        r.key && typeof r.id === \"string\" && r.id.startsWith(\"$.\")\n          ? r.id\n          : getExternalReferenceLocationKey(\n            configId,\n            schemaProp.prop,\n            breakpointIndex\n          );\n      const externalDataValue = externalData[locationKey];\n\n      let resourceValue: ReturnType<typeof getExternalValue>;\n\n      if (externalDataValue) {\n        resourceValue = getExternalValue(externalDataValue);\n      }\n\n      if (\n        externalDataValue === undefined ||\n        isEmptyRenderableContent(resourceValue)\n      ) {\n        return;\n      }\n\n      if (\"error\" in externalDataValue) {\n        return;\n      }\n\n      if (isCompoundExternalDataValue(externalDataValue)) {\n        if (!r.key) {\n          return;\n        }\n\n        const resolvedResourceValue = externalDataValue.value[r.key].value;\n\n        if (!resolvedResourceValue) {\n          return;\n        }\n\n        return resolvedResourceValue;\n      }\n\n      return resourceValue;\n    }\n\n    return;\n  });\n}\n\nexport function isCompoundExternalDataValue(\n  value: ExternalData[string]\n): value is FetchOutputCompoundResources[string] {\n  return (\n    (\"type\" in value && value.type === \"object\" && \"value\" in value) ||\n    \"error\" in value\n  );\n}\n"],"names":["getExternalValue","externalDataValue","value","isLocalTextReference","resource","type","id","startsWith","getExternalReferenceLocationKey","configId","fieldName","deviceId","resourceId","getResolvedExternalDataValue","externalData","externalReferenceLocationKey","externalValue","undefined","resolveExternalValue","responsiveResource","schemaProp","responsiveValueMap","r","breakpointIndex","locationKey","key","prop","resourceValue","isEmptyRenderableContent","isCompoundExternalDataValue","resolvedResourceValue"],"mappings":"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"}