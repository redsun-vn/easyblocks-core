{"version":3,"file":"Easyblocks.cjs","sources":["../../../src/components/Easyblocks.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { ReactElement, useEffect } from \"react\";\r\nimport { RichTextClient } from \"../compiler/builtins/$richText/$richText.client\";\r\nimport { RichTextBlockElementClient } from \"../compiler/builtins/$richText/$richTextBlockElement/$richTextBlockElement.client\";\r\nimport { RichTextLineElementClient } from \"../compiler/builtins/$richText/$richTextLineElement/$richTextLineElement.client\";\r\nimport { RichTextPartClient } from \"../compiler/builtins/$richText/$richTextPart/$richTextPart.client\";\r\nimport { TextClient } from \"../compiler/builtins/$text/$text.client\";\r\nimport { ExternalData, RenderableDocument } from \"../types\";\r\nimport {\r\n  ComponentBuilder,\r\n  ComponentBuilderProps,\r\n} from \"./ComponentBuilder/ComponentBuilder\";\r\nimport { EasyblocksExternalDataProvider } from \"./EasyblocksExternalDataProvider\";\r\nimport { EasyblocksMetadataProvider } from \"./EasyblocksMetadataProvider\";\r\nimport { MissingComponent } from \"./MissingComponent\";\r\n\r\nexport type EasyblocksProps = {\r\n  renderableDocument: RenderableDocument;\r\n  externalData?: ExternalData;\r\n  components?: Record<string, React.ComponentType<any>>;\r\n  componentOverrides?: ComponentOverrides;\r\n};\r\n\r\nexport type ComponentOverrides = Record<string, ReactElement>;\r\n\r\nconst builtinComponents: ComponentBuilderProps[\"components\"] = {\r\n  \"@easyblocks/missing-component\": MissingComponent,\r\n  \"@easyblocks/rich-text.client\": RichTextClient,\r\n  \"@easyblocks/rich-text-block-element\": RichTextBlockElementClient,\r\n  \"@easyblocks/rich-text-line-element\": RichTextLineElementClient,\r\n  \"@easyblocks/rich-text-part\": RichTextPartClient,\r\n  \"@easyblocks/text.client\": TextClient,\r\n  \"EditableComponentBuilder.client\": ComponentBuilder,\r\n};\r\n\r\nfunction Easyblocks({\r\n  renderableDocument,\r\n  externalData,\r\n  componentOverrides,\r\n  components,\r\n}: EasyblocksProps) {\r\n  useEffect(() => {\r\n    document.documentElement.style.setProperty(\r\n      \"--shopstory-viewport-width\",\r\n      `calc(100vw - ${\r\n        window.innerWidth - document.documentElement.clientWidth\r\n      }px)`\r\n    );\r\n  });\r\n\r\n  const renderableContent = renderableDocument.renderableContent;\r\n\r\n  if (renderableContent === null) {\r\n    return null;\r\n  }\r\n\r\n  if (componentOverrides) {\r\n    const overridesEntries = Object.entries(componentOverrides);\r\n\r\n    overridesEntries.forEach(([componentProp, componentOverride]) => {\r\n      renderableContent.components[componentProp] = [componentOverride];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <EasyblocksMetadataProvider meta={renderableDocument.meta}>\r\n      <EasyblocksExternalDataProvider externalData={externalData ?? {}}>\r\n        <ComponentBuilder\r\n          compiled={renderableContent}\r\n          path={\"\"}\r\n          components={{\r\n            ...components,\r\n            ...builtinComponents,\r\n          }}\r\n        />\r\n      </EasyblocksExternalDataProvider>\r\n    </EasyblocksMetadataProvider>\r\n  );\r\n}\r\n\r\nexport { Easyblocks };\r\n"],"names":["components","useEffect","overridesEntries","compiled","path"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAyBA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA;;;;;AAIEA;AACe;AACfC;;AAOA;AAEA;;AAGE;AACF;AAEA;AACE;AAEAC;AAAiE;;AAEjE;AACF;AAEA;;AAC4D;;AACS;AAE7DC;AACAC;AACAJ;AACE;;AAEF;;AAKV;;"}