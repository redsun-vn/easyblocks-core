{"version":3,"file":"index.cjs","sources":["../../../src/reduce-css-calc/index.js"],"sourcesContent":["import valueParser from \"postcss-value-parser\";\nimport { parser } from \"./parser\"; // eslint-disable-line\nimport { reducer } from \"./lib/reducer\";\nimport { stringifier } from \"./lib/stringifier\";\n\nconst MATCH_CALC = /((?:\\-[a-z]+\\-)?calc)/;\n\nfunction calculateAllViewportValues(ast, map) {\n  if (typeof ast === \"object\" && ast !== null) {\n    if (\n      ast.type === \"VwValue\" &&\n      ast.unit === \"vw\" &&\n      typeof map.vw === \"number\"\n    ) {\n      return {\n        type: \"LengthValue\",\n        unit: \"px\",\n        value: (ast.value / 100) * map.vw,\n      };\n    } else if (\n      ast.type === \"PercentageValue\" &&\n      ast.unit === \"%\" &&\n      typeof map.percent === \"number\"\n    ) {\n      return {\n        type: \"LengthValue\",\n        unit: \"px\",\n        value: (ast.value / 100) * map.percent,\n      };\n    } else {\n      for (const key in ast) {\n        if (typeof ast[key] === \"object\" && ast[key] !== null) {\n          ast[key] = calculateAllViewportValues(ast[key], map);\n        }\n      }\n    }\n  }\n  return ast;\n}\n\nexport function reduceCSSCalc(value, precision = 5, map = {}) {\n  return valueParser(value)\n    .walk((node) => {\n      // skip anything which isn't a calc() function\n      if (node.type !== \"function\" || !MATCH_CALC.test(node.value)) return;\n\n      // stringify calc expression and produce an AST\n      const contents = valueParser.stringify(node.nodes);\n\n      // skip constant() and env()\n      if (contents.indexOf(\"constant\") >= 0 || contents.indexOf(\"env\") >= 0)\n        return;\n\n      const ast = calculateAllViewportValues(parser.parse(contents), map);\n\n      // reduce AST to its simplest form, that is, either to a single value\n      // or a simplified calc expression\n      const reducedAst = reducer(ast, precision, map);\n\n      // stringify AST and write it back\n      node.type = \"word\";\n      node.value = stringifier(node.value, reducedAst, precision);\n    }, true)\n    .toString();\n}\n"],"names":["MATCH_CALC","calculateAllViewportValues","ast","map","type","unit","vw","value","percent","key","reduceCSSCalc","precision","arguments","length","undefined","valueParser","walk","node","test","contents","stringify","nodes","indexOf","parser","parse","reducedAst","reducer","stringifier","toString"],"mappings":"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"}