{"version":3,"file":"css-unit-converter.cjs","sources":["../../../../src/reduce-css-calc/lib/css-unit-converter.js"],"sourcesContent":["const conversions = {\r\n  // length\r\n  px: {\r\n    px: 1,\r\n    cm: 96.0 / 2.54,\r\n    mm: 96.0 / 25.4,\r\n    in: 96,\r\n    pt: 96.0 / 72.0,\r\n    pc: 16,\r\n  },\r\n  cm: {\r\n    px: 2.54 / 96.0,\r\n    cm: 1,\r\n    mm: 0.1,\r\n    in: 2.54,\r\n    pt: 2.54 / 72.0,\r\n    pc: 2.54 / 6.0,\r\n  },\r\n  mm: {\r\n    px: 25.4 / 96.0,\r\n    cm: 10,\r\n    mm: 1,\r\n    in: 25.4,\r\n    pt: 25.4 / 72.0,\r\n    pc: 25.4 / 6.0,\r\n  },\r\n  in: {\r\n    px: 1.0 / 96.0,\r\n    cm: 1.0 / 2.54,\r\n    mm: 1.0 / 25.4,\r\n    in: 1,\r\n    pt: 1.0 / 72.0,\r\n    pc: 1.0 / 6.0,\r\n  },\r\n  pt: {\r\n    px: 0.75,\r\n    cm: 72.0 / 2.54,\r\n    mm: 72.0 / 25.4,\r\n    in: 72,\r\n    pt: 1,\r\n    pc: 12,\r\n  },\r\n  pc: {\r\n    px: 6.0 / 96.0,\r\n    cm: 6.0 / 2.54,\r\n    mm: 6.0 / 25.4,\r\n    in: 6,\r\n    pt: 6.0 / 72.0,\r\n    pc: 1,\r\n  },\r\n  // angle\r\n  deg: {\r\n    deg: 1,\r\n    grad: 0.9,\r\n    rad: 180 / Math.PI,\r\n    turn: 360,\r\n  },\r\n  grad: {\r\n    deg: 400 / 360,\r\n    grad: 1,\r\n    rad: 200 / Math.PI,\r\n    turn: 400,\r\n  },\r\n  rad: {\r\n    deg: Math.PI / 180,\r\n    grad: Math.PI / 200,\r\n    rad: 1,\r\n    turn: Math.PI * 2,\r\n  },\r\n  turn: {\r\n    deg: 1 / 360,\r\n    grad: 1 / 400,\r\n    rad: 0.5 / Math.PI,\r\n    turn: 1,\r\n  },\r\n  // time\r\n  s: {\r\n    s: 1,\r\n    ms: 1 / 1000,\r\n  },\r\n  ms: {\r\n    s: 1000,\r\n    ms: 1,\r\n  },\r\n  // frequency\r\n  Hz: {\r\n    Hz: 1,\r\n    kHz: 1000,\r\n  },\r\n  kHz: {\r\n    Hz: 1 / 1000,\r\n    kHz: 1,\r\n  },\r\n  // resolution\r\n  dpi: {\r\n    dpi: 1,\r\n    dpcm: 1.0 / 2.54,\r\n    dppx: 1 / 96,\r\n  },\r\n  dpcm: {\r\n    dpi: 2.54,\r\n    dpcm: 1,\r\n    dppx: 2.54 / 96.0,\r\n  },\r\n  dppx: {\r\n    dpi: 96,\r\n    dpcm: 96.0 / 2.54,\r\n    dppx: 1,\r\n  },\r\n};\r\n\r\nexport function convertUnits(value, sourceUnit, targetUnit, precision) {\r\n  if (!conversions.hasOwnProperty(targetUnit))\r\n    throw new Error(\"Cannot convert to \" + targetUnit);\r\n\r\n  if (!conversions[targetUnit].hasOwnProperty(sourceUnit))\r\n    throw new Error(\"Cannot convert from \" + sourceUnit + \" to \" + targetUnit);\r\n\r\n  var converted = conversions[targetUnit][sourceUnit] * value;\r\n\r\n  if (precision !== false) {\r\n    precision = Math.pow(10, parseInt(precision) || 5);\r\n    return Math.round(converted * precision) / precision;\r\n  }\r\n\r\n  return converted;\r\n}\r\n"],"names":["conversions","px","cm","mm","in","pt","pc","deg","grad","rad","Math","PI","turn","s","ms","Hz","kHz","dpi","dpcm","dppx","convertUnits","value","sourceUnit","targetUnit","precision","hasOwnProperty","Error","converted","pow","parseInt","round"],"mappings":"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"}