{"version":3,"file":"stringifier.cjs","sources":["../../../../src/reduce-css-calc/lib/stringifier.js"],"sourcesContent":["import { flip } from \"./reducer\";\r\n\r\nconst order = {\r\n  \"*\": 0,\r\n  \"/\": 0,\r\n  \"+\": 1,\r\n  \"-\": 1,\r\n};\r\n\r\nfunction round(value, prec) {\r\n  if (prec !== false) {\r\n    const precision = Math.pow(10, prec);\r\n    return Math.round(value * precision) / precision;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction stringify(node, prec) {\r\n  switch (node.type) {\r\n    case \"MathExpression\": {\r\n      const { left, right, operator: op } = node;\r\n      let str = \"\";\r\n\r\n      if (left.type === \"MathExpression\" && order[op] < order[left.operator])\r\n        str += \"(\" + stringify(left, prec) + \")\";\r\n      else str += stringify(left, prec);\r\n\r\n      str += \" \" + node.operator + \" \";\r\n\r\n      if (\r\n        right.type === \"MathExpression\" &&\r\n        order[op] < order[right.operator]\r\n      ) {\r\n        str += \"(\" + stringify(right, prec) + \")\";\r\n      } else if (\r\n        right.type === \"MathExpression\" &&\r\n        op === \"-\" &&\r\n        [\"+\", \"-\"].includes(right.operator)\r\n      ) {\r\n        // fix #52 : a-(b+c) = a-b-c\r\n        right.operator = flip(right.operator);\r\n        str += stringify(right, prec);\r\n      } else {\r\n        str += stringify(right, prec);\r\n      }\r\n\r\n      return str;\r\n    }\r\n    case \"Value\":\r\n      return round(node.value, prec);\r\n    case \"CssVariable\":\r\n      if (node.fallback) {\r\n        return `var(${node.value}, ${stringify(node.fallback, prec, true)})`;\r\n      }\r\n      return `var(${node.value})`;\r\n    case \"Calc\":\r\n      if (node.prefix) {\r\n        return `-${node.prefix}-calc(${stringify(node.value, prec)})`;\r\n      }\r\n      return `calc(${stringify(node.value, prec)})`;\r\n    default:\r\n      return round(node.value, prec) + node.unit;\r\n  }\r\n}\r\n\r\nexport function stringifier(calc, node, precision) {\r\n  let str = stringify(node, precision);\r\n\r\n  if (node.type === \"MathExpression\") {\r\n    // if calc expression couldn't be resolved to a single value, re-wrap it as\r\n    // a calc()\r\n    str = calc + \"(\" + str + \")\";\r\n  }\r\n  return str;\r\n}\r\n"],"names":["order","round","value","prec","precision","Math","pow","stringify","node","type","left","right","operator","op","str","includes","flip","fallback","prefix","unit","stringifier","calc"],"mappings":"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"}