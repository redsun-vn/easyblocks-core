{"version":3,"file":"applyAutoUsingResponsiveTokens.cjs","sources":["../../../src/compiler/applyAutoUsingResponsiveTokens.ts"],"sourcesContent":["import {\r\n  isTrulyResponsiveValue,\r\n  responsiveValueForceGet,\r\n  responsiveValueGet,\r\n  responsiveValueGetHighestDefinedDevice,\r\n} from \"../responsiveness\";\r\nimport { ResponsiveValue, TokenValue, TrulyResponsiveValue } from \"../types\";\r\nimport { CompilationContextType } from \"./types\";\r\n\r\nexport function applyAutoUsingResponsiveTokens<T>(\r\n  input: TrulyResponsiveValue<TokenValue<ResponsiveValue<T>>>,\r\n  compilationContext: CompilationContextType\r\n): TrulyResponsiveValue<TokenValue<ResponsiveValue<T>>>;\r\nexport function applyAutoUsingResponsiveTokens<T>(\r\n  input: TokenValue<ResponsiveValue<T>>,\r\n  compilationContext: CompilationContextType\r\n): TokenValue<ResponsiveValue<T>>;\r\nexport function applyAutoUsingResponsiveTokens<T>(\r\n  input: ResponsiveValue<TokenValue<ResponsiveValue<T>>>,\r\n  compilationContext: CompilationContextType\r\n): ResponsiveValue<TokenValue<ResponsiveValue<T>>> {\r\n  if (!isTrulyResponsiveValue(input)) {\r\n    return input;\r\n  }\r\n\r\n  const highestDefinedDevice = responsiveValueGetHighestDefinedDevice(\r\n    input,\r\n    compilationContext.devices\r\n  );\r\n  let highestDefinedValue = responsiveValueForceGet(\r\n    input,\r\n    highestDefinedDevice.id\r\n  );\r\n\r\n  const inputAfterAuto: TrulyResponsiveValue<TokenValue<ResponsiveValue<T>>> = {\r\n    $res: true,\r\n  };\r\n\r\n  for (let i = compilationContext.devices.length - 1; i >= 0; i--) {\r\n    const device = compilationContext.devices[i];\r\n    const value = responsiveValueGet(input, device.id);\r\n\r\n    if (\r\n      value === undefined &&\r\n      isTrulyResponsiveValue(highestDefinedValue.value)\r\n    ) {\r\n      inputAfterAuto[device.id] = highestDefinedValue;\r\n    }\r\n\r\n    if (value !== undefined) {\r\n      inputAfterAuto[device.id] = value;\r\n\r\n      highestDefinedValue = input[device.id] as TokenValue<ResponsiveValue<T>>;\r\n    }\r\n  }\r\n\r\n  return inputAfterAuto;\r\n}\r\n"],"names":["applyAutoUsingResponsiveTokens","input","compilationContext","isTrulyResponsiveValue","highestDefinedDevice","responsiveValueGetHighestDefinedDevice","devices","highestDefinedValue","responsiveValueForceGet","id","inputAfterAuto","$res","i","length","device","value","responsiveValueGet","undefined"],"mappings":";;;;;;;;;AAiBO,SAASA,8BAA8BA,CAC5CC,KAAsD,EACtDC,kBAA0C,EACO;AACjD,EAAA,IAAI,CAACC,6CAAsB,CAACF,KAAK,CAAC,EAAE;AAClC,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;EAEA,MAAMG,oBAAoB,GAAGC,6EAAsC,CACjEJ,KAAK,EACLC,kBAAkB,CAACI,OACrB,CAAC,CAAA;EACD,IAAIC,mBAAmB,GAAGC,0CAAuB,CAC/CP,KAAK,EACLG,oBAAoB,CAACK,EACvB,CAAC,CAAA;AAED,EAAA,MAAMC,cAAoE,GAAG;AAC3EC,IAAAA,IAAI,EAAE,IAAA;GACP,CAAA;AAED,EAAA,KAAK,IAAIC,CAAC,GAAGV,kBAAkB,CAACI,OAAO,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC/D,IAAA,MAAME,MAAM,GAAGZ,kBAAkB,CAACI,OAAO,CAACM,CAAC,CAAC,CAAA;IAC5C,MAAMG,KAAK,GAAGC,qCAAkB,CAACf,KAAK,EAAEa,MAAM,CAACL,EAAE,CAAC,CAAA;IAElD,IACEM,KAAK,KAAKE,SAAS,IACnBd,6CAAsB,CAACI,mBAAmB,CAACQ,KAAK,CAAC,EACjD;AACAL,MAAAA,cAAc,CAACI,MAAM,CAACL,EAAE,CAAC,GAAGF,mBAAmB,CAAA;AACjD,KAAA;IAEA,IAAIQ,KAAK,KAAKE,SAAS,EAAE;AACvBP,MAAAA,cAAc,CAACI,MAAM,CAACL,EAAE,CAAC,GAAGM,KAAK,CAAA;AAEjCR,MAAAA,mBAAmB,GAAGN,KAAK,CAACa,MAAM,CAACL,EAAE,CAAmC,CAAA;AAC1E,KAAA;AACF,GAAA;AAEA,EAAA,OAAOC,cAAc,CAAA;AACvB;;;;"}