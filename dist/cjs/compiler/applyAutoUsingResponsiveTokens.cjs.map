{"version":3,"file":"applyAutoUsingResponsiveTokens.cjs","sources":["../../../src/compiler/applyAutoUsingResponsiveTokens.ts"],"sourcesContent":["import {\n  isTrulyResponsiveValue,\n  responsiveValueForceGet,\n  responsiveValueGet,\n  responsiveValueGetHighestDefinedDevice,\n} from \"../responsiveness\";\nimport { ResponsiveValue, TokenValue, TrulyResponsiveValue } from \"../types\";\nimport { CompilationContextType } from \"./types\";\n\nexport function applyAutoUsingResponsiveTokens<T>(\n  input: TrulyResponsiveValue<TokenValue<ResponsiveValue<T>>>,\n  compilationContext: CompilationContextType\n): TrulyResponsiveValue<TokenValue<ResponsiveValue<T>>>;\nexport function applyAutoUsingResponsiveTokens<T>(\n  input: TokenValue<ResponsiveValue<T>>,\n  compilationContext: CompilationContextType\n): TokenValue<ResponsiveValue<T>>;\nexport function applyAutoUsingResponsiveTokens<T>(\n  input: ResponsiveValue<TokenValue<ResponsiveValue<T>>>,\n  compilationContext: CompilationContextType\n): ResponsiveValue<TokenValue<ResponsiveValue<T>>> {\n  if (!isTrulyResponsiveValue(input)) {\n    return input;\n  }\n\n  const highestDefinedDevice = responsiveValueGetHighestDefinedDevice(\n    input,\n    compilationContext.devices\n  );\n  let highestDefinedValue = responsiveValueForceGet(\n    input,\n    highestDefinedDevice.id\n  );\n\n  const inputAfterAuto: TrulyResponsiveValue<TokenValue<ResponsiveValue<T>>> = {\n    $res: true,\n  };\n\n  for (let i = compilationContext.devices.length - 1; i >= 0; i--) {\n    const device = compilationContext.devices[i];\n    const value = responsiveValueGet(input, device.id);\n\n    if (\n      value === undefined &&\n      isTrulyResponsiveValue(highestDefinedValue.value)\n    ) {\n      inputAfterAuto[device.id] = highestDefinedValue;\n    }\n\n    if (value !== undefined) {\n      inputAfterAuto[device.id] = value;\n\n      highestDefinedValue = input[device.id] as TokenValue<ResponsiveValue<T>>;\n    }\n  }\n\n  return inputAfterAuto;\n}\n"],"names":["applyAutoUsingResponsiveTokens","input","compilationContext","isTrulyResponsiveValue","highestDefinedDevice","responsiveValueGetHighestDefinedDevice","devices","highestDefinedValue","responsiveValueForceGet","id","inputAfterAuto","$res","i","length","device","value","responsiveValueGet","undefined"],"mappings":";;;;;;;;;AAiBO,SAASA,8BAA8BA,CAC5CC,KAAsD,EACtDC,kBAA0C,EACO;AACjD,EAAA,IAAI,CAACC,6CAAsB,CAACF,KAAK,CAAC,EAAE;AAClC,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;EAEA,MAAMG,oBAAoB,GAAGC,6EAAsC,CACjEJ,KAAK,EACLC,kBAAkB,CAACI,OACrB,CAAC,CAAA;EACD,IAAIC,mBAAmB,GAAGC,0CAAuB,CAC/CP,KAAK,EACLG,oBAAoB,CAACK,EACvB,CAAC,CAAA;AAED,EAAA,MAAMC,cAAoE,GAAG;AAC3EC,IAAAA,IAAI,EAAE,IAAA;GACP,CAAA;AAED,EAAA,KAAK,IAAIC,CAAC,GAAGV,kBAAkB,CAACI,OAAO,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC/D,IAAA,MAAME,MAAM,GAAGZ,kBAAkB,CAACI,OAAO,CAACM,CAAC,CAAC,CAAA;IAC5C,MAAMG,KAAK,GAAGC,qCAAkB,CAACf,KAAK,EAAEa,MAAM,CAACL,EAAE,CAAC,CAAA;IAElD,IACEM,KAAK,KAAKE,SAAS,IACnBd,6CAAsB,CAACI,mBAAmB,CAACQ,KAAK,CAAC,EACjD;AACAL,MAAAA,cAAc,CAACI,MAAM,CAACL,EAAE,CAAC,GAAGF,mBAAmB,CAAA;AACjD,KAAA;IAEA,IAAIQ,KAAK,KAAKE,SAAS,EAAE;AACvBP,MAAAA,cAAc,CAACI,MAAM,CAACL,EAAE,CAAC,GAAGM,KAAK,CAAA;AAEjCR,MAAAA,mBAAmB,GAAGN,KAAK,CAACa,MAAM,CAACL,EAAE,CAAmC,CAAA;AAC1E,KAAA;AACF,GAAA;AAEA,EAAA,OAAOC,cAAc,CAAA;AACvB;;;;"}