{"version":3,"file":"compile.cjs","sources":["../../../../src/compiler/public/compile.ts"],"sourcesContent":["import { mergeCompilationMeta } from \"../mergeCompilationMeta\";\r\nimport { CompilationMetadata, CompilerModule } from \"../../types\";\r\nimport { compileInternal } from \"../compileInternal\";\r\nimport { createCompilationContext } from \"../createCompilationContext\";\r\nimport { normalizeInput } from \"../normalizeInput\";\r\n\r\nexport const compile: CompilerModule[\"compile\"] = (\r\n  content,\r\n  config,\r\n  contextParams\r\n) => {\r\n  let resultMeta: CompilationMetadata = {\r\n    // @ts-expect-error We can leave `devices` and `locale` undefined because these values are set in `compileInternal`.\r\n    vars: {},\r\n    code: {},\r\n  };\r\n\r\n  const compilationContext = createCompilationContext(\r\n    config,\r\n    contextParams,\r\n    content._component\r\n  );\r\n\r\n  const inputConfigComponent = normalizeInput(content);\r\n\r\n  const { meta, compiled, configAfterAuto } = compileInternal(\r\n    inputConfigComponent,\r\n    compilationContext\r\n  );\r\n\r\n  resultMeta = mergeCompilationMeta(resultMeta, meta);\r\n\r\n  return {\r\n    compiled,\r\n    configAfterAuto,\r\n    meta: resultMeta,\r\n  };\r\n};\r\n"],"names":["compile","content","config","contextParams","resultMeta","vars","code","compilationContext","createCompilationContext","_component","inputConfigComponent","normalizeInput","meta","compiled","configAfterAuto","compileInternal","mergeCompilationMeta"],"mappings":";;;;;;;;;;AAMO,MAAMA,OAAkC,GAAGA,CAChDC,OAAO,EACPC,MAAM,EACNC,aAAa,KACV;AACH,EAAA,IAAIC,UAA+B,GAAG;AACpC;IACAC,IAAI,EAAE,EAAE;AACRC,IAAAA,IAAI,EAAE,EAAC;GACR,CAAA;EAED,MAAMC,kBAAkB,GAAGC,iDAAwB,CACjDN,MAAM,EACNC,aAAa,EACbF,OAAO,CAACQ,UACV,CAAC,CAAA;AAED,EAAA,MAAMC,oBAAoB,GAAGC,6BAAc,CAACV,OAAO,CAAC,CAAA;EAEpD,MAAM;IAAEW,IAAI;IAAEC,QAAQ;AAAEC,IAAAA,eAAAA;AAAgB,GAAC,GAAGC,+BAAe,CACzDL,oBAAoB,EACpBH,kBACF,CAAC,CAAA;AAEDH,EAAAA,UAAU,GAAGY,yCAAoB,CAACZ,UAAU,EAAEQ,IAAI,CAAC,CAAA;EAEnD,OAAO;IACLC,QAAQ;IACRC,eAAe;AACfF,IAAAA,IAAI,EAAER,UAAAA;GACP,CAAA;AACH;;;;"}