{"version":3,"file":"findResources.cjs","sources":["../../../../src/compiler/public/findResources.ts"],"sourcesContent":["import {\n  getExternalReferenceLocationKey,\n  isLocalTextReference,\n} from \"../../resourcesUtils\";\nimport {\n  isTrulyResponsiveValue,\n  responsiveValueEntries,\n} from \"../../responsiveness\";\nimport {\n  CompilerModule,\n  ExternalReference,\n  ExternalSchemaProp,\n  ExternalWithSchemaProp,\n  NoCodeComponentDefinition,\n} from \"../../types\";\nimport { configTraverse } from \"../configTraverse\";\nimport { createCompilationContext } from \"../createCompilationContext\";\nimport { normalize } from \"../normalize\";\nimport { normalizeInput } from \"../normalizeInput\";\nimport { isExternalSchemaProp } from \"../schema\";\n\nexport const findExternals: CompilerModule[\"findExternals\"] = (\n  input,\n  config,\n  contextParams\n) => {\n  const inputConfigComponent = normalizeInput(input);\n  const externalsWithSchemaProps: ExternalWithSchemaProp[] = [];\n  const compilationContext = createCompilationContext(\n    config,\n    contextParams,\n    input._component\n  );\n  const normalizedConfig = normalize(inputConfigComponent, compilationContext);\n\n  configTraverse(\n    normalizedConfig,\n    compilationContext,\n    ({ config, value, schemaProp }) => {\n      // This kinda tricky, because \"text\" is a special case. It can be either local or external.\n      // To prevent false positives, we need to check if it's local text reference and make sure that we won't\n      // treat \"text\" that's actually external as non external.\n      if (\n        (schemaProp.type === \"text\" && isLocalTextReference(value, \"text\")) ||\n        (schemaProp.type !== \"text\" &&\n          !isExternalSchemaProp(schemaProp, compilationContext.types))\n      ) {\n        return;\n      }\n\n      const hasInputComponentRootParams =\n        compilationContext.definitions.components.some(\n          (c: NoCodeComponentDefinition) =>\n            c.id === normalizedConfig._component && c.rootParams !== undefined\n        );\n\n      const configId =\n        normalizedConfig._id === config._id && hasInputComponentRootParams\n          ? \"$\"\n          : config._id;\n\n      if (isTrulyResponsiveValue(value)) {\n        responsiveValueEntries(value).forEach(([breakpoint, currentValue]) => {\n          if (currentValue === undefined) {\n            return;\n          }\n\n          externalsWithSchemaProps.push({\n            id: getExternalReferenceLocationKey(\n              configId,\n              schemaProp.prop,\n              breakpoint\n            ),\n            schemaProp: schemaProp as ExternalSchemaProp,\n            externalReference: currentValue as ExternalReference,\n          });\n        });\n      } else {\n        externalsWithSchemaProps.push({\n          id: getExternalReferenceLocationKey(configId, schemaProp.prop),\n          schemaProp: schemaProp as ExternalSchemaProp,\n          externalReference: value as ExternalReference,\n        });\n      }\n    }\n  );\n\n  return externalsWithSchemaProps;\n};\n"],"names":["findExternals","input","config","contextParams","inputConfigComponent","normalizeInput","externalsWithSchemaProps","compilationContext","createCompilationContext","_component","normalizedConfig","normalize","configTraverse","_ref","value","schemaProp","type","isLocalTextReference","isExternalSchemaProp","types","hasInputComponentRootParams","definitions","components","some","c","id","rootParams","undefined","configId","_id","isTrulyResponsiveValue","responsiveValueEntries","forEach","_ref2","breakpoint","currentValue","push","getExternalReferenceLocationKey","prop","externalReference"],"mappings":";;;;;;;;;;;;;;AAqBO,MAAMA,aAA8C,GAAGA,CAC5DC,KAAK,EACLC,MAAM,EACNC,aAAa,KACV;AACH,EAAA,MAAMC,oBAAoB,GAAGC,6BAAc,CAACJ,KAAK,CAAC,CAAA;EAClD,MAAMK,wBAAkD,GAAG,EAAE,CAAA;EAC7D,MAAMC,kBAAkB,GAAGC,iDAAwB,CACjDN,MAAM,EACNC,aAAa,EACbF,KAAK,CAACQ,UACR,CAAC,CAAA;AACD,EAAA,MAAMC,gBAAgB,GAAGC,mBAAS,CAACP,oBAAoB,EAAEG,kBAAkB,CAAC,CAAA;AAE5EK,EAAAA,6BAAc,CACZF,gBAAgB,EAChBH,kBAAkB,EAClBM,IAAA,IAAmC;IAAA,IAAlC;MAAEX,MAAM;MAAEY,KAAK;AAAEC,MAAAA,UAAAA;AAAW,KAAC,GAAAF,IAAA,CAAA;AAC5B;AACA;AACA;AACA,IAAA,IACGE,UAAU,CAACC,IAAI,KAAK,MAAM,IAAIC,mCAAoB,CAACH,KAAK,EAAE,MAAM,CAAC,IACjEC,UAAU,CAACC,IAAI,KAAK,MAAM,IACzB,CAACE,0BAAoB,CAACH,UAAU,EAAER,kBAAkB,CAACY,KAAK,CAAE,EAC9D;AACA,MAAA,OAAA;AACF,KAAA;IAEA,MAAMC,2BAA2B,GAC/Bb,kBAAkB,CAACc,WAAW,CAACC,UAAU,CAACC,IAAI,CAC3CC,CAA4B,IAC3BA,CAAC,CAACC,EAAE,KAAKf,gBAAgB,CAACD,UAAU,IAAIe,CAAC,CAACE,UAAU,KAAKC,SAC7D,CAAC,CAAA;AAEH,IAAA,MAAMC,QAAQ,GACZlB,gBAAgB,CAACmB,GAAG,KAAK3B,MAAM,CAAC2B,GAAG,IAAIT,2BAA2B,GAC9D,GAAG,GACHlB,MAAM,CAAC2B,GAAG,CAAA;AAEhB,IAAA,IAAIC,6CAAsB,CAAChB,KAAK,CAAC,EAAE;AACjCiB,MAAAA,6CAAsB,CAACjB,KAAK,CAAC,CAACkB,OAAO,CAACC,KAAA,IAAgC;AAAA,QAAA,IAA/B,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAAF,KAAA,CAAA;QAC/D,IAAIE,YAAY,KAAKR,SAAS,EAAE;AAC9B,UAAA,OAAA;AACF,SAAA;QAEArB,wBAAwB,CAAC8B,IAAI,CAAC;UAC5BX,EAAE,EAAEY,8CAA+B,CACjCT,QAAQ,EACRb,UAAU,CAACuB,IAAI,EACfJ,UACF,CAAC;AACDnB,UAAAA,UAAU,EAAEA,UAAgC;AAC5CwB,UAAAA,iBAAiB,EAAEJ,YAAAA;AACrB,SAAC,CAAC,CAAA;AACJ,OAAC,CAAC,CAAA;AACJ,KAAC,MAAM;MACL7B,wBAAwB,CAAC8B,IAAI,CAAC;QAC5BX,EAAE,EAAEY,8CAA+B,CAACT,QAAQ,EAAEb,UAAU,CAACuB,IAAI,CAAC;AAC9DvB,QAAAA,UAAU,EAAEA,UAAgC;AAC5CwB,QAAAA,iBAAiB,EAAEzB,KAAAA;AACrB,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GACF,CAAC,CAAA;AAED,EAAA,OAAOR,wBAAwB,CAAA;AACjC;;;;"}