{"version":3,"file":"createCompilationContext.cjs","sources":["../../../src/compiler/createCompilationContext.ts"],"sourcesContent":["import { responsiveValueMap } from \"../responsiveness\";\nimport { parseSpacing } from \"../spacingToPx\";\nimport {\n  Config,\n  ConfigDeviceRange,\n  ContextParams,\n  CustomTypeDefinition,\n  Devices,\n  NoCodeComponentDefinition,\n  ResponsiveValue,\n  Spacing,\n  SchemaProp,\n  TokenTypeDefinition,\n  ExternalTypeDefinition,\n  ThemeTokenValue,\n} from \"../types\";\nimport { richTextEditableComponent } from \"./builtins/$richText/$richText\";\nimport { richTextBlockElementEditableComponent } from \"./builtins/$richText/$richTextBlockElement/$richTextBlockElement\";\nimport { richTextLineElementEditableComponent } from \"./builtins/$richText/$richTextLineElement/$richTextLineElement\";\nimport { richTextPartEditableComponent } from \"./builtins/$richText/$richTextPart/$richTextPart\";\nimport { textEditableComponent } from \"./builtins/$text/$text\";\nimport { DEFAULT_DEVICES } from \"./devices\";\nimport { themeScalarValueToResponsiveValue } from \"./themeValueToResponsiveValue\";\nimport {\n  CompilationContextCustomTypeDefinition,\n  CompilationContextType,\n  Theme,\n} from \"./types\";\nimport { validateColor } from \"./validate-color\";\n\nfunction normalizeSpace(\n  space: ResponsiveValue<number | string>\n): ResponsiveValue<Spacing> {\n  return responsiveValueMap(space, (val) => {\n    if (typeof val === \"number\") {\n      return `${val}px`;\n    }\n\n    return val;\n  });\n}\n\nfunction prepareDevices(configDevices: Config[\"devices\"]): Devices {\n  const devices: Devices = []; // let's make devices copy\n  DEFAULT_DEVICES.forEach((defaultDevice) => {\n    devices.push({\n      ...defaultDevice,\n    });\n  });\n\n  if (configDevices) {\n    devices.forEach((device, index) => {\n      const configDevice: ConfigDeviceRange | undefined = (\n        configDevices as any\n      )[device.id];\n\n      if (configDevice) {\n        device.w = configDevice.w ?? device.w;\n        device.h = configDevice.h !== undefined ? configDevice.h : device.h;\n        device.hidden = configDevice.hidden ?? device.hidden;\n\n        if (configDevice.startsFrom && index > 0) {\n          const previousDevice = devices[index - 1];\n          previousDevice.breakpoint = configDevice.startsFrom;\n        }\n      }\n    });\n  }\n\n  return devices;\n}\n\nexport function createCompilationContext(\n  config: Config,\n  contextParams: ContextParams,\n  rootComponentId: string\n): CompilationContextType {\n  const devices = prepareDevices(config.devices);\n  const mainDevice = devices.find((x) => x.isMain);\n\n  if (!mainDevice) {\n    throw new Error(`Missing main device in devices config.`);\n  }\n\n  const { space, ...customTokens } = config.tokens ?? {};\n\n  const theme: Theme = {\n    space: {},\n  };\n\n  // TODO: allow for custom breakpoints!!! What happens with old ones when the new ones show up?\n\n  if (space) {\n    space.forEach((space) => {\n      let val = space.value;\n\n      // If value is \"vw\" and is not responsive then we should responsify it.\n      // Why? Because responsive token behaves differently from non-responsive in terms of auto.\n      // Responsive token automatically \"fills\" all the breakpoints.\n      // If someone does 10vw it is responsive in nature, it's NEVER a scalar.\n      if (typeof val === \"string\" && parseSpacing(val).unit === \"vw\") {\n        val = { $res: true, [mainDevice.id]: val };\n      }\n\n      theme.space[space.id] = {\n        value: normalizeSpace(themeScalarValueToResponsiveValue(val, devices)),\n        isDefault: space.isDefault ?? false,\n        label: space.label,\n      };\n    });\n  }\n\n  const types = {\n    ...createCustomTypes(config.types),\n    ...createBuiltinTypes(),\n  };\n\n  const allTypeIds = Object.keys(types);\n\n  Object.entries(customTokens).forEach(([id, tokens]) => {\n    const type = Object.values(types).find(\n      (type) => type.type === \"token\" && type.token === id\n    ) as TokenTypeDefinition;\n\n    if (!type) {\n      throw new Error(\n        `Can't find a matching type for a token \"${id}\" (found in Config.tokens)`\n      );\n    }\n\n    theme[id] = Object.fromEntries<ThemeTokenValue<any>>(\n      tokens.map((token) => {\n        if (type.validate) {\n          if (type.validate(token.value) !== true) {\n            throw new Error(\n              `The value for token \"${id}.${token.id}\" (${token.value}) is incorrect. The validation function for its corresponding type must return 'true'. `\n            );\n          }\n        }\n\n        return [\n          token.id,\n          {\n            label: token.label,\n            value: token.value,\n            isDefault: token.isDefault ?? false,\n          },\n        ];\n      })\n    );\n  });\n\n  const components: Array<NoCodeComponentDefinition<any, any>> = [\n    textEditableComponent,\n    richTextEditableComponent,\n    richTextBlockElementEditableComponent,\n    richTextLineElementEditableComponent,\n    richTextPartEditableComponent,\n    {\n      id: \"@easyblocks/missing-component\",\n      label: \"Missing component\",\n      schema: [\n        {\n          prop: \"error\",\n          type: \"string\",\n          visible: false,\n        },\n      ],\n    },\n  ];\n\n  const rootComponent = (config.components ?? []).find(\n    (component) => component.id === rootComponentId\n  );\n\n  if (!rootComponent) {\n    throw new Error(\n      `createCompilationContext: rootComponentId \"${rootComponentId}\" doesn't exist in config.components`\n    );\n  }\n\n  if (rootComponent.rootParams && rootComponent.rootParams.length > 0) {\n    ensureDocumentDataWidgetForExternalTypes(types);\n  }\n\n  const builtinTypes = [\n    \"string\",\n    \"number\",\n    \"boolean\",\n    \"select\",\n    \"radio-group\",\n    \"text\",\n    \"component\",\n    \"component-collection\",\n    \"component-collection-localised\",\n    \"position\",\n  ];\n\n  // Validate if components have correct types\n  if (config.components) {\n    config.components.forEach((component) => {\n      if (component.schema) {\n        component.schema.forEach((prop) => {\n          if (builtinTypes.includes(prop.type)) {\n            return;\n          }\n\n          if (!allTypeIds.includes(prop.type)) {\n            throw new Error(\n              `The field \"${component.id}.${prop.prop}\" has an unrecognized type: \"${prop.type}\". Custom types can be added in Config.types object`\n            );\n          }\n        });\n      }\n    });\n  }\n\n  if (config.components) {\n    components.push(\n      ...(config.components ?? []).map((component) => {\n        // For root component with rootParams we should create special param types and move params to schema props\n        if (component.id === rootComponent.id && rootComponent.rootParams) {\n          const paramSchemaProps: SchemaProp[] = [];\n\n          rootComponent.rootParams.forEach((param) => {\n            const typeName = \"param__\" + param.prop;\n\n            types[typeName] = {\n              type: \"external\",\n              widgets: param.widgets,\n            };\n\n            paramSchemaProps.push({\n              prop: param.prop,\n              label: param.label,\n              type: typeName,\n              group: \"Parameters\",\n              optional: true,\n            });\n          });\n\n          return {\n            ...component,\n            schema: [...paramSchemaProps, ...component.schema],\n          };\n        }\n\n        return component;\n      })\n    );\n  }\n\n  if (!config.locales) {\n    throw new Error(\n      `Required property config.locales doesn't exist in your config.`\n    );\n  }\n\n  if (\n    config.locales.find((l) => l.code === contextParams.locale) === undefined\n  ) {\n    throw new Error(\n      `You passed locale \"${contextParams.locale}\" which doesn't exist in your config.locales`\n    );\n  }\n\n  const compilationContext: CompilationContextType = {\n    devices,\n    theme,\n    definitions: {\n      components,\n    },\n    types,\n    mainBreakpointIndex: mainDevice.id,\n    contextParams,\n    locales: config.locales,\n    rootComponent,\n  };\n\n  return compilationContext;\n}\n\nfunction createCustomTypes(\n  types: Record<string, CustomTypeDefinition> | undefined\n): Record<string, CompilationContextCustomTypeDefinition> {\n  if (!types) {\n    return {};\n  }\n\n  return Object.fromEntries(\n    Object.entries(types).map(([id, definition]) => {\n      if (definition.type === \"external\") {\n        return [\n          id,\n          {\n            ...definition,\n            responsiveness: definition.responsiveness ?? \"never\",\n            widgets: definition.widgets ?? [],\n          },\n        ];\n      }\n\n      return [\n        id,\n        {\n          ...definition,\n          responsiveness: definition.responsiveness ?? \"never\",\n        },\n      ];\n    })\n  );\n}\n\nfunction createBuiltinTypes(): Record<\n  string,\n  CompilationContextCustomTypeDefinition\n> {\n  return {\n    space: {\n      type: \"token\",\n      responsiveness: \"always\",\n      token: \"space\",\n      defaultValue: { value: \"0px\" },\n      widget: { id: \"@easyblocks/space\", label: \"Space\" },\n      allowCustom: true,\n      validate(value) {\n        return typeof value === \"string\" && !!parseSpacing(value);\n      },\n    },\n    color: {\n      type: \"token\",\n      responsiveness: \"always\",\n      token: \"colors\",\n      defaultValue: { value: \"#000000\" },\n      widget: { id: \"@easyblocks/color\", label: \"Color\" },\n      allowCustom: true,\n      validate(value) {\n        return typeof value === \"string\" && validateColor(value);\n      },\n    },\n    font: {\n      type: \"token\",\n      token: \"fonts\",\n      responsiveness: \"always\",\n      defaultValue: { value: { fontFamily: \"sans-serif\", fontSize: \"16px\" } },\n    },\n    aspectRatio: {\n      type: \"token\",\n      token: \"aspectRatios\",\n      responsiveness: \"always\",\n      widget: { id: \"@easyblocks/aspectRatio\", label: \"Aspect ratio\" },\n      defaultValue: { value: \"1:1\" },\n      allowCustom: true,\n      validate(value) {\n        return (\n          typeof value === \"string\" &&\n          (!!value.match(/[0-9]+:[0-9]+/) || value === \"natural\")\n        );\n      },\n    },\n    boxShadow: {\n      type: \"token\",\n      token: \"boxShadows\",\n      responsiveness: \"always\",\n      defaultValue: {\n        value:\n          \"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\",\n      },\n    },\n    icon: {\n      type: \"token\",\n      responsiveness: \"never\",\n      token: \"icons\",\n      defaultValue: {\n        value: `<svg viewBox=\"0 -960 960 960\"><path fill=\"currentColor\" d=\"m480-120-58-52q-101-91-167-157T150-447.5Q111-500 95.5-544T80-634q0-94 63-157t157-63q52 0 99 22t81 62q34-40 81-62t99-22q94 0 157 63t63 157q0 46-15.5 90T810-447.5Q771-395 705-329T538-172l-58 52Zm0-108q96-86 158-147.5t98-107q36-45.5 50-81t14-70.5q0-60-40-100t-100-40q-47 0-87 26.5T518-680h-76q-15-41-55-67.5T300-774q-60 0-100 40t-40 100q0 35 14 70.5t50 81q36 45.5 98 107T480-228Zm0-273Z\"/></svg>`,\n      },\n      widget: { id: \"@easyblocks/icon\", label: \"Icon\" },\n      allowCustom: true,\n      validate(value) {\n        return typeof value === \"string\" && value.trim().startsWith(\"<svg\");\n      },\n    },\n    text: {\n      type: \"external\",\n      widgets: [],\n    },\n  };\n}\n\nfunction ensureDocumentDataWidgetForExternalTypes(\n  types: CompilationContextType[\"types\"]\n) {\n  const externalTypesNames = new Set([\n    ...Object.keys(types).filter((t) => types[t].type === \"external\"),\n  ]);\n\n  externalTypesNames.forEach((externalTypeName) => {\n    const externalTypeDefinition = types[\n      externalTypeName\n    ] as ExternalTypeDefinition;\n\n    if (!externalTypeDefinition.widgets) {\n      externalTypeDefinition.widgets = [];\n    }\n\n    const hasDocumentDataWidget = externalTypeDefinition.widgets.some(\n      (w) => w.id === \"@easyblocks/document-data\"\n    );\n\n    if (!hasDocumentDataWidget) {\n      externalTypeDefinition.widgets.push({\n        id: \"@easyblocks/document-data\",\n        label: \"Document data\",\n      });\n    }\n  });\n}\n"],"names":["normalizeSpace","space","responsiveValueMap","val","prepareDevices","configDevices","devices","DEFAULT_DEVICES","forEach","defaultDevice","push","device","index","configDevice","id","w","h","undefined","hidden","startsFrom","previousDevice","breakpoint","createCompilationContext","config","contextParams","rootComponentId","mainDevice","find","x","isMain","Error","customTokens","tokens","theme","value","parseSpacing","unit","$res","themeScalarValueToResponsiveValue","isDefault","label","types","createCustomTypes","createBuiltinTypes","allTypeIds","Object","keys","entries","_ref","type","values","token","fromEntries","map","validate","components","textEditableComponent","richTextEditableComponent","richTextBlockElementEditableComponent","richTextLineElementEditableComponent","richTextPartEditableComponent","schema","prop","visible","rootComponent","component","rootParams","length","ensureDocumentDataWidgetForExternalTypes","builtinTypes","includes","paramSchemaProps","param","typeName","widgets","group","optional","locales","l","code","locale","compilationContext","definitions","mainBreakpointIndex","_ref2","definition","responsiveness","defaultValue","widget","allowCustom","color","validateColor","font","fontFamily","fontSize","aspectRatio","match","boxShadow","icon","trim","startsWith","text","externalTypesNames","Set","filter","t","externalTypeName","externalTypeDefinition","hasDocumentDataWidget","some"],"mappings":"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"}