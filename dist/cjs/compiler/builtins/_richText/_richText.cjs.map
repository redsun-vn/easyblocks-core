{"version":3,"file":"_richText.cjs","sources":["../../../../../src/compiler/builtins/$richText/$richText.ts"],"sourcesContent":["import { dotNotationGet, nonNullable, range } from \"@/utils\";\nimport { Locale, getFallbackLocaleForLocale } from \"../../../locales\";\nimport {\n  NoCodeComponentDefinition,\n  ResponsiveValue,\n  TokenValue,\n} from \"../../../types\";\nimport { configFindAllPaths } from \"../../configFindAllPaths\";\nimport { EditableComponentToComponentConfig } from \"../../types\";\nimport { richTextStyles } from \"./$richText.styles\";\nimport { RichTextEditingFunction } from \"./$richText.types\";\nimport {\n  RichTextBlockElementComponentConfig,\n  richTextBlockElementEditableComponent,\n} from \"./$richTextBlockElement/$richTextBlockElement\";\nimport type { RichTextPartComponentConfig } from \"./$richTextPart/$richTextPart\";\n\ntype RichTextAccessibilityRole =\n  | \"div\"\n  | \"h1\"\n  | \"h2\"\n  | \"h3\"\n  | \"h4\"\n  | \"h5\"\n  | \"h6\";\n\nconst editing: RichTextEditingFunction = ({\n  values,\n  params,\n  editingInfo,\n  __SECRET_INTERNALS__,\n}) => {\n  if (!__SECRET_INTERNALS__) {\n    throw new Error(\"Missing __SECRET_INTERNALS__\");\n  }\n\n  const { pathPrefix, editorContext } = __SECRET_INTERNALS__;\n\n  const richTextConfig = dotNotationGet(editorContext.form.values, pathPrefix);\n\n  const richTextBlockPaths = configFindAllPaths(\n    richTextConfig,\n    editorContext,\n    (config): config is RichTextBlockElementComponentConfig => {\n      return config._component === \"@easyblocks/rich-text-block-element\";\n    }\n  );\n\n  const richTextBlockPath =\n    richTextBlockPaths.length > 0\n      ? `${pathPrefix}.${richTextBlockPaths[0]}`\n      : undefined;\n\n  const accessibilityRoleFieldIndex = editingInfo.fields.findIndex(\n    (field) => field.path === \"accessibilityRole\"\n  );\n\n  const fieldsBeforeAccessibilityRole = editingInfo.fields\n    .slice(0, accessibilityRoleFieldIndex)\n    .filter((field) => {\n      if (field.path === \"align\" && params.passedAlign !== undefined) {\n        return false;\n      }\n\n      return true;\n    });\n\n  const fieldsAfterAccessibilityRole = editingInfo.fields\n    .slice(accessibilityRoleFieldIndex)\n    .map((field) => {\n      if (!richTextBlockPath) {\n        return field;\n      }\n\n      const richTextBlockType = dotNotationGet(\n        editorContext.form.values,\n        `${richTextBlockPath}.type`\n      );\n\n      if (richTextBlockType !== \"paragraph\") {\n        if (field.path === \"accessibilityRole\") {\n          return {\n            ...field,\n            visible: false,\n          };\n        }\n\n        if (field.path === \"isListStyleAuto\") {\n          return {\n            ...field,\n            visible: true,\n          };\n        }\n\n        if (\n          !values.isListStyleAuto &&\n          (field.path === \"mainFont\" || field.path === \"mainColor\")\n        ) {\n          return {\n            ...field,\n            visible: true,\n          };\n        }\n      }\n      return field;\n    });\n\n  const richTextPartPaths = configFindAllPaths(\n    richTextConfig,\n    editorContext,\n    (config): config is RichTextPartComponentConfig => {\n      return config._component === \"@easyblocks/rich-text-part\";\n    }\n  );\n\n  let currentLocaleRichTextPartPaths = richTextPartPaths.filter(\n    isRichTextPartPathForLocale(editorContext.contextParams.locale)\n  );\n\n  if (currentLocaleRichTextPartPaths.length === 0) {\n    const fallbackLocale = getFallbackLocaleForLocale(\n      editorContext.contextParams.locale,\n      editorContext.locales\n    );\n\n    if (fallbackLocale) {\n      currentLocaleRichTextPartPaths = richTextPartPaths.filter(\n        isRichTextPartPathForLocale(fallbackLocale)\n      );\n    }\n  }\n\n  const richTextPartSources = currentLocaleRichTextPartPaths.map(\n    (path) => `${pathPrefix}.${path}`\n  );\n\n  return {\n    fields: [\n      ...fieldsBeforeAccessibilityRole,\n      richTextPartSources.length > 0\n        ? {\n          type: \"field\",\n          path: richTextPartSources.map((source) => `${source}.font`),\n        }\n        : null,\n      richTextPartSources.length > 0\n        ? {\n          type: \"field\",\n          path: richTextPartSources.map((source) => `${source}.color`),\n        }\n        : null,\n      richTextBlockPath\n        ? {\n          type: \"field\",\n          path: `${richTextBlockPath}.type`,\n          label: \"List style\",\n          group: \"Text\",\n        }\n        : null,\n      ...fieldsAfterAccessibilityRole,\n    ].filter(nonNullable()),\n  };\n};\n\nconst richTextEditableComponent: NoCodeComponentDefinition = {\n  id: \"@easyblocks/rich-text\",\n  label: \"Text\",\n  thumbnail:\n    \"https://shopstory.s3.eu-central-1.amazonaws.com/picker_icon_text.png\",\n  schema: [\n    {\n      prop: \"elements\",\n      type: \"component-collection-localised\",\n      accepts: [richTextBlockElementEditableComponent.id],\n      visible: false,\n    },\n    {\n      prop: \"align\",\n      label: \"Align\",\n      type: \"radio-group\",\n      responsive: true,\n      params: {\n        options: [\n          {\n            value: \"left\",\n            label: \"Left\",\n            icon: \"AlignLeft\",\n            hideLabel: true,\n          },\n          {\n            value: \"center\",\n            label: \"Center\",\n            icon: \"AlignCenter\",\n            hideLabel: true,\n          },\n          {\n            value: \"right\",\n            label: \"Right\",\n            icon: \"AlignRight\",\n            hideLabel: true,\n          },\n        ],\n      },\n      defaultValue: \"left\",\n      group: \"Layout\",\n      buildOnly: true,\n    },\n    {\n      prop: \"accessibilityRole\",\n      type: \"select\",\n      label: \"Role\",\n      params: {\n        options: [\n          { value: \"div\", label: \"Paragraph\" },\n          ...range(1, 6).map((index) => ({\n            value: `h${index}`,\n            label: `Heading ${index}`,\n          })),\n        ],\n      },\n      group: \"Accessibility and SEO\",\n    },\n    {\n      prop: \"isListStyleAuto\",\n      type: \"boolean\",\n      label: \"Auto list styles\",\n      defaultValue: true,\n      visible: false,\n      group: \"Text\",\n    },\n    {\n      prop: \"mainFont\",\n      type: \"font\",\n      label: \"Main font\",\n      visible: false,\n      group: \"Text\",\n    },\n    {\n      prop: \"mainColor\",\n      type: \"color\",\n      label: \"Main color\",\n      visible: false,\n      group: \"Text\",\n    },\n  ],\n  type: \"item\",\n  styles: richTextStyles,\n  editing,\n};\n\nfunction isRichTextPartPathForLocale(locale: string) {\n  return function innerIsLocalizedRichTextPart(richTextPartConfigPath: string) {\n    return richTextPartConfigPath.startsWith(`elements.${locale}`);\n  };\n}\n\ntype RichTextComponentConfig = EditableComponentToComponentConfig<\n  typeof richTextEditableComponent\n> & {\n  accessibilityRole: RichTextAccessibilityRole;\n  isListStyleAuto: boolean;\n  elements: Record<Locale[\"code\"], Array<RichTextBlockElementComponentConfig>>;\n  mainFont: ResponsiveValue<TokenValue<Record<string, any>>>;\n  mainColor: ResponsiveValue<TokenValue<ResponsiveValue<string>>>;\n};\n\nexport { richTextEditableComponent };\nexport type { RichTextAccessibilityRole, RichTextComponentConfig };\n"],"names":["editing","_ref","values","params","editingInfo","__SECRET_INTERNALS__","Error","pathPrefix","editorContext","richTextConfig","dotNotationGet","form","richTextBlockPaths","configFindAllPaths","config","_component","richTextBlockPath","length","undefined","accessibilityRoleFieldIndex","fields","findIndex","field","path","fieldsBeforeAccessibilityRole","slice","filter","passedAlign","fieldsAfterAccessibilityRole","map","richTextBlockType","visible","isListStyleAuto","richTextPartPaths","currentLocaleRichTextPartPaths","isRichTextPartPathForLocale","contextParams","locale","fallbackLocale","getFallbackLocaleForLocale","locales","richTextPartSources","type","source","label","group","nonNullable","richTextEditableComponent","id","thumbnail","schema","prop","accepts","richTextBlockElementEditableComponent","responsive","options","value","icon","hideLabel","defaultValue","buildOnly","range","index","styles","richTextStyles","innerIsLocalizedRichTextPart","richTextPartConfigPath","startsWith"],"mappings":"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"}