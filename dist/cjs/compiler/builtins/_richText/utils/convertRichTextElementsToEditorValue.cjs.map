{"version":3,"file":"convertRichTextElementsToEditorValue.cjs","sources":["../../../../../../src/compiler/builtins/$richText/utils/convertRichTextElementsToEditorValue.ts"],"sourcesContent":["import { uniqueId } from \"@/utils\";\r\nimport type { Text } from \"slate\";\r\nimport type { RichTextComponentConfig } from \"../$richText\";\r\nimport type { BlockElement } from \"../$richText.types\";\r\nimport type { RichTextBlockElementComponentConfig } from \"../$richTextBlockElement/$richTextBlockElement\";\r\nimport type { RichTextPartComponentConfig } from \"../$richTextPart/$richTextPart\";\r\n\r\nfunction convertRichTextElementsToEditorValue(\r\n  richTextElements: RichTextComponentConfig[\"elements\"][string] | undefined\r\n): Array<BlockElement> {\r\n  if (!richTextElements || richTextElements.length === 0) {\r\n    return getPlaceholderRichTextElements();\r\n  }\r\n\r\n  return richTextElements.map((richTextBlockElementComponentConfig) => {\r\n    return convertRichTextBlockElementComponentConfigToEditorElement(\r\n      richTextBlockElementComponentConfig\r\n    );\r\n  });\r\n}\r\n\r\nexport { convertRichTextElementsToEditorValue };\r\n\r\nfunction convertRichTextPartComponentConfigToEditorText(\r\n  richTextPartComponentConfig: RichTextPartComponentConfig\r\n): Text {\r\n  return {\r\n    color: richTextPartComponentConfig.color,\r\n    font: richTextPartComponentConfig.font,\r\n    id: richTextPartComponentConfig._id,\r\n    text: richTextPartComponentConfig.value,\r\n    TextWrapper: richTextPartComponentConfig.TextWrapper,\r\n  };\r\n}\r\n\r\nfunction convertRichTextBlockElementComponentConfigToEditorElement(\r\n  blockElementComponentConfig: RichTextBlockElementComponentConfig\r\n): BlockElement {\r\n  if (\r\n    blockElementComponentConfig.type === \"bulleted-list\" ||\r\n    blockElementComponentConfig.type === \"numbered-list\"\r\n  ) {\r\n    return {\r\n      id: blockElementComponentConfig._id,\r\n      type: blockElementComponentConfig.type,\r\n      children: blockElementComponentConfig.elements.map(\r\n        (lineElementComponentConfig) => {\r\n          return {\r\n            type: \"list-item\",\r\n            id: lineElementComponentConfig._id,\r\n            children: lineElementComponentConfig.elements.map(\r\n              (childComponentConfig) => {\r\n                return convertRichTextPartComponentConfigToEditorText(\r\n                  childComponentConfig\r\n                );\r\n              }\r\n            ),\r\n          };\r\n        }\r\n      ),\r\n    };\r\n  }\r\n\r\n  return {\r\n    id: blockElementComponentConfig._id,\r\n    type: blockElementComponentConfig.type,\r\n    children: blockElementComponentConfig.elements.map(\r\n      (lineElementComponentConfig) => {\r\n        return {\r\n          type: \"text-line\",\r\n          id: lineElementComponentConfig._id,\r\n          children: lineElementComponentConfig.elements.map(\r\n            (childComponentConfig) => {\r\n              return convertRichTextPartComponentConfigToEditorText(\r\n                childComponentConfig\r\n              );\r\n            }\r\n          ),\r\n        };\r\n      }\r\n    ),\r\n  };\r\n}\r\n\r\nfunction getPlaceholderRichTextElements(): Array<BlockElement> {\r\n  return [\r\n    {\r\n      id: uniqueId(),\r\n      type: \"paragraph\",\r\n      children: [\r\n        {\r\n          id: uniqueId(),\r\n          type: \"text-line\",\r\n          children: [\r\n            {\r\n              id: uniqueId(),\r\n              color: {\r\n                tokenId: \"black\",\r\n                value: \"black\",\r\n                widgetId: \"@easyblocks/color\",\r\n              },\r\n              font: {\r\n                tokenId: \"$body\",\r\n                value: \"\",\r\n              },\r\n              text: \"\",\r\n              TextWrapper: [],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n}\r\n"],"names":["convertRichTextElementsToEditorValue","richTextElements","length","getPlaceholderRichTextElements","map","richTextBlockElementComponentConfig","convertRichTextBlockElementComponentConfigToEditorElement","convertRichTextPartComponentConfigToEditorText","richTextPartComponentConfig","color","font","id","_id","text","value","TextWrapper","blockElementComponentConfig","type","children","elements","lineElementComponentConfig","childComponentConfig","uniqueId","tokenId","widgetId"],"mappings":";;;;;;;AAOA,SAASA,oCAAoCA,CAC3CC,gBAAyE,EACpD;EACrB,IAAI,CAACA,gBAAgB,IAAIA,gBAAgB,CAACC,MAAM,KAAK,CAAC,EAAE;IACtD,OAAOC,8BAA8B,EAAE,CAAA;AACzC,GAAA;AAEA,EAAA,OAAOF,gBAAgB,CAACG,GAAG,CAAEC,mCAAmC,IAAK;IACnE,OAAOC,yDAAyD,CAC9DD,mCACF,CAAC,CAAA;AACH,GAAC,CAAC,CAAA;AACJ,CAAA;AAIA,SAASE,8CAA8CA,CACrDC,2BAAwD,EAClD;EACN,OAAO;IACLC,KAAK,EAAED,2BAA2B,CAACC,KAAK;IACxCC,IAAI,EAAEF,2BAA2B,CAACE,IAAI;IACtCC,EAAE,EAAEH,2BAA2B,CAACI,GAAG;IACnCC,IAAI,EAAEL,2BAA2B,CAACM,KAAK;IACvCC,WAAW,EAAEP,2BAA2B,CAACO,WAAAA;GAC1C,CAAA;AACH,CAAA;AAEA,SAAST,yDAAyDA,CAChEU,2BAAgE,EAClD;EACd,IACEA,2BAA2B,CAACC,IAAI,KAAK,eAAe,IACpDD,2BAA2B,CAACC,IAAI,KAAK,eAAe,EACpD;IACA,OAAO;MACLN,EAAE,EAAEK,2BAA2B,CAACJ,GAAG;MACnCK,IAAI,EAAED,2BAA2B,CAACC,IAAI;MACtCC,QAAQ,EAAEF,2BAA2B,CAACG,QAAQ,CAACf,GAAG,CAC/CgB,0BAA0B,IAAK;QAC9B,OAAO;AACLH,UAAAA,IAAI,EAAE,WAAW;UACjBN,EAAE,EAAES,0BAA0B,CAACR,GAAG;UAClCM,QAAQ,EAAEE,0BAA0B,CAACD,QAAQ,CAACf,GAAG,CAC9CiB,oBAAoB,IAAK;YACxB,OAAOd,8CAA8C,CACnDc,oBACF,CAAC,CAAA;WAEL,CAAA;SACD,CAAA;OAEL,CAAA;KACD,CAAA;AACH,GAAA;EAEA,OAAO;IACLV,EAAE,EAAEK,2BAA2B,CAACJ,GAAG;IACnCK,IAAI,EAAED,2BAA2B,CAACC,IAAI;IACtCC,QAAQ,EAAEF,2BAA2B,CAACG,QAAQ,CAACf,GAAG,CAC/CgB,0BAA0B,IAAK;MAC9B,OAAO;AACLH,QAAAA,IAAI,EAAE,WAAW;QACjBN,EAAE,EAAES,0BAA0B,CAACR,GAAG;QAClCM,QAAQ,EAAEE,0BAA0B,CAACD,QAAQ,CAACf,GAAG,CAC9CiB,oBAAoB,IAAK;UACxB,OAAOd,8CAA8C,CACnDc,oBACF,CAAC,CAAA;SAEL,CAAA;OACD,CAAA;KAEL,CAAA;GACD,CAAA;AACH,CAAA;AAEA,SAASlB,8BAA8BA,GAAwB;AAC7D,EAAA,OAAO,CACL;IACEQ,EAAE,EAAEW,iBAAQ,EAAE;AACdL,IAAAA,IAAI,EAAE,WAAW;AACjBC,IAAAA,QAAQ,EAAE,CACR;MACEP,EAAE,EAAEW,iBAAQ,EAAE;AACdL,MAAAA,IAAI,EAAE,WAAW;AACjBC,MAAAA,QAAQ,EAAE,CACR;QACEP,EAAE,EAAEW,iBAAQ,EAAE;AACdb,QAAAA,KAAK,EAAE;AACLc,UAAAA,OAAO,EAAE,OAAO;AAChBT,UAAAA,KAAK,EAAE,OAAO;AACdU,UAAAA,QAAQ,EAAE,mBAAA;SACX;AACDd,QAAAA,IAAI,EAAE;AACJa,UAAAA,OAAO,EAAE,OAAO;AAChBT,UAAAA,KAAK,EAAE,EAAA;SACR;AACDD,QAAAA,IAAI,EAAE,EAAE;AACRE,QAAAA,WAAW,EAAE,EAAA;OACd,CAAA;KAEJ,CAAA;AAEL,GAAC,CACF,CAAA;AACH;;;;"}