{"version":3,"file":"builders.cjs","sources":["../../../../../src/compiler/builtins/$richText/builders.ts"],"sourcesContent":["import { uniqueId } from \"@/utils\";\nimport { SetOptional } from \"type-fest\";\nimport type { TokenValue } from \"../../../types\";\nimport type { RichTextComponentConfig } from \"./$richText\";\nimport type {\n  RichTextBlockElementComponentConfig,\n  RichTextBlockElementType,\n} from \"./$richTextBlockElement/$richTextBlockElement\";\nimport type { RichTextLineElementComponentConfig } from \"./$richTextLineElement/$richTextLineElement\";\nimport type { RichTextPartComponentConfig } from \"./$richTextPart/$richTextPart\";\n\ninterface Identity {\n  id: string;\n}\n\nfunction buildRichTextNoCodeEntry(options?: {\n  text?: string;\n  font?: string;\n  color?: string;\n  accessibilityRole?: string;\n  locale?: string;\n}) {\n  const { accessibilityRole, font, color, text, locale = \"en\" } = options ?? {};\n\n  const colorTokenValue: TokenValue = {\n    value: \"#000000\",\n    widgetId: \"@easyblocks/color\",\n  };\n\n  if (color) {\n    colorTokenValue.tokenId = color;\n  }\n\n  const fontTokenValue: TokenValue = {\n    value: {\n      fontFamily: \"sans-serif\",\n      fontSize: \"16px\",\n    },\n  };\n\n  if (font) {\n    fontTokenValue.tokenId = font;\n  }\n\n  return {\n    _id: uniqueId(),\n    _component: \"@easyblocks/rich-text\",\n    accessibilityRole: accessibilityRole ?? \"div\",\n    elements: {\n      [locale ?? \"en\"]: [\n        buildRichTextBlockElementComponentConfig(\"paragraph\", [\n          buildRichTextLineElementComponentConfig({\n            elements: [\n              buildRichTextPartComponentConfig({\n                color: colorTokenValue,\n                font: fontTokenValue,\n                value: text ?? \"Lorem ipsum\",\n                TextWrapper: [],\n              }),\n            ],\n          }),\n        ]),\n      ],\n    },\n    isListStyleAuto: true,\n    mainColor: colorTokenValue,\n    mainFont: fontTokenValue,\n  };\n}\n\nfunction buildRichTextComponentConfig({\n  accessibilityRole,\n  locale,\n  elements,\n  isListStyleAuto,\n  mainColor,\n  mainFont,\n}: Pick<RichTextComponentConfig, \"mainColor\" | \"mainFont\"> &\n  Partial<\n    Pick<RichTextComponentConfig, \"accessibilityRole\" | \"isListStyleAuto\">\n  > & {\n    locale: string;\n    elements: RichTextComponentConfig[\"elements\"][string];\n  }): RichTextComponentConfig {\n  return {\n    _id: uniqueId(),\n    _component: \"@easyblocks/rich-text\",\n    accessibilityRole: accessibilityRole ?? \"div\",\n    elements: {\n      [locale]: elements,\n    },\n    isListStyleAuto: isListStyleAuto ?? true,\n    mainColor,\n    mainFont,\n  };\n}\n\nfunction buildRichTextBlockElementComponentConfig(\n  type: RichTextBlockElementType,\n  elements: RichTextBlockElementComponentConfig[\"elements\"]\n): RichTextBlockElementComponentConfig {\n  return {\n    _component: \"@easyblocks/rich-text-block-element\",\n    elements,\n    type,\n    _id: uniqueId(),\n  };\n}\n\nfunction buildRichTextParagraphBlockElementComponentConfig({\n  elements,\n}: Pick<\n  RichTextBlockElementComponentConfig,\n  \"elements\"\n>): RichTextBlockElementComponentConfig {\n  return {\n    _component: \"@easyblocks/rich-text-block-element\",\n    elements,\n    type: \"paragraph\",\n    _id: uniqueId(),\n  };\n}\n\nfunction buildRichTextBulletedListBlockElementComponentConfig({\n  elements,\n}: Pick<\n  RichTextBlockElementComponentConfig,\n  \"elements\"\n>): RichTextBlockElementComponentConfig {\n  return {\n    _component: \"@easyblocks/rich-text-block-element\",\n    elements,\n    type: \"bulleted-list\",\n    _id: uniqueId(),\n  };\n}\n\nfunction buildRichTextLineElementComponentConfig({\n  elements,\n}: Pick<\n  RichTextLineElementComponentConfig,\n  \"elements\"\n>): RichTextLineElementComponentConfig {\n  return {\n    _component: \"@easyblocks/rich-text-line-element\",\n    elements,\n    _id: uniqueId(),\n  };\n}\n\nfunction buildRichTextPartComponentConfig({\n  color,\n  font,\n  value,\n  id,\n  TextWrapper,\n}: SetOptional<\n  Omit<RichTextPartComponentConfig, \"_id\" | \"_component\"> & Partial<Identity>,\n  \"TextWrapper\"\n>): RichTextPartComponentConfig {\n  return {\n    _id: id ?? uniqueId(),\n    _component: \"@easyblocks/rich-text-part\",\n    color,\n    font,\n    value,\n    TextWrapper: TextWrapper ?? [],\n  };\n}\n\nexport {\n  buildRichTextBlockElementComponentConfig,\n  buildRichTextBulletedListBlockElementComponentConfig,\n  buildRichTextComponentConfig,\n  buildRichTextLineElementComponentConfig,\n  buildRichTextNoCodeEntry,\n  buildRichTextParagraphBlockElementComponentConfig,\n  buildRichTextPartComponentConfig,\n};\n"],"names":["buildRichTextNoCodeEntry","options","accessibilityRole","font","color","text","locale","colorTokenValue","value","widgetId","tokenId","fontTokenValue","fontFamily","fontSize","_id","uniqueId","_component","elements","buildRichTextBlockElementComponentConfig","buildRichTextLineElementComponentConfig","buildRichTextPartComponentConfig","TextWrapper","isListStyleAuto","mainColor","mainFont","buildRichTextComponentConfig","_ref","type","buildRichTextParagraphBlockElementComponentConfig","_ref2","buildRichTextBulletedListBlockElementComponentConfig","_ref3","_ref4","_ref5","id"],"mappings":"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"}