{"version":3,"file":"_richTextPart.client.cjs","sources":["../../../../../../src/compiler/builtins/$richText/$richTextPart/$richTextPart.client.tsx"],"sourcesContent":["import type { ReactElement, ReactNode } from \"react\";\nimport React from \"react\";\n\ntype RichTextPartProps = {\n  TextWrapper: React.ReactElement<{ trigger: React.ReactElement }> | undefined;\n  // ReactElement when editing, string when not\n  value: string | ReactElement;\n  Text: React.ReactElement<{ children: ReactNode; style: Record<string, any> }>;\n};\n\nexport function RichTextPartClient(props: RichTextPartProps) {\n  const { value, Text, TextWrapper } = props;\n  const textValue = value || \"\\uFEFF\";\n\n  if (TextWrapper) {\n    return (\n      <Text.type {...Text.props}>\n        <TextWrapper.type {...TextWrapper.props}>{textValue}</TextWrapper.type>\n      </Text.type>\n    );\n  }\n\n  return <Text.type {...Text.props}>{textValue}</Text.type>;\n}\n"],"names":["RichTextPartClient","props","value","Text","TextWrapper","textValue","React","createElement","type"],"mappings":";;;;;;;;;;;AAUO,SAASA,kBAAkBA,CAACC,KAAwB,EAAE;EAC3D,MAAM;IAAEC,KAAK;IAAEC,IAAI;AAAEC,IAAAA,WAAAA;AAAY,GAAC,GAAGH,KAAK,CAAA;AAC1C,EAAA,MAAMI,SAAS,GAAGH,KAAK,IAAI,QAAQ,CAAA;AAEnC,EAAA,IAAIE,WAAW,EAAE;IACf,oBACEE,yBAAA,CAAAC,aAAA,CAACJ,IAAI,CAACK,IAAI,EAAKL,IAAI,CAACF,KAAK,eACvBK,yBAAA,CAAAC,aAAA,CAACH,WAAW,CAACI,IAAI,EAAKJ,WAAW,CAACH,KAAK,EAAGI,SAA4B,CAC7D,CAAC,CAAA;AAEhB,GAAA;AAEA,EAAA,oBAAOC,yBAAA,CAAAC,aAAA,CAACJ,IAAI,CAACK,IAAI,EAAKL,IAAI,CAACF,KAAK,EAAGI,SAAqB,CAAC,CAAA;AAC3D;;;;"}