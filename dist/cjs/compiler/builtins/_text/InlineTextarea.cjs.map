{"version":3,"file":"InlineTextarea.cjs","sources":["../../../../../src/compiler/builtins/$text/InlineTextarea.tsx"],"sourcesContent":["import { dotNotationGet } from \"@/utils\";\nimport React, { ElementRef, useRef, useState } from \"react\";\nimport { flushSync } from \"react-dom\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useTextValue } from \"../useTextValue\";\n\ninterface InlineTextProps {\n  path: string;\n  placeholder?: string;\n  stitches: any;\n}\n\nexport function InlineTextarea({\n  path,\n  placeholder,\n  stitches,\n}: InlineTextProps) {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const textAreaRef = useRef<ElementRef<\"textarea\">>(null);\n\n  const {\n    form,\n    contextParams: { locale },\n    locales,\n  } = (window.parent as any).editorWindowAPI.editorContext;\n  const valuePath = `${path}.value`;\n  const value = dotNotationGet(form.values, valuePath);\n\n  const inputProps = useTextValue(\n    value,\n    (val: string | null) => {\n      form.change(valuePath, val);\n    },\n    locale,\n    locales,\n    placeholder\n  );\n\n  const css = stitches.css({\n    width: \"100%\",\n    wordWrap: \"break-word\",\n    display: \"block\",\n    fontSize: \"inherit\",\n    fontFamily: \"inherit\",\n    fontWeight: \"inherit\",\n    boxSizing: \"border-box\",\n    color: \"inherit\",\n    letterSpacing: \"inherit\",\n    lineHeight: \"inherit\",\n    margin: \"0 auto\",\n    maxWidth: \"inherit\",\n    textTransform: \"inherit\",\n    backgroundColor: \"inherit\",\n    textAlign: \"inherit\",\n    outline: \"none\",\n    resize: \"none\",\n    border: \"none\",\n    overflow: \"visible\",\n    position: \"relative\",\n    padding: 0,\n    \"-ms-overflow-style\": \"none\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n    pointerEvents: isEnabled ? \"auto\" : \"none\",\n  })();\n\n  return (\n    <div\n      onMouseDown={(event) => {\n        if (event.detail === 2) {\n          event.preventDefault();\n\n          flushSync(() => {\n            setIsEnabled(true);\n          });\n\n          textAreaRef.current?.select();\n        }\n      }}\n    >\n      <TextareaAutosize\n        className={css}\n        rows={1}\n        {...inputProps}\n        ref={textAreaRef}\n        onMouseDown={(event) => {\n          if (isEnabled) {\n            event.stopPropagation();\n            return;\n          }\n        }}\n        onBlur={() => {\n          setIsEnabled(false);\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["InlineTextarea","_ref","path","placeholder","stitches","isEnabled","setIsEnabled","useState","textAreaRef","useRef","form","contextParams","locale","locales","window","parent","editorWindowAPI","editorContext","valuePath","value","dotNotationGet","values","inputProps","useTextValue","val","change","css","width","wordWrap","display","fontSize","fontFamily","fontWeight","boxSizing","color","letterSpacing","lineHeight","margin","maxWidth","textTransform","backgroundColor","textAlign","outline","resize","border","overflow","position","padding","pointerEvents","React","createElement","onMouseDown","event","detail","preventDefault","flushSync","current","select","TextareaAutosize","_extends","className","rows","ref","stopPropagation","onBlur"],"mappings":"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"}