{"version":3,"file":"mergeCompilationMeta.cjs","sources":["../../../src/compiler/mergeCompilationMeta.ts"],"sourcesContent":["import { CompilationMetadata, SerializedComponentDefinitions } from \"../types\";\n\nexport function mergeCompilationMeta(\n  meta1: CompilationMetadata | undefined,\n  meta2: CompilationMetadata | undefined\n): CompilationMetadata {\n  if (!meta2 && !meta1) {\n    throw new Error(\"Can't merge empty metadata\");\n  }\n\n  if (!meta2) {\n    return meta1!;\n  }\n\n  if (!meta1) {\n    return meta2;\n  }\n\n  return {\n    vars: {\n      ...meta1.vars,\n      ...meta2.vars,\n      definitions: {\n        actions: mergeDefinitions(\n          meta1.vars.definitions?.actions ?? [],\n          meta2.vars.definitions?.actions ?? []\n        ),\n        components: mergeDefinitions(\n          meta1.vars.definitions?.components ?? [],\n          meta2.vars.definitions?.components ?? []\n        ),\n        textModifiers: mergeDefinitions(\n          meta1.vars.definitions?.textModifiers ?? [],\n          meta2.vars.definitions?.textModifiers ?? []\n        ),\n        links: mergeDefinitions(\n          meta1.vars.definitions?.links ?? [],\n          meta2.vars.definitions?.links ?? []\n        ),\n      },\n    },\n  };\n}\n\nfunction mergeDefinitions<\n  Definitions extends SerializedComponentDefinitions[keyof SerializedComponentDefinitions]\n>(definitions1: Definitions, definitions2: Definitions) {\n  const mergeDefinitions = [...definitions1];\n\n  definitions2.forEach((definition) => {\n    const isDuplicate = definitions1.some((d) => d.id === definition.id);\n\n    if (isDuplicate) {\n      return;\n    }\n\n    mergeDefinitions.push(definition);\n  });\n\n  return mergeDefinitions;\n}\n"],"names":["mergeCompilationMeta","meta1","meta2","Error","vars","definitions","actions","mergeDefinitions","components","textModifiers","links","definitions1","definitions2","forEach","definition","isDuplicate","some","d","id","push"],"mappings":";;;;;AAEO,SAASA,oBAAoBA,CAClCC,KAAsC,EACtCC,KAAsC,EACjB;AACrB,EAAA,IAAI,CAACA,KAAK,IAAI,CAACD,KAAK,EAAE;AACpB,IAAA,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC,CAAA;AAC/C,GAAA;EAEA,IAAI,CAACD,KAAK,EAAE;AACV,IAAA,OAAOD,KAAK,CAAA;AACd,GAAA;EAEA,IAAI,CAACA,KAAK,EAAE;AACV,IAAA,OAAOC,KAAK,CAAA;AACd,GAAA;EAEA,OAAO;AACLE,IAAAA,IAAI,EAAE;MACJ,GAAGH,KAAK,CAACG,IAAI;MACb,GAAGF,KAAK,CAACE,IAAI;AACbC,MAAAA,WAAW,EAAE;QACXC,OAAO,EAAEC,gBAAgB,CACvBN,KAAK,CAACG,IAAI,CAACC,WAAW,EAAEC,OAAO,IAAI,EAAE,EACrCJ,KAAK,CAACE,IAAI,CAACC,WAAW,EAAEC,OAAO,IAAI,EACrC,CAAC;QACDE,UAAU,EAAED,gBAAgB,CAC1BN,KAAK,CAACG,IAAI,CAACC,WAAW,EAAEG,UAAU,IAAI,EAAE,EACxCN,KAAK,CAACE,IAAI,CAACC,WAAW,EAAEG,UAAU,IAAI,EACxC,CAAC;QACDC,aAAa,EAAEF,gBAAgB,CAC7BN,KAAK,CAACG,IAAI,CAACC,WAAW,EAAEI,aAAa,IAAI,EAAE,EAC3CP,KAAK,CAACE,IAAI,CAACC,WAAW,EAAEI,aAAa,IAAI,EAC3C,CAAC;QACDC,KAAK,EAAEH,gBAAgB,CACrBN,KAAK,CAACG,IAAI,CAACC,WAAW,EAAEK,KAAK,IAAI,EAAE,EACnCR,KAAK,CAACE,IAAI,CAACC,WAAW,EAAEK,KAAK,IAAI,EACnC,CAAA;AACF,OAAA;AACF,KAAA;GACD,CAAA;AACH,CAAA;AAEA,SAASH,gBAAgBA,CAEvBI,YAAyB,EAAEC,YAAyB,EAAE;AACtD,EAAA,MAAML,gBAAgB,GAAG,CAAC,GAAGI,YAAY,CAAC,CAAA;AAE1CC,EAAAA,YAAY,CAACC,OAAO,CAAEC,UAAU,IAAK;AACnC,IAAA,MAAMC,WAAW,GAAGJ,YAAY,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,UAAU,CAACI,EAAE,CAAC,CAAA;AAEpE,IAAA,IAAIH,WAAW,EAAE;AACf,MAAA,OAAA;AACF,KAAA;AAEAR,IAAAA,gBAAgB,CAACY,IAAI,CAACL,UAAU,CAAC,CAAA;AACnC,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOP,gBAAgB,CAAA;AACzB;;;;"}