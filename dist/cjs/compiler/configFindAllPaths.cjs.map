{"version":3,"file":"configFindAllPaths.cjs","sources":["../../../src/compiler/configFindAllPaths.ts"],"sourcesContent":["import { NoCodeComponentEntry } from \"../types\";\nimport { traverseComponents } from \"./traverseComponents\";\nimport { CompilationContextType } from \"./types\";\n\nfunction configFindAllPaths<T extends NoCodeComponentEntry>(\n  config: NoCodeComponentEntry,\n  editorContext: CompilationContextType,\n  predicate: (\n    config: NoCodeComponentEntry,\n    editorContext: CompilationContextType\n  ) => config is T\n): Array<string> {\n  const matchedConfigPaths: Array<string> = [];\n\n  traverseComponents(config, editorContext, ({ path, componentConfig }) => {\n    if (predicate(componentConfig, editorContext)) {\n      matchedConfigPaths.push(path);\n    }\n  });\n\n  return matchedConfigPaths;\n}\n\nexport { configFindAllPaths };\n"],"names":["configFindAllPaths","config","editorContext","predicate","matchedConfigPaths","traverseComponents","_ref","path","componentConfig","push"],"mappings":";;;;;;;AAIA,SAASA,kBAAkBA,CACzBC,MAA4B,EAC5BC,aAAqC,EACrCC,SAGgB,EACD;EACf,MAAMC,kBAAiC,GAAG,EAAE,CAAA;AAE5CC,EAAAA,qCAAkB,CAACJ,MAAM,EAAEC,aAAa,EAAEI,IAAA,IAA+B;IAAA,IAA9B;MAAEC,IAAI;AAAEC,MAAAA,eAAAA;AAAgB,KAAC,GAAAF,IAAA,CAAA;AAClE,IAAA,IAAIH,SAAS,CAACK,eAAe,EAAEN,aAAa,CAAC,EAAE;AAC7CE,MAAAA,kBAAkB,CAACK,IAAI,CAACF,IAAI,CAAC,CAAA;AAC/B,KAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOH,kBAAkB,CAAA;AAC3B;;;;"}