{"version":3,"file":"index.cjs","sources":["../../src/box.ts","../../src/responsiveness/responsiveValueSet.ts","../../src/compiler/mergeCompilationMeta.ts","../../src/compiler/validation.ts","../../src/compiler/normalizeInput.ts","../../src/compiler/public/compile.ts","../../src/compiler/public/findResources.ts","../../src/buildEntry.ts","../../src/buildDocument.ts","../../src/compiler/builtins/$richText/$richText.client.tsx","../../src/compiler/builtins/$richText/$richTextBlockElement/$richTextBlockElement.client.tsx","../../src/compiler/builtins/$richText/$richTextLineElement/$richTextLineElement.client.tsx","../../src/compiler/builtins/$text/$text.client.tsx","../../src/components/MissingComponent.tsx","../../src/components/Easyblocks.tsx","../../src/isNoCodeComponentOfType.ts"],"sourcesContent":["const pxKeys: { [key: string]: true } = {\r\n  margin: true,\r\n  marginTop: true,\r\n  marginBottom: true,\r\n  marginLeft: true,\r\n  marginRight: true,\r\n  m: true,\r\n  mt: true,\r\n  mb: true,\r\n  ml: true,\r\n  mr: true,\r\n  mx: true,\r\n  my: true,\r\n\r\n  padding: true,\r\n  paddingTop: true,\r\n  paddingBottom: true,\r\n  paddingLeft: true,\r\n  paddingRight: true,\r\n  p: true,\r\n  pt: true,\r\n  pb: true,\r\n  pl: true,\r\n  pr: true,\r\n  px: true,\r\n  py: true,\r\n\r\n  top: true,\r\n  bottom: true,\r\n  left: true,\r\n  right: true,\r\n\r\n  flexBasis: true,\r\n  gridColumnGap: true,\r\n  gridRowGap: true,\r\n};\r\n\r\nfunction numericToPx(input: Record<string, any>) {\r\n  const ret: Record<string, any> = {};\r\n\r\n  for (const key in input) {\r\n    if (pxKeys[key] && typeof input[key] === \"number\") {\r\n      ret[key] = input[key] + \"px\";\r\n    } else {\r\n      ret[key] = input[key];\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nexport const box = (styles: Record<string, any>, tag?: string) => {\r\n  const ret = numericToPx(styles);\r\n  ret.__isBox = true;\r\n\r\n  if (tag) {\r\n    ret.__as = tag;\r\n  }\r\n  return ret;\r\n};\r\n","import { Devices, ResponsiveValue, TrulyResponsiveValue } from \"../types\";\r\nimport { isTrulyResponsiveValue } from \"./isTrulyResponsiveValue\";\r\n\r\nexport function responsiveValueSet<T>(\r\n  responsiveValue: ResponsiveValue<T>,\r\n  deviceId: string,\r\n  value: T,\r\n  devices: Devices\r\n) {\r\n  let trulyResponsive: TrulyResponsiveValue<T>;\r\n\r\n  if (isTrulyResponsiveValue(responsiveValue)) {\r\n    trulyResponsive = { ...responsiveValue };\r\n  } else {\r\n    trulyResponsive = {\r\n      $res: true,\r\n    };\r\n    devices.forEach((device) => {\r\n      trulyResponsive[device.id] = responsiveValue;\r\n    });\r\n  }\r\n\r\n  return { ...trulyResponsive, [deviceId]: value };\r\n}\r\n","import { CompilationMetadata, SerializedComponentDefinitions } from \"../types\";\r\n\r\nexport function mergeCompilationMeta(\r\n  meta1: CompilationMetadata | undefined,\r\n  meta2: CompilationMetadata | undefined\r\n): CompilationMetadata {\r\n  if (!meta2 && !meta1) {\r\n    throw new Error(\"Can't merge empty metadata\");\r\n  }\r\n\r\n  if (!meta2) {\r\n    return meta1!;\r\n  }\r\n\r\n  if (!meta1) {\r\n    return meta2;\r\n  }\r\n\r\n  return {\r\n    vars: {\r\n      ...meta1.vars,\r\n      ...meta2.vars,\r\n      definitions: {\r\n        actions: mergeDefinitions(\r\n          meta1.vars.definitions?.actions ?? [],\r\n          meta2.vars.definitions?.actions ?? []\r\n        ),\r\n        components: mergeDefinitions(\r\n          meta1.vars.definitions?.components ?? [],\r\n          meta2.vars.definitions?.components ?? []\r\n        ),\r\n        textModifiers: mergeDefinitions(\r\n          meta1.vars.definitions?.textModifiers ?? [],\r\n          meta2.vars.definitions?.textModifiers ?? []\r\n        ),\r\n        links: mergeDefinitions(\r\n          meta1.vars.definitions?.links ?? [],\r\n          meta2.vars.definitions?.links ?? []\r\n        ),\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nfunction mergeDefinitions<\r\n  Definitions extends SerializedComponentDefinitions[keyof SerializedComponentDefinitions]\r\n>(definitions1: Definitions, definitions2: Definitions) {\r\n  const mergeDefinitions = [...definitions1];\r\n\r\n  definitions2.forEach((definition) => {\r\n    const isDuplicate = definitions1.some((d) => d.id === definition.id);\r\n\r\n    if (isDuplicate) {\r\n      return;\r\n    }\r\n\r\n    mergeDefinitions.push(definition);\r\n  });\r\n\r\n  return mergeDefinitions;\r\n}\r\n","import { isComponentConfig, isDocument } from \"../checkers\";\r\nimport { NoCodeComponentEntry, Document } from \"../types\";\r\n\r\nfunction validate(input: unknown):\r\n  | {\r\n      isValid: true;\r\n      input: Document | NoCodeComponentEntry | null | undefined;\r\n    }\r\n  | { isValid: false } {\r\n  const isValid =\r\n    input === null ||\r\n    input === undefined ||\r\n    isDocument(input) ||\r\n    isLegacyInput(input);\r\n\r\n  if (!isValid) {\r\n    return {\r\n      isValid: false,\r\n    };\r\n  }\r\n\r\n  return {\r\n    isValid: true,\r\n    input: input as Document | NoCodeComponentEntry | null | undefined,\r\n  };\r\n}\r\n\r\nexport { validate };\r\n\r\nexport function isLegacyInput(input: unknown): input is NoCodeComponentEntry {\r\n  return isComponentConfig(input);\r\n}\r\n","import { isDocument } from \"../checkers\";\r\nimport { NoCodeComponentEntry } from \"../types\";\r\nimport { isLegacyInput } from \"./validation\";\r\n\r\nexport function normalizeInput(input: unknown): NoCodeComponentEntry {\r\n  if (isLegacyInput(input)) {\r\n    return input;\r\n  }\r\n\r\n  if (isDocument(input) && input.entry) {\r\n    return input.entry;\r\n  }\r\n\r\n  throw new Error(\"Internal error: Can't obtain config from remote document.\");\r\n}\r\n","import { mergeCompilationMeta } from \"../mergeCompilationMeta\";\r\nimport { CompilationMetadata, CompilerModule } from \"../../types\";\r\nimport { compileInternal } from \"../compileInternal\";\r\nimport { createCompilationContext } from \"../createCompilationContext\";\r\nimport { normalizeInput } from \"../normalizeInput\";\r\n\r\nexport const compile: CompilerModule[\"compile\"] = (\r\n  content,\r\n  config,\r\n  contextParams\r\n) => {\r\n  let resultMeta: CompilationMetadata = {\r\n    // @ts-expect-error We can leave `devices` and `locale` undefined because these values are set in `compileInternal`.\r\n    vars: {},\r\n    code: {},\r\n  };\r\n\r\n  const compilationContext = createCompilationContext(\r\n    config,\r\n    contextParams,\r\n    content._component\r\n  );\r\n\r\n  const inputConfigComponent = normalizeInput(content);\r\n\r\n  const { meta, compiled, configAfterAuto } = compileInternal(\r\n    inputConfigComponent,\r\n    compilationContext\r\n  );\r\n\r\n  resultMeta = mergeCompilationMeta(resultMeta, meta);\r\n\r\n  return {\r\n    compiled,\r\n    configAfterAuto,\r\n    meta: resultMeta,\r\n  };\r\n};\r\n","import {\r\n  getExternalReferenceLocationKey,\r\n  isLocalTextReference,\r\n} from \"../../resourcesUtils\";\r\nimport {\r\n  isTrulyResponsiveValue,\r\n  responsiveValueEntries,\r\n} from \"../../responsiveness\";\r\nimport {\r\n  CompilerModule,\r\n  ExternalReference,\r\n  ExternalSchemaProp,\r\n  ExternalWithSchemaProp,\r\n  NoCodeComponentDefinition,\r\n} from \"../../types\";\r\nimport { configTraverse } from \"../configTraverse\";\r\nimport { createCompilationContext } from \"../createCompilationContext\";\r\nimport { normalize } from \"../normalize\";\r\nimport { normalizeInput } from \"../normalizeInput\";\r\nimport { isExternalSchemaProp } from \"../schema\";\r\n\r\nexport const findExternals: CompilerModule[\"findExternals\"] = (\r\n  input,\r\n  config,\r\n  contextParams\r\n) => {\r\n  const inputConfigComponent = normalizeInput(input);\r\n  const externalsWithSchemaProps: ExternalWithSchemaProp[] = [];\r\n  const compilationContext = createCompilationContext(\r\n    config,\r\n    contextParams,\r\n    input._component\r\n  );\r\n  const normalizedConfig = normalize(inputConfigComponent, compilationContext);\r\n\r\n  configTraverse(\r\n    normalizedConfig,\r\n    compilationContext,\r\n    ({ config, value, schemaProp }) => {\r\n      // This kinda tricky, because \"text\" is a special case. It can be either local or external.\r\n      // To prevent false positives, we need to check if it's local text reference and make sure that we won't\r\n      // treat \"text\" that's actually external as non external.\r\n      if (\r\n        (schemaProp.type === \"text\" && isLocalTextReference(value, \"text\")) ||\r\n        (schemaProp.type !== \"text\" &&\r\n          !isExternalSchemaProp(schemaProp, compilationContext.types))\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const hasInputComponentRootParams =\r\n        compilationContext.definitions.components.some(\r\n          (c: NoCodeComponentDefinition) =>\r\n            c.id === normalizedConfig._component && c.rootParams !== undefined\r\n        );\r\n\r\n      const configId =\r\n        normalizedConfig._id === config._id && hasInputComponentRootParams\r\n          ? \"$\"\r\n          : config._id;\r\n\r\n      if (isTrulyResponsiveValue(value)) {\r\n        responsiveValueEntries(value).forEach(([breakpoint, currentValue]) => {\r\n          if (currentValue === undefined) {\r\n            return;\r\n          }\r\n\r\n          externalsWithSchemaProps.push({\r\n            id: getExternalReferenceLocationKey(\r\n              configId,\r\n              schemaProp.prop,\r\n              breakpoint\r\n            ),\r\n            schemaProp: schemaProp as ExternalSchemaProp,\r\n            externalReference: currentValue as ExternalReference,\r\n          });\r\n        });\r\n      } else {\r\n        externalsWithSchemaProps.push({\r\n          id: getExternalReferenceLocationKey(configId, schemaProp.prop),\r\n          schemaProp: schemaProp as ExternalSchemaProp,\r\n          externalReference: value as ExternalReference,\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  return externalsWithSchemaProps;\r\n};\r\n","import { isLocalTextReference } from \"./resourcesUtils\";\r\nimport type {\r\n  RequestedExternalData,\r\n  CompilationMetadata,\r\n  CompiledShopstoryComponentConfig,\r\n  CompilerModule,\r\n  NoCodeComponentEntry,\r\n  Config,\r\n  ExternalData,\r\n  ExternalParams,\r\n  ExternalReference,\r\n  ExternalSchemaProp,\r\n  ExternalWithSchemaProp,\r\n} from \"./types\";\r\nimport { compile, findExternals, validate } from \"./compiler\";\r\n\r\ntype BuildEntryOptions = {\r\n  entry: NoCodeComponentEntry;\r\n  config: Config;\r\n  locale: string;\r\n  compiler?: CompilerModule;\r\n  externalData?: ExternalData;\r\n  isExternalDataChanged?: (\r\n    externalData: {\r\n      id: string;\r\n      externalId: ExternalReference[\"id\"];\r\n    },\r\n    defaultIsExternalDataChanged: (externalData: {\r\n      id: string;\r\n      externalId: ExternalReference[\"id\"];\r\n    }) => boolean\r\n  ) => boolean;\r\n};\r\n\r\nconst defaultCompiler: CompilerModule = {\r\n  compile,\r\n  findExternals,\r\n  validate,\r\n};\r\n\r\nfunction buildEntry({\r\n  entry,\r\n  config,\r\n  locale,\r\n  compiler = defaultCompiler,\r\n  externalData = {},\r\n  isExternalDataChanged,\r\n}: BuildEntryOptions): {\r\n  renderableContent: CompiledShopstoryComponentConfig;\r\n  meta: CompilationMetadata;\r\n  externalData: RequestedExternalData;\r\n  configAfterAuto?: NoCodeComponentEntry;\r\n} {\r\n  if (!compiler.validate(entry)) {\r\n    throw new Error(\"Invalid entry\");\r\n  }\r\n\r\n  const contextParams = { locale };\r\n  const compilationResult = compiler.compile(entry, config, contextParams);\r\n  const resourcesWithSchemaProps = compiler.findExternals(\r\n    entry,\r\n    config,\r\n    contextParams\r\n  );\r\n\r\n  const pendingExternalData = findChangedExternalData(\r\n    resourcesWithSchemaProps,\r\n    externalData,\r\n    isExternalDataChanged\r\n  );\r\n\r\n  return {\r\n    renderableContent: compilationResult.compiled,\r\n    meta: compilationResult.meta,\r\n    externalData: pendingExternalData,\r\n    configAfterAuto: compilationResult.configAfterAuto,\r\n  };\r\n}\r\n\r\nexport { buildEntry };\r\n\r\nfunction findChangedExternalData(\r\n  resourcesWithSchemaProps: Array<ExternalWithSchemaProp>,\r\n  externalData: ExternalData,\r\n  isExternalDataPending: BuildEntryOptions[\"isExternalDataChanged\"]\r\n) {\r\n  const changedExternalData: RequestedExternalData = {};\r\n\r\n  function defaultIsExternalDataPending(\r\n    id: string,\r\n    resource: { id: string; externalId: ExternalReference[\"id\"] },\r\n    type: string\r\n  ) {\r\n    // If null, then it's empty external value and it's not pending\r\n    if (resource.externalId === null) {\r\n      return false;\r\n    }\r\n\r\n    // If it's already fetched, then it's not pending\r\n    if (externalData[id]) {\r\n      return false;\r\n    }\r\n\r\n    // If id is a string and it's either local text reference or a reference to document's data, then it's not pending\r\n    if (\r\n      typeof resource.externalId === \"string\" &&\r\n      (isLocalTextReference(\r\n        {\r\n          id: resource.externalId,\r\n        },\r\n        type\r\n      ) ||\r\n        resource.externalId.startsWith(\"$.\"))\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  resourcesWithSchemaProps.forEach(({ id, externalReference, schemaProp }) => {\r\n    const params = getExternalTypeParams(schemaProp);\r\n\r\n    const externalData = {\r\n      id,\r\n      externalId: externalReference.id,\r\n    };\r\n\r\n    if (isExternalDataPending) {\r\n      if (\r\n        !isExternalDataPending(externalData, (resource) => {\r\n          return defaultIsExternalDataPending(id, resource, schemaProp.type);\r\n        })\r\n      ) {\r\n        return;\r\n      }\r\n    } else {\r\n      const isPendingDefault = defaultIsExternalDataPending(\r\n        id,\r\n        externalData,\r\n        schemaProp.type\r\n      );\r\n\r\n      if (!isPendingDefault) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (changedExternalData[id]) {\r\n      return;\r\n    }\r\n\r\n    changedExternalData[id] = {\r\n      id: externalReference.id,\r\n      widgetId: externalReference.widgetId,\r\n      params,\r\n    };\r\n  });\r\n\r\n  return changedExternalData;\r\n}\r\n\r\nfunction getExternalTypeParams(\r\n  schemaProp: ExternalSchemaProp\r\n): ExternalParams | undefined {\r\n  if (schemaProp.type === \"text\") {\r\n    return;\r\n  }\r\n\r\n  return schemaProp.params;\r\n}\r\n","import { buildEntry } from \"./buildEntry\";\r\nimport type {\r\n  RequestedExternalData,\r\n  Document,\r\n  Config,\r\n  RenderableDocument,\r\n} from \"./types\";\r\nimport { serialize } from \"@/utils\";\r\n\r\nasync function buildDocument({\r\n  documentId,\r\n  config,\r\n  locale,\r\n}: {\r\n  documentId: string;\r\n  config: Config;\r\n  locale: string;\r\n}): Promise<{\r\n  renderableDocument: RenderableDocument;\r\n  externalData: RequestedExternalData;\r\n}> {\r\n  const { entry } = await resolveEntryForDocument({\r\n    documentId,\r\n    config,\r\n    locale,\r\n  });\r\n\r\n  const { meta, externalData, renderableContent, configAfterAuto } = buildEntry(\r\n    {\r\n      entry,\r\n      config,\r\n      locale,\r\n    }\r\n  );\r\n\r\n  return {\r\n    renderableDocument: {\r\n      renderableContent,\r\n      meta: serialize(meta),\r\n      configAfterAuto,\r\n    },\r\n    externalData,\r\n  };\r\n}\r\n\r\nexport { buildDocument };\r\n\r\nasync function resolveEntryForDocument({\r\n  documentId,\r\n  config,\r\n  locale,\r\n}: {\r\n  documentId: string;\r\n  config: Config;\r\n  locale: string;\r\n}): Promise<Document> {\r\n  try {\r\n    const documentResponse = await config.backend.documents.get({\r\n      id: documentId,\r\n      locale,\r\n    });\r\n\r\n    if (!documentResponse) {\r\n      throw new Error(`Document with id ${documentId} not found.`);\r\n    }\r\n\r\n    return documentResponse;\r\n  } catch {\r\n    throw new Error(`Error fetching document with id ${documentId}.`);\r\n  }\r\n}\r\n","import React, { ReactElement, ReactNode } from \"react\";\r\n\r\ninterface RichTextProps {\r\n  elements: Array<ReactElement>;\r\n  Root: ReactElement<{ children: ReactNode }>;\r\n}\r\n\r\nfunction RichTextClient(props: RichTextProps) {\r\n  const { elements: Elements, Root } = props;\r\n\r\n  return (\r\n    <Root.type {...Root.props}>\r\n      {Elements.map((Element, index) => {\r\n        return <Element.type {...Element.props} key={index} />;\r\n      })}\r\n    </Root.type>\r\n  );\r\n}\r\n\r\nexport { RichTextClient };\r\n","import React, { ReactElement } from \"react\";\r\nimport type { CompiledNoCodeComponentProps } from \"../../../types\";\r\nimport type { RichTextBlockElementComponentConfig } from \"./$richTextBlockElement\";\r\n\r\ntype RichTextBlockElementProps = CompiledNoCodeComponentProps<\r\n  RichTextBlockElementComponentConfig[\"_component\"],\r\n  Pick<RichTextBlockElementComponentConfig, \"type\">\r\n> & {\r\n  elements: Array<ReactElement>;\r\n  Paragraph: ReactElement;\r\n  BulletedList: ReactElement;\r\n  NumberedList: ReactElement;\r\n};\r\n\r\nexport function RichTextBlockElementClient(props: RichTextBlockElementProps) {\r\n  const {\r\n    type,\r\n    BulletedList,\r\n    elements: Elements,\r\n    NumberedList,\r\n    Paragraph,\r\n  } = props;\r\n\r\n  const elements = Elements.map((Element, index) => (\r\n    <Element.type {...Element.props} key={index} />\r\n  ));\r\n\r\n  if (type === \"paragraph\") {\r\n    return <Paragraph.type {...Paragraph.props}>{elements}</Paragraph.type>;\r\n  }\r\n\r\n  if (type === \"bulleted-list\") {\r\n    return (\r\n      <BulletedList.type {...BulletedList.props}>{elements}</BulletedList.type>\r\n    );\r\n  }\r\n\r\n  if (type === \"numbered-list\") {\r\n    return (\r\n      <NumberedList.type {...NumberedList.props}>{elements}</NumberedList.type>\r\n    );\r\n  }\r\n\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.warn(`Unknown @easyblocks/rich-text-block-element type \"${type}\"`);\r\n  }\r\n\r\n  return <div>{elements}</div>;\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport type { RichTextBlockElementType } from \"../$richTextBlockElement/$richTextBlockElement\";\r\n\r\ntype RichTextLineElementProps = {\r\n  blockType: RichTextBlockElementType;\r\n  elements: Array<React.ReactElement>;\r\n  ListItem: ReactElement;\r\n  TextLine: ReactElement;\r\n};\r\n\r\nexport function RichTextLineElementClient(props: RichTextLineElementProps) {\r\n  const { blockType, elements: Elements, ListItem, TextLine } = props;\r\n  const elements = Elements.map((Element, index) => (\r\n    <Element.type {...Element.props} key={index} />\r\n  ));\r\n\r\n  if (blockType === \"paragraph\") {\r\n    return <TextLine.type {...TextLine.props}>{elements}</TextLine.type>;\r\n  }\r\n\r\n  if (blockType === \"bulleted-list\" || blockType === \"numbered-list\") {\r\n    return (\r\n      <ListItem.type {...ListItem.props}>\r\n        <div>{elements}</div>\r\n      </ListItem.type>\r\n    );\r\n  }\r\n\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.warn(\r\n      `Unknown @easyblocks/rich-text-line-element blockType \"${blockType}\"`\r\n    );\r\n  }\r\n\r\n  return <div>{elements}</div>;\r\n}\r\n","import { cleanString } from \"@/utils\";\r\nimport React, { ReactElement } from \"react\";\r\n\r\ntype TextProps = {\r\n  value?: string;\r\n  Text: ReactElement;\r\n};\r\n\r\nfunction TextClient(props: TextProps) {\r\n  const { value, Text } = props;\r\n\r\n  // We need to transform new lines into <br />\r\n  const lines = cleanString(value || \"\").split(/(?:\\r\\n|\\r|\\n)/g);\r\n\r\n  const elements: React.ReactElement[] = [];\r\n\r\n  lines.forEach((line, index) => {\r\n    elements.push(<React.Fragment key={index}>{line}</React.Fragment>);\r\n    if (index !== lines.length - 1) {\r\n      elements.push(<br key={\"br\" + index} />);\r\n    }\r\n  });\r\n\r\n  return <Text.type {...Text.props}>{elements}</Text.type>;\r\n}\r\n\r\nexport { TextClient };\r\n","import React, { CSSProperties } from \"react\";\r\nimport { ComponentDefinitionShared } from \"../types\";\r\n\r\ntype MissingComponentType = \"BUTTON\" | \"CARD\" | \"SECTION\";\r\n\r\nconst rootStyles: CSSProperties = {\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst ratioStyles: (props: {\r\n  type?: MissingComponentType;\r\n}) => CSSProperties = ({ type }) => {\r\n  return {\r\n    paddingBottom: (() => {\r\n      if (type === \"SECTION\") {\r\n        return \"50%\";\r\n      }\r\n      if (type === \"CARD\") {\r\n        return \"133%\";\r\n      }\r\n      return \"auto\";\r\n    })(),\r\n\r\n    display: type === \"BUTTON\" ? \"none\" : \"block\",\r\n    height: type === \"BUTTON\" ? \"50px\" : \"auto\",\r\n  };\r\n};\r\n\r\nconst contentStyles: (props: {\r\n  type?: MissingComponentType;\r\n  error?: boolean;\r\n}) => CSSProperties = ({ type, error }) => {\r\n  return {\r\n    position: type === \"CARD\" || type === \"SECTION\" ? \"absolute\" : \"static\",\r\n    boxSizing: \"border-box\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: error ? \"red\" : \"grey\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontFamily: \"sans-serif\",\r\n    textAlign: \"center\",\r\n    fontSize: \"14px\",\r\n    minHeight: \"40px\",\r\n    padding: type === \"CARD\" || type === \"SECTION\" ? \"32px\" : \"0.5em 0.5em\",\r\n  };\r\n};\r\n\r\ntype MissingComponentBuilderProps = {\r\n  component?: ComponentDefinitionShared;\r\n  children?: React.ReactNode;\r\n  error?: boolean;\r\n};\r\n\r\nfunction MissingComponent({\r\n  component,\r\n  children,\r\n  error,\r\n}: MissingComponentBuilderProps) {\r\n  const isButton =\r\n    component?.type === \"button\" ||\r\n    (Array.isArray(component?.type) && component?.type.includes(\"button\"));\r\n  const isSection =\r\n    component?.type === \"section\" ||\r\n    (Array.isArray(component?.type) && component?.type.includes(\"section\"));\r\n  const isCard =\r\n    component?.type === \"card\" ||\r\n    (Array.isArray(component?.type) && component?.type.includes(\"card\"));\r\n\r\n  let type: MissingComponentType | undefined;\r\n\r\n  if (isSection) {\r\n    type = \"SECTION\";\r\n  } else if (isCard) {\r\n    type = \"CARD\";\r\n  } else if (isButton) {\r\n    type = \"BUTTON\";\r\n  }\r\n\r\n  return (\r\n    <div style={rootStyles}>\r\n      <div style={ratioStyles({ type })} />\r\n      <div style={contentStyles({ type, error })}>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { MissingComponent };\r\n","\"use client\";\r\nimport React, { ReactElement, useEffect } from \"react\";\r\nimport { RichTextClient } from \"../compiler/builtins/$richText/$richText.client\";\r\nimport { RichTextBlockElementClient } from \"../compiler/builtins/$richText/$richTextBlockElement/$richTextBlockElement.client\";\r\nimport { RichTextLineElementClient } from \"../compiler/builtins/$richText/$richTextLineElement/$richTextLineElement.client\";\r\nimport { RichTextPartClient } from \"../compiler/builtins/$richText/$richTextPart/$richTextPart.client\";\r\nimport { TextClient } from \"../compiler/builtins/$text/$text.client\";\r\nimport { ExternalData, RenderableDocument } from \"../types\";\r\nimport {\r\n  ComponentBuilder,\r\n  ComponentBuilderProps,\r\n} from \"./ComponentBuilder/ComponentBuilder\";\r\nimport { EasyblocksExternalDataProvider } from \"./EasyblocksExternalDataProvider\";\r\nimport { EasyblocksMetadataProvider } from \"./EasyblocksMetadataProvider\";\r\nimport { MissingComponent } from \"./MissingComponent\";\r\n\r\nexport type EasyblocksProps = {\r\n  renderableDocument: RenderableDocument;\r\n  externalData?: ExternalData;\r\n  components?: Record<string, React.ComponentType<any>>;\r\n  componentOverrides?: ComponentOverrides;\r\n};\r\n\r\nexport type ComponentOverrides = Record<string, ReactElement>;\r\n\r\nconst builtinComponents: ComponentBuilderProps[\"components\"] = {\r\n  \"@easyblocks/missing-component\": MissingComponent,\r\n  \"@easyblocks/rich-text.client\": RichTextClient,\r\n  \"@easyblocks/rich-text-block-element\": RichTextBlockElementClient,\r\n  \"@easyblocks/rich-text-line-element\": RichTextLineElementClient,\r\n  \"@easyblocks/rich-text-part\": RichTextPartClient,\r\n  \"@easyblocks/text.client\": TextClient,\r\n  \"EditableComponentBuilder.client\": ComponentBuilder,\r\n};\r\n\r\nfunction Easyblocks({\r\n  renderableDocument,\r\n  externalData,\r\n  componentOverrides,\r\n  components,\r\n}: EasyblocksProps) {\r\n  useEffect(() => {\r\n    document.documentElement.style.setProperty(\r\n      \"--shopstory-viewport-width\",\r\n      `calc(100vw - ${\r\n        window.innerWidth - document.documentElement.clientWidth\r\n      }px)`\r\n    );\r\n  });\r\n\r\n  const renderableContent = renderableDocument.renderableContent;\r\n\r\n  if (renderableContent === null) {\r\n    return null;\r\n  }\r\n\r\n  if (componentOverrides) {\r\n    const overridesEntries = Object.entries(componentOverrides);\r\n\r\n    overridesEntries.forEach(([componentProp, componentOverride]) => {\r\n      renderableContent.components[componentProp] = [componentOverride];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <EasyblocksMetadataProvider meta={renderableDocument.meta}>\r\n      <EasyblocksExternalDataProvider externalData={externalData ?? {}}>\r\n        <ComponentBuilder\r\n          compiled={renderableContent}\r\n          path={\"\"}\r\n          components={{\r\n            ...components,\r\n            ...builtinComponents,\r\n          }}\r\n        />\r\n      </EasyblocksExternalDataProvider>\r\n    </EasyblocksMetadataProvider>\r\n  );\r\n}\r\n\r\nexport { Easyblocks };\r\n","export function isNoCodeComponentOfType(\r\n  definition: { type?: string | string[] },\r\n  type: string\r\n) {\r\n  if (!definition.type) {\r\n    return false;\r\n  }\r\n\r\n  if (typeof definition.type === \"string\") {\r\n    return type === definition.type;\r\n  }\r\n\r\n  return definition.type.includes(type);\r\n}\r\n"],"names":["pxKeys","margin","marginTop","marginBottom","marginLeft","marginRight","m","mt","mb","ml","mr","mx","my","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","p","pt","pb","pl","pr","px","py","top","bottom","left","right","flexBasis","gridColumnGap","gridRowGap","numericToPx","input","ret","key","box","styles","tag","__isBox","__as","responsiveValueSet","responsiveValue","deviceId","value","devices","trulyResponsive","isTrulyResponsiveValue","$res","forEach","device","id","mergeCompilationMeta","meta1","meta2","Error","vars","definitions","actions","mergeDefinitions","components","textModifiers","links","definitions1","definitions2","definition","isDuplicate","some","d","push","validate","isValid","undefined","isDocument","isLegacyInput","isComponentConfig","normalizeInput","entry","compile","content","config","contextParams","resultMeta","code","compilationContext","createCompilationContext","_component","inputConfigComponent","meta","compiled","configAfterAuto","compileInternal","findExternals","externalsWithSchemaProps","normalizedConfig","normalize","configTraverse","_ref","schemaProp","type","isLocalTextReference","isExternalSchemaProp","types","hasInputComponentRootParams","c","rootParams","configId","_id","responsiveValueEntries","_ref2","breakpoint","currentValue","getExternalReferenceLocationKey","prop","externalReference","defaultCompiler","buildEntry","locale","compiler","externalData","isExternalDataChanged","compilationResult","resourcesWithSchemaProps","pendingExternalData","findChangedExternalData","renderableContent","isExternalDataPending","changedExternalData","defaultIsExternalDataPending","resource","externalId","startsWith","params","getExternalTypeParams","isPendingDefault","widgetId","buildDocument","documentId","resolveEntryForDocument","renderableDocument","serialize","documentResponse","backend","documents","get","RichTextClient","props","elements","Elements","Root","React","createElement","map","Element","index","_extends","RichTextBlockElementClient","BulletedList","NumberedList","Paragraph","process","env","NODE_ENV","console","warn","RichTextLineElementClient","blockType","ListItem","TextLine","TextClient","Text","lines","cleanString","split","line","Fragment","length","rootStyles","position","width","ratioStyles","display","height","contentStyles","error","boxSizing","backgroundColor","color","justifyContent","alignItems","fontFamily","textAlign","fontSize","minHeight","MissingComponent","_ref3","component","children","isButton","Array","isArray","includes","isSection","isCard","style","builtinComponents","RichTextPartClient","ComponentBuilder","Easyblocks","componentOverrides","useEffect","document","documentElement","setProperty","window","innerWidth","clientWidth","overridesEntries","Object","entries","componentProp","componentOverride","EasyblocksMetadataProvider","EasyblocksExternalDataProvider","path","isNoCodeComponentOfType"],"mappings":"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"}