{"version":3,"file":"nonNullable.cjs","sources":["../../../../src/utils/array/nonNullable.ts"],"sourcesContent":["/**\r\n * Returns a new function that filters nullable elements to be used as callback of `.filter` method.\r\n * It's useful because it has already defined guard which otherwise would be repeated in many places\r\n * and also it automatically changes the return value of filter function by extracting `null` and `undefined` types.\r\n *\r\n * Usage:\r\n * ```\r\n * const onlyNonNullable = nullableElements.filter<TypeOfCollectionItem>(nonNullable())\r\n * ```\r\n */\r\nfunction nonNullable() {\r\n  return function <T extends Array<any>>(\r\n    value: T[number]\r\n  ): value is NonNullable<T[number]> {\r\n    return value != null;\r\n  };\r\n}\r\n\r\nexport { nonNullable };\r\n"],"names":["nonNullable","value"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAWA,GAAG;EACrB,OAAO,UACLC,KAAgB,EACiB;IACjC,OAAOA,KAAK,IAAI,IAAI,CAAA;GACrB,CAAA;AACH;;;;"}