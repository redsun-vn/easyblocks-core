{"version":3,"file":"buildEntry.cjs","sources":["../../src/buildEntry.ts"],"sourcesContent":["import { isLocalTextReference } from \"./resourcesUtils\";\nimport type {\n  RequestedExternalData,\n  CompilationMetadata,\n  CompiledShopstoryComponentConfig,\n  CompilerModule,\n  NoCodeComponentEntry,\n  Config,\n  ExternalData,\n  ExternalParams,\n  ExternalReference,\n  ExternalSchemaProp,\n  ExternalWithSchemaProp,\n} from \"./types\";\nimport { compile, findExternals, validate } from \"./compiler\";\n\ntype BuildEntryOptions = {\n  entry: NoCodeComponentEntry;\n  config: Config;\n  locale: string;\n  compiler?: CompilerModule;\n  externalData?: ExternalData;\n  isExternalDataChanged?: (\n    externalData: {\n      id: string;\n      externalId: ExternalReference[\"id\"];\n    },\n    defaultIsExternalDataChanged: (externalData: {\n      id: string;\n      externalId: ExternalReference[\"id\"];\n    }) => boolean\n  ) => boolean;\n};\n\nconst defaultCompiler: CompilerModule = {\n  compile,\n  findExternals,\n  validate,\n};\n\nfunction buildEntry({\n  entry,\n  config,\n  locale,\n  compiler = defaultCompiler,\n  externalData = {},\n  isExternalDataChanged,\n}: BuildEntryOptions): {\n  renderableContent: CompiledShopstoryComponentConfig;\n  meta: CompilationMetadata;\n  externalData: RequestedExternalData;\n  configAfterAuto?: NoCodeComponentEntry;\n} {\n  if (!compiler.validate(entry)) {\n    throw new Error(\"Invalid entry\");\n  }\n\n  const contextParams = { locale };\n  const compilationResult = compiler.compile(entry, config, contextParams);\n  const resourcesWithSchemaProps = compiler.findExternals(\n    entry,\n    config,\n    contextParams\n  );\n\n  const pendingExternalData = findChangedExternalData(\n    resourcesWithSchemaProps,\n    externalData,\n    isExternalDataChanged\n  );\n\n  return {\n    renderableContent: compilationResult.compiled,\n    meta: compilationResult.meta,\n    externalData: pendingExternalData,\n    configAfterAuto: compilationResult.configAfterAuto,\n  };\n}\n\nexport { buildEntry };\n\nfunction findChangedExternalData(\n  resourcesWithSchemaProps: Array<ExternalWithSchemaProp>,\n  externalData: ExternalData,\n  isExternalDataPending: BuildEntryOptions[\"isExternalDataChanged\"]\n) {\n  const changedExternalData: RequestedExternalData = {};\n\n  function defaultIsExternalDataPending(\n    id: string,\n    resource: { id: string; externalId: ExternalReference[\"id\"] },\n    type: string\n  ) {\n    // If null, then it's empty external value and it's not pending\n    if (resource.externalId === null) {\n      return false;\n    }\n\n    // If it's already fetched, then it's not pending\n    if (externalData[id]) {\n      return false;\n    }\n\n    // If id is a string and it's either local text reference or a reference to document's data, then it's not pending\n    if (\n      typeof resource.externalId === \"string\" &&\n      (isLocalTextReference(\n        {\n          id: resource.externalId,\n        },\n        type\n      ) ||\n        resource.externalId.startsWith(\"$.\"))\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  resourcesWithSchemaProps.forEach(({ id, externalReference, schemaProp }) => {\n    const params = getExternalTypeParams(schemaProp);\n\n    const externalData = {\n      id,\n      externalId: externalReference.id,\n    };\n\n    if (isExternalDataPending) {\n      if (\n        !isExternalDataPending(externalData, (resource) => {\n          return defaultIsExternalDataPending(id, resource, schemaProp.type);\n        })\n      ) {\n        return;\n      }\n    } else {\n      const isPendingDefault = defaultIsExternalDataPending(\n        id,\n        externalData,\n        schemaProp.type\n      );\n\n      if (!isPendingDefault) {\n        return;\n      }\n    }\n\n    if (changedExternalData[id]) {\n      return;\n    }\n\n    changedExternalData[id] = {\n      id: externalReference.id,\n      widgetId: externalReference.widgetId,\n      params,\n    };\n  });\n\n  return changedExternalData;\n}\n\nfunction getExternalTypeParams(\n  schemaProp: ExternalSchemaProp\n): ExternalParams | undefined {\n  if (schemaProp.type === \"text\") {\n    return;\n  }\n\n  return schemaProp.params;\n}\n"],"names":["defaultCompiler","compile","findExternals","validate","buildEntry","_ref","entry","config","locale","compiler","externalData","isExternalDataChanged","Error","contextParams","compilationResult","resourcesWithSchemaProps","pendingExternalData","findChangedExternalData","renderableContent","compiled","meta","configAfterAuto","isExternalDataPending","changedExternalData","defaultIsExternalDataPending","id","resource","type","externalId","isLocalTextReference","startsWith","forEach","_ref2","externalReference","schemaProp","params","getExternalTypeParams","isPendingDefault","widgetId"],"mappings":"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"}